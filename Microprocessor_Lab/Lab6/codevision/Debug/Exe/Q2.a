;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;// ADC interrupt service routine
;// with auto input scanning
;interrupt [ADC_INT] void adc_isr(void)
; 0002 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0008 static unsigned char input_index=0;
; 0002 0009 // Read the AD conversion result
; 0002 000A adc_data[input_index]=ADCW;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0002 000B // Select next ADC input
; 0002 000C if (++input_index > (LAST_ADC_INPUT-FIRST_ADC_INPUT))
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0002 000D    input_index=0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0002 000E ADMUX=(FIRST_ADC_INPUT | ADC_VREF_TYPE)+input_index;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0002 000F // Delay needed for the stabilization of the ADC input voltage
; 0002 0010 delay_us(10);
;PCODE: $00000022 VOL: 0
; 0002 0011 // Start the AD conversion
; 0002 0012 ADCSRA|=(1<<ADSC);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 0013 }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;
;void init_Q2(){
; 0002 0015 void init_Q2(){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0002 0016 
; 0002 0017 // ADC initialization
; 0002 0018 // ADC Clock frequency: 1000.000 kHz
; 0002 0019 // ADC Voltage Reference: AREF pin
; 0002 001A //ADC Auto Trigger Source: Free Running
; 0002 001B ADMUX=FIRST_ADC_INPUT | ADC_VREF_TYPE;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0002 001C ADCSRA=(1<<ADEN) | (1<<ADSC) | (1<<ADATE) | (0<<ADIF) | (1<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0002 001D SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0002 001E 
; 0002 001F 
; 0002 0020 // Alphanumeric LCD initialization
; 0002 0021 // Connections are specified in the
; 0002 0022 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0002 0023 // RS - PORTC Bit 0
; 0002 0024 // RD - PORTC Bit 1
; 0002 0025 // EN - PORTC Bit 2
; 0002 0026 // D4 - PORTC Bit 4
; 0002 0027 // D5 - PORTC Bit 5
; 0002 0028 // D6 - PORTC Bit 6
; 0002 0029 // D7 - PORTC Bit 7
; 0002 002A // Characters/line: 16
; 0002 002B lcd_init(16);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0002 002C 
; 0002 002D 
; 0002 002E // Global enable interrupts
; 0002 002F #asm("sei")
;PCODE: $00000032 VOL: 0
	sei
;PCODE: $00000033 VOL: 0
; 0002 0030 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;
;void subTask2()
; 0002 0033 {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0002 0034     char msg[20];
; 0002 0035 
; 0002 0036     init_Q2();
;PCODE: $00000038 VOL: 0
;	msg -> Y+0
;PCODE: $00000039 VOL: 0
; 0002 0037 
; 0002 0038     lcd_clear();
;PCODE: $0000003A VOL: 0
; 0002 0039     sprintf(msg, "Q2\nADC0 => %d mV", ((adc_data[0] * 5000)/ 1023) );
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0002 003A     lcd_puts(msg);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0002 003B     delay_ms(500);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0002 003C     subTask3();
;PCODE: $0000004F VOL: 0
; 0002 003D 
; 0002 003E     lcd_clear();
;PCODE: $00000050 VOL: 0
; 0002 003F     sprintf(msg, "Q2\nADC1 => %d mV", ((adc_data[1] * 5000)/ 1023));
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0002 0040     lcd_puts(msg);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0002 0041     delay_ms(500);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0002 0042     subTask3();
;PCODE: $00000066 VOL: 0
; 0002 0043 
; 0002 0044     lcd_clear();
;PCODE: $00000067 VOL: 0
; 0002 0045     sprintf(msg, "Q2\nADC2 => %d mV", ((adc_data[2] * 5000)/ 1023));
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0002 0046     lcd_puts(msg);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0002 0047     delay_ms(500);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0002 0048     subTask3();
;PCODE: $0000007D VOL: 0
; 0002 0049 
; 0002 004A     lcd_clear();
;PCODE: $0000007E VOL: 0
; 0002 004B     sprintf(msg, "Q2\nADC3 => %d mV", ((adc_data[3] * 5000)/ 1023));
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0002 004C     lcd_puts(msg);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0002 004D     delay_ms(500);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0002 004E     subTask3();
;PCODE: $00000094 VOL: 0
; 0002 004F 
; 0002 0050     lcd_clear();
;PCODE: $00000095 VOL: 0
; 0002 0051     sprintf(msg, "Q2\nADC4 => %d mV", ((adc_data[4] * 5000)/ 1023));
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0002 0052     lcd_puts(msg);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0002 0053     delay_ms(500);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0002 0054     subTask3();
;PCODE: $000000AB VOL: 0
; 0002 0055 
; 0002 0056     lcd_clear();
;PCODE: $000000AC VOL: 0
; 0002 0057     sprintf(msg, "Q2\nADC5 => %d mV", ((adc_data[5] * 5000)/ 1023));
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0002 0058     lcd_puts(msg);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0002 0059     delay_ms(500);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0002 005A     subTask3();
;PCODE: $000000C2 VOL: 0
; 0002 005B 
; 0002 005C     lcd_clear();
;PCODE: $000000C3 VOL: 0
; 0002 005D     sprintf(msg, "Q2\nADC6 => %d mV", ((adc_data[6] * 5000)/ 1023));
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0002 005E     lcd_puts(msg);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0002 005F     delay_ms(500);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0002 0060     subTask3();
;PCODE: $000000D9 VOL: 0
; 0002 0061 
; 0002 0062     lcd_clear();
;PCODE: $000000DA VOL: 0
; 0002 0063     sprintf(msg, "Q2\nADC7 => %d mV", ((adc_data[7] * 5000)/ 1023));
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0002 0064     lcd_puts(msg);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0002 0065     delay_ms(500);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0002 0066     subTask3();
;PCODE: $000000F0 VOL: 0
; 0002 0067 }
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0

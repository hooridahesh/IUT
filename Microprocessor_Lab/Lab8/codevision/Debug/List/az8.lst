
AVRASM ver. 2.1.30  C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm Thu Jun 06 18:10:37 2024

C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 	.DEF _j=R6
                 	.DEF _j_msb=R7
                 	.DEF _hour=R8
                 	.DEF _hour_msb=R9
                 	.DEF _minute=R10
                 	.DEF _minute_msb=R11
                 	.DEF _second=R12
                 	.DEF _second_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 02d0 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 03eb 	JMP  _timer1_ovf_isr
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _new_image:
00011c 005a
00011d 003b
00011e 0000
00011f 0000      	.DB  0x5A,0x0,0x3B,0x0,0x0,0x0,0x0,0x0
000120 0000
000121 0000
000122 0000
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000124 0000
000125 80c0
000126 0000
000127 0000      	.DB  0x0,0x0,0xC0,0x80,0x0,0x0,0x0,0x0
000128 0000
000129 0000
00012a 0000
00012b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012c 0000
00012d 0000
00012e 0000
00012f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000130 0000
000131 0000
000132 0000
000133 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000134 0000
000135 0000
000136 0000
000137 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000138 0000
000139 0000
00013a 0000
00013b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013c 0000
00013d 0000
00013e 0000
00013f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000140 0000
000141 0000
000142 8000
000143 40c0      	.DB  0x0,0x0,0x0,0x0,0x0,0x80,0xC0,0x40
000144 2060
000145 3020
000146 0010
000147 0000      	.DB  0x60,0x20,0x20,0x30,0x10,0x0,0x0,0x0
000148 0000
000149 0000
00014a 0000
00014b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014c 0000
00014d 0000
00014e 0000
00014f 0100      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
000150 0603
000151 f008
000152 63e0
000153 3826      	.DB  0x3,0x6,0x8,0xF0,0xE0,0x63,0x26,0x38
000154 1030
000155 2030
000156 c060
000157 0000      	.DB  0x30,0x10,0x30,0x20,0x60,0xC0,0x0,0x0
000158 0000
000159 0000
00015a 0000
00015b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015c 0000
00015d 0000
00015e 0000
00015f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000160 0000
000161 0000
000162 0000
000163 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000164 0000
000165 0000
000166 0000
000167 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000168 0000
000169 0000
00016a 0000
00016b e0c0      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xC0,0xE0
00016c 0c38
00016d 0404
00016e 8604
00016f 0587      	.DB  0x38,0xC,0x4,0x4,0x4,0x86,0x87,0x5
000170 0c04
000171 f038
000172 1810
000173 0c08      	.DB  0x4,0xC,0x38,0xF0,0x10,0x18,0x8,0xC
000174 0204
000175 0002
000176 0000
000177 0000      	.DB  0x4,0x2,0x2,0x0,0x0,0x0,0x0,0x0
000178 0000
000179 0000
00017a 0000
00017b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017c 0000
00017d 0000
00017e 7f7c
00017f 4060      	.DB  0x0,0x0,0x0,0x0,0x7C,0x7F,0x60,0x40
000180 c040
000181 dec6
000182 c0cc
000183 e7e0      	.DB  0x40,0xC0,0xC6,0xDE,0xCC,0xC0,0xE0,0xE7
000184 006f
000185 0000
000186 0000
000187 0000      	.DB  0x6F,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000188 0000
000189 0000
00018a 0000
00018b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00018c 0000
00018d 0000
00018e 8000
00018f 00c0      	.DB  0x0,0x0,0x0,0x0,0x0,0x80,0xC0,0x0
000190 0000
000191 0000
000192 0000
000193 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000194 0000
000195 0000
000196 0000
000197 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000198 0300
000199 080f
00019a 3010
00019b 2120      	.DB  0x0,0x3,0xF,0x8,0x10,0x30,0x20,0x21
00019c 3021
00019d 3030
00019e 0f18
00019f 0000      	.DB  0x21,0x30,0x30,0x30,0x18,0xF,0x0,0x0
0001a0 0000
0001a1 0000
0001a2 0000
0001a3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a4 0000
0001a5 0000
0001a6 0000
0001a7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a8 0000
0001a9 0000
0001aa 0000
0001ab 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ac 0000
0001ad 0000
0001ae 0000
0001af 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b0 0000
0001b1 0000
0001b2 0000
0001b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b4 0000
0001b5 0000
0001b6 0000
0001b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b8 0000
0001b9 0000
0001ba b8e0
0001bb 838e      	.DB  0x0,0x0,0x0,0x0,0xE0,0xB8,0x8E,0x83
0001bc 40c0
0001bd 0040
0001be 0000
0001bf 0000      	.DB  0xC0,0x40,0x40,0x0,0x0,0x0,0x0,0x0
0001c0 0000
0001c1 0000
0001c2 0000
0001c3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c4 0000
0001c5 0000
0001c6 0000
0001c7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c8 0000
0001c9 0000
0001ca 0000
0001cb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001cc 0000
0001cd 0000
0001ce 0000
0001cf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d0 0000
0001d1 0000
0001d2 0000
0001d3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d4 0000
0001d5 0000
0001d6 0000
0001d7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d8 0000
0001d9 0000
0001da 0000
0001db 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001dc 0000
0001dd 8080
0001de 0000
0001df 0000      	.DB  0x0,0x0,0x80,0x80,0x0,0x0,0x0,0x0
0001e0 0000
0001e1 0000
0001e2 0000
0001e3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001e4 0000
0001e5 0000
0001e6 0000
0001e7 0101      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
0001e8 0000
0001e9 0000
0001ea 0000
0001eb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ec 0000
0001ed 0000
0001ee 0000
0001ef 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001f0 0000
0001f1 0000
0001f2 0000
0001f3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001f4 0000
0001f5 c000
0001f6 0000
0001f7 0000      	.DB  0x0,0x0,0x0,0xC0,0x0,0x0,0x0,0x0
0001f8 0000
0001f9 0000
0001fa 0000
0001fb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001fc 0000
0001fd 0000
0001fe 0000
0001ff 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000200 0000
000201 0000
000202 0000
000203 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000204 0000
000205 0000
000206 0000
000207 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000208 0000
000209 3000
00020a 101f
00020b 2010      	.DB  0x0,0x0,0x0,0x30,0x1F,0x10,0x10,0x20
00020c 6020
00020d c040
00020e 8080
00020f 0000      	.DB  0x20,0x60,0x40,0xC0,0x80,0x80,0x0,0x0
000210 0000
000211 0000
000212 0000
000213 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000214 0000
000215 0000
000216 0000
000217 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000218 8080
000219 8080
00021a 8000
00021b 8080      	.DB  0x80,0x80,0x80,0x80,0x0,0x80,0x80,0x80
00021c 4080
00021d 4040
00021e 6040
00021f a0a0      	.DB  0x80,0x40,0x40,0x40,0x40,0x60,0xA0,0xA0
000220 70e0
000221 1830
000222 030c
000223 380e      	.DB  0xE0,0x70,0x30,0x18,0xC,0x3,0xE,0x38
000224 0060
000225 0000
000226 0000
000227 0000      	.DB  0x60,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000228 0000
000229 0000
00022a 0000
00022b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00022c 0000
00022d 0000
00022e 0000
00022f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000230 0000
000231 0000
000232 0000
000233 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000234 0000
000235 0000
000236 0000
000237 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000238 0000
000239 0000
00023a 0000
00023b 0100      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
00023c 0103
00023d 0501
00023e 090c
00023f 1119      	.DB  0x3,0x1,0x1,0x5,0xC,0x9,0x19,0x11
000240 2131
000241 0121
000242 4001
000243 4141      	.DB  0x31,0x21,0x21,0x1,0x1,0x40,0x41,0x41
000244 4141
000245 4041
000246 2060
000247 0020      	.DB  0x41,0x41,0x41,0x40,0x60,0x20,0x20,0x0
000248 1810
000249 0c08
00024a 0604
00024b 0003      	.DB  0x10,0x18,0x8,0xC,0x4,0x6,0x3,0x0
00024c 0001
00024d 0000
00024e 0000
00024f 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000250 0000
000251 0000
000252 0000
000253 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000254 0000
000255 0000
000256 0000
000257 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000258 0000
000259 0000
00025a 0000
00025b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00025c 0000
00025d 0000
00025e 0000
00025f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000260 0000
000261 0000
000262 0000
000263 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000264 0000
000265 0000
000266 0000
000267 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000268 0000
000269 0000
00026a 0000
00026b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00026c 0000
00026d 0000
00026e 0000
00026f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000270 0000
000271 0000
000272 0000
000273 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000274 0000
000275 0000
000276 0000
000277 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000278 0000
000279 0000
00027a 0000
00027b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00027c 0000
00027d 0000
00027e 0000
00027f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000280 0000
000281 0000
000282 0000
000283 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000284 0000
000285 0000      	.DB  0x0,0x0,0x0,0x0
                 _ra:
000286 0000
000287 0032
000288 0048
000289 0048      	.DB  0x0,0x0,0x32,0x0,0x48,0x0,0x48,0x0
00028a 0048
00028b 0030
00028c 0000
00028d 0000      	.DB  0x48,0x0,0x30,0x0,0x0,0x0,0x0,0x0
00028e 0000
00028f 003e
000290 0009
000291 0009      	.DB  0x0,0x0,0x3E,0x0,0x9,0x0,0x9,0x0
000292 0009
000293 003e
000294 0000
000295 0000      	.DB  0x9,0x0,0x3E,0x0,0x0,0x0,0x0,0x0
000296 0000
000297 007c
000298 0010
000299 0010      	.DB  0x0,0x0,0x7C,0x0,0x10,0x0,0x10,0x0
00029a 0010
00029b 007c
00029c 0000
00029d 0000      	.DB  0x10,0x0,0x7C,0x0,0x0,0x0,0x0,0x0
00029e 0000
00029f 003e
0002a0 0049
0002a1 0049      	.DB  0x0,0x0,0x3E,0x0,0x49,0x0,0x49,0x0
0002a2 0049
0002a3 0036
0002a4 0000
0002a5 0000      	.DB  0x49,0x0,0x36,0x0,0x0,0x0,0x0,0x0
                 __glcd_mask:
0002a6 0100
0002a7 0703
0002a8 1f0f
0002a9 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1293): warning: .cseg .db misalignment - padding zero byte
0002aa 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
0002ab 0000
0002ac 001e      	.DB  0x0,0x0,0x1E,0x0
0002ad 0000      	.DB  0x0,0x0
                 
                 _0x40000:
0002ae 0020
0002af 0036
0002b0 0033
0002b1 0039      	.DB  0x20,0x0,0x36,0x0,0x33,0x0,0x39,0x0
0002b2 3231
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1302): warning: .cseg .db misalignment - padding zero byte
0002b3 0000      	.DB  0x31,0x32,0x0
                 _0x20C0060:
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1304): warning: .cseg .db misalignment - padding zero byte
0002b4 0001      	.DB  0x1
                 _0x20C0000:
0002b5 4e2d
0002b6 4e41
0002b7 4900
0002b8 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\user\Desktop\LAB8_SARA_SOLTANI\LAB8_SARA_SOLTANI\codevision\Debug\List\az8.asm(1307): warning: .cseg .db misalignment - padding zero byte
0002b9 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0002ba 0006      	.DW  0x06
0002bb 0008      	.DW  0x08
0002bc 0556      	.DW  __REG_VARS*2
                 
0002bd 0002      	.DW  0x02
0002be 0160      	.DW  _0x40026
0002bf 055c      	.DW  _0x40000*2
                 
0002c0 0002      	.DW  0x02
0002c1 0162      	.DW  _0x40026+2
0002c2 055e      	.DW  _0x40000*2+2
                 
0002c3 0002      	.DW  0x02
0002c4 0164      	.DW  _0x40026+4
0002c5 0560      	.DW  _0x40000*2+4
                 
0002c6 0002      	.DW  0x02
0002c7 0166      	.DW  _0x40026+6
0002c8 0562      	.DW  _0x40000*2+6
                 
0002c9 0003      	.DW  0x03
0002ca 0168      	.DW  _0x40026+8
0002cb 0564      	.DW  _0x40000*2+8
                 
0002cc 0001      	.DW  0x01
0002cd 018b      	.DW  __seed_G106
0002ce 0568      	.DW  _0x20C0060*2
                 
                 _0xFFFFFFFF:
0002cf 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0002d0 94f8      	CLI
0002d1 27ee      	CLR  R30
0002d2 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0002d3 e0f1      	LDI  R31,1
0002d4 bffb      	OUT  GICR,R31
0002d5 bfeb      	OUT  GICR,R30
0002d6 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0002d7 e08d      	LDI  R24,(14-2)+1
0002d8 e0a2      	LDI  R26,2
0002d9 27bb      	CLR  R27
                 __CLEAR_REG:
0002da 93ed      	ST   X+,R30
0002db 958a      	DEC  R24
0002dc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0002dd e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0002de e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0002df e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0002e0 93ed      	ST   X+,R30
0002e1 9701      	SBIW R24,1
0002e2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0002e3 e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0002e4 e0f5      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0002e5 9185      	LPM  R24,Z+
0002e6 9195      	LPM  R25,Z+
0002e7 9700      	SBIW R24,0
0002e8 f061      	BREQ __GLOBAL_INI_END
0002e9 91a5      	LPM  R26,Z+
0002ea 91b5      	LPM  R27,Z+
0002eb 9005      	LPM  R0,Z+
0002ec 9015      	LPM  R1,Z+
0002ed 01bf      	MOVW R22,R30
0002ee 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002ef 9005      	LPM  R0,Z+
0002f0 920d      	ST   X+,R0
0002f1 9701      	SBIW R24,1
0002f2 f7e1      	BRNE __GLOBAL_INI_LOOP
0002f3 01fb      	MOVW R30,R22
0002f4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002f5 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002f6 bfed      	OUT  SPL,R30
0002f7 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002f8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002f9 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002fa e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002fb 940c 02fd 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <headers.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;void main(void)
                 ; 0000 0004 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0005 // Declare your local variables here
                 ; 0000 0006 
                 ; 0000 0007 init();
0002fd d16b      	RCALL _init
                 ; 0000 0008 
                 ; 0000 0009 //picture
                 ; 0000 000A subRoutine2();
0002fe d04d      	RCALL _subRoutine2
                 ; 0000 000B 
                 ; 0000 000C delay_ms(3000);
0002ff eba8      	LDI  R26,LOW(3000)
000300 e0bb      	LDI  R27,HIGH(3000)
000301 940e 1133 	CALL _delay_ms
                 ; 0000 000D 
                 ; 0000 000E //clock
                 ; 0000 000F subRoutine3();
000303 d162      	RCALL _subRoutine3
                 ; 0000 0010 
                 ; 0000 0011 while (1)
                 _0x3:
                 ; 0000 0012       {
                 ; 0000 0013       // Place your code here
                 ; 0000 0014 
                 ; 0000 0015         //dotMatrix
                 ; 0000 0016         subRoutine1();
000304 d002      	RCALL _subRoutine1
                 ; 0000 0017       }
000305 cffe      	RJMP _0x3
                 ; 0000 0018 }
                 _0x6:
000306 cfff      	RJMP _0x6
                 ; .FEND
                 ;
                 ;/****************************************************************************
                 ;Image data created by the LCD Vision V1.05 font & image editor/converter
                 ;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Graphic LCD controller: KS0108 128x64 CS1,CS2
                 ;Image width: 128 pixels
                 ;Image height: 64 pixels
                 ;Color depth: 1 bits/pixel
                 ;Imported image file name: New image
                 ;
                 ;Exported monochrome image data size:
                 ;712 bytes for displays organized as horizontal rows of bytes
                 ;724 bytes for displays organized as rows of vertical bytes.
                 ;****************************************************************************/
                 ;
                 ;flash unsigned char new_image[]=
                 ;{
                 ;/* Image width: 90 pixels */
                 ;0x5A, 0x00,
                 ;/* Image height: 59 pixels */
                 ;0x3B, 0x00,
                 ;#ifndef _GLCD_DATA_BYTEY_
                 ;/* Image data for monochrome displays organized
                 ;   as horizontal rows of bytes */
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
                 ;0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x1C, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
                 ;0x00, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x03, 0x00, 0x00, 0x00, 0x8C, 0x01, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x18, 0x00,
                 ;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0xF8, 0x0F, 0x06, 0x00, 0x00, 0x10, 0x02, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x0C, 0x98, 0x03, 0x00,
                 ;0x00, 0x20, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x04, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0x77, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00,
                 ;0x00, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x03, 0x20, 0x00, 0x00, 0x00, 0x60, 0x80, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x83, 0x21, 0x00, 0x00,
                 ;0x00, 0x20, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00,
                 ;0x86, 0x21, 0x00, 0x00, 0x00, 0x20, 0x8C, 0x01,
                 ;0x00, 0x00, 0x00, 0x00, 0x06, 0x20, 0x00, 0x00,
                 ;0x00, 0x30, 0x9C, 0x01, 0x00, 0x00, 0x00, 0x00,
                 ;0x04, 0x20, 0x00, 0x00, 0x00, 0x30, 0x18, 0x01,
                 ;0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00,
                 ;0x00, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x30, 0x1E, 0x00, 0x00, 0x00, 0x70, 0xC0, 0x01,
                 ;0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x00, 0x00,
                 ;0x00, 0xF0, 0xFF, 0x01, 0x00, 0x40, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00,
                 ;0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x01, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
                 ;0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00,
                 ;0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00,
                 ;0x38, 0x02, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0E,
                 ;0x00, 0x00, 0x00, 0x80, 0x1F, 0x06, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xF8,
                 ;0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0,
                 ;0x00, 0x00, 0xBC, 0x07, 0x07, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x80, 0xEF, 0xDF, 0x07, 0x40,
                 ;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x01, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x38,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x70, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x03,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1F, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00,
                 ;#else
                 ;/* Image data for monochrome displays organized
                 ;   as rows of vertical bytes */
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x80,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x80, 0xC0, 0x40, 0x60, 0x20, 0x20, 0x30,
                 ;0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x01, 0x03, 0x06, 0x08, 0xF0,
                 ;0xE0, 0x63, 0x26, 0x38, 0x30, 0x10, 0x30, 0x20,
                 ;0x60, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0xC0, 0xE0, 0x38, 0x0C, 0x04, 0x04,
                 ;0x04, 0x86, 0x87, 0x05, 0x04, 0x0C, 0x38, 0xF0,
                 ;0x10, 0x18, 0x08, 0x0C, 0x04, 0x02, 0x02, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x7C, 0x7F, 0x60, 0x40, 0x40, 0xC0, 0xC6, 0xDE,
                 ;0xCC, 0xC0, 0xE0, 0xE7, 0x6F, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x08,
                 ;0x10, 0x30, 0x20, 0x21, 0x21, 0x30, 0x30, 0x30,
                 ;0x18, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0xE0, 0xB8, 0x8E, 0x83, 0xC0, 0x40, 0x40, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
                 ;0x1F, 0x10, 0x10, 0x20, 0x20, 0x60, 0x40, 0xC0,
                 ;0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80,
                 ;0x00, 0x80, 0x80, 0x80, 0x80, 0x40, 0x40, 0x40,
                 ;0x40, 0x60, 0xA0, 0xA0, 0xE0, 0x70, 0x30, 0x18,
                 ;0x0C, 0x03, 0x0E, 0x38, 0x60, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x01, 0x05,
                 ;0x0C, 0x09, 0x19, 0x11, 0x31, 0x21, 0x21, 0x01,
                 ;0x01, 0x40, 0x41, 0x41, 0x41, 0x41, 0x41, 0x40,
                 ;0x60, 0x20, 0x20, 0x00, 0x10, 0x18, 0x08, 0x0C,
                 ;0x04, 0x06, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                 ;#endif
                 ;};
                 ;
                 ;#include <headers.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;// Declare your global variables here
                 ;const unsigned short ra[] = {
                 ;    // 32 numbers =>index = [0,31]
                 ;    0x00, 0x32, 0x48, 0x48, 0x48, 0x30, 0x00, 0x00, // Code for char r
                 ;    0x00, 0x3E, 0x09, 0x09, 0x09, 0x3E, 0x00, 0x00, // Code for char a
                 ;    0x00, 0x7C, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, // Code for char h
                 ;    0x00, 0x3E, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, // Code for char d
                 ;};
                 ;int i, j;
                 ;int hour = 0, minute = 30, second = 0;
                 ;
                 ;void subRoutine1(void)
                 ; 0002 000F {
                 
                 	.CSEG
                 _subRoutine1:
                 ; .FSTART _subRoutine1
                 ; 0002 0010     for (i = 0 ; i < 16 ; i++) {
000307 2444      	CLR  R4
000308 2455      	CLR  R5
                 _0x40004:
000309 e1e0      	LDI  R30,LOW(16)
00030a e0f0      	LDI  R31,HIGH(16)
00030b 164e      	CP   R4,R30
00030c 065f      	CPC  R5,R31
00030d f5ec      	BRGE _0x40005
                 ; 0002 0011         for (j = i ; j < i + 16 ; j++) {
00030e 0132      	MOVW R6,R4
                 _0x40007:
00030f 01f2      	MOVW R30,R4
000310 9670      	ADIW R30,16
000311 166e      	CP   R6,R30
000312 067f      	CPC  R7,R31
000313 f59c      	BRGE _0x40008
                 ; 0002 0012             PORTD.7 = ((j-i)<8) ? 0 : 1 ;
000314 01d3      	MOVW R26,R6
000315 19a4      	SUB  R26,R4
000316 09b5      	SBC  R27,R5
000317 9718      	SBIW R26,8
000318 f414      	BRGE _0x40009
000319 e0e0      	LDI  R30,LOW(0)
00031a c001      	RJMP _0x4000A
                 _0x40009:
00031b e0e1      	LDI  R30,LOW(1)
                 _0x4000A:
00031c 30e0      	CPI  R30,0
00031d f411      	BRNE _0x4000C
00031e 9897      	CBI  0x12,7
00031f c001      	RJMP _0x4000D
                 _0x4000C:
000320 9a97      	SBI  0x12,7
                 _0x4000D:
                 ; 0002 0013             PORTA = pow(2, (j-i)%8);
                +
000321 e0e0     +LDI R30 , LOW ( 0x40000000 )
000322 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000323 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000324 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000325 940e 13a7 	CALL __PUTPARD1
000327 01d3      	MOVW R26,R6
000328 19a4      	SUB  R26,R4
000329 09b5      	SBC  R27,R5
00032a e0e8      	LDI  R30,LOW(8)
00032b e0f0      	LDI  R31,HIGH(8)
00032c 940e 1373 	CALL __MODW21
00032e 940e 0f4f 	CALL SUBOPT_0x0
000330 940e 0dee 	CALL _pow
000332 940e 118d 	CALL __CFD1U
000334 bbeb      	OUT  0x1B,R30
                 ; 0002 0014             PORTB = ra[j];
000335 01f3      	MOVW R30,R6
000336 e0ac      	LDI  R26,LOW(_ra*2)
000337 e0b5      	LDI  R27,HIGH(_ra*2)
000338 0fee      	LSL  R30
000339 1fff      	ROL  R31
00033a 0fea      	ADD  R30,R26
00033b 1ffb      	ADC  R31,R27
00033c 9004      	LPM  R0,Z
00033d ba08      	OUT  0x18,R0
                 ; 0002 0015             delay_ms(3);
00033e e0a3      	LDI  R26,LOW(3)
00033f e0b0      	LDI  R27,0
000340 940e 1133 	CALL _delay_ms
                 ; 0002 0016         }
000342 01f3      	MOVW R30,R6
000343 9631      	ADIW R30,1
000344 013f      	MOVW R6,R30
000345 9731      	SBIW R30,1
000346 cfc8      	RJMP _0x40007
                 _0x40008:
                 ; 0002 0017     }
000347 01f2      	MOVW R30,R4
000348 9631      	ADIW R30,1
000349 012f      	MOVW R4,R30
00034a cfbe      	RJMP _0x40004
                 _0x40005:
                 ; 0002 0018 }
00034b 9508      	RET
                 ; .FEND
                 ;
                 ;void subRoutine2()
                 ; 0002 001B {
                 _subRoutine2:
                 ; .FSTART _subRoutine2
                 ; 0002 001C     glcd_putimagef(0, 0, new_image, GLCD_PUTCOPY);
00034c e0e0      	LDI  R30,LOW(0)
00034d 93ea      	ST   -Y,R30
00034e 93ea      	ST   -Y,R30
00034f e3e8      	LDI  R30,LOW(_new_image*2)
000350 e0f2      	LDI  R31,HIGH(_new_image*2)
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 e0a0      	LDI  R26,LOW(0)
000354 940e 094a 	CALL _glcd_putimagef
                 ; 0002 001D }
000356 9508      	RET
                 ; .FEND
                 ;
                 ;float degreeToRadian(float degree)
                 ; 0002 0020 {
                 _degreeToRadian:
                 ; .FSTART _degreeToRadian
                 ; 0002 0021     return degree * (3.14 / 180.0);
000357 940e 0f56 	CALL SUBOPT_0x1
                 ;	degree -> Y+0
                +
000359 eae7     +LDI R30 , LOW ( 0x3C8EE7A7 )
00035a eef7     +LDI R31 , HIGH ( 0x3C8EE7A7 )
00035b e86e     +LDI R22 , BYTE3 ( 0x3C8EE7A7 )
00035c e37c     +LDI R23 , BYTE4 ( 0x3C8EE7A7 )
                 	__GETD1N 0x3C8EE7A7
00035d 940e 1250 	CALL __MULF12
00035f 940c 05a3 	JMP  _0x2100012
                 ; 0002 0022 }
                 ; .FEND
                 ;
                 ;int getX2(int x1, int amount, char unit)
                 ; 0002 0025 {
                 _getX2:
                 ; .FSTART _getX2
                 ; 0002 0026     int x2;
                 ; 0002 0027 
                 ; 0002 0028     switch (unit)
000361 940e 0f5b 	CALL SUBOPT_0x2
                 ;	x1 -> Y+5
                 ;	amount -> Y+3
                 ;	unit -> Y+2
                 ;	x2 -> R16,R17
                 ; 0002 0029     {
                 ; 0002 002A     case 's': // second
000363 f449      	BRNE _0x40011
                 ; 0002 002B         x2 = x1 + (27 * sin(degreeToRadian(6 * amount)));
000364 940e 0f64 	CALL SUBOPT_0x3
000366 940e 0f6b 	CALL SUBOPT_0x4
000368 940e 0f71 	CALL SUBOPT_0x5
00036a 940e 0f7e 	CALL SUBOPT_0x6
                 ; 0002 002C         break;
00036c c019      	RJMP _0x40010
                 ; 0002 002D 
                 ; 0002 002E     case 'm': // minute
                 _0x40011:
00036d 36ed      	CPI  R30,LOW(0x6D)
00036e e0a0      	LDI  R26,HIGH(0x6D)
00036f 07fa      	CPC  R31,R26
000370 f449      	BRNE _0x40012
                 ; 0002 002F         x2 = x1 + (23 * sin(degreeToRadian(6 * amount)));
000371 940e 0f64 	CALL SUBOPT_0x3
000373 940e 0f6b 	CALL SUBOPT_0x4
000375 940e 0f84 	CALL SUBOPT_0x7
000377 940e 0f7e 	CALL SUBOPT_0x6
                 ; 0002 0030         break;
000379 c00c      	RJMP _0x40010
                 ; 0002 0031 
                 ; 0002 0032     case 'h': // hour
                 _0x40012:
00037a 36e8      	CPI  R30,LOW(0x68)
00037b e0a0      	LDI  R26,HIGH(0x68)
00037c 07fa      	CPC  R31,R26
00037d f441      	BRNE _0x40014
                 ; 0002 0033         x2 = x1 + (18 * sin(degreeToRadian(30 * amount)));
00037e 940e 0f91 	CALL SUBOPT_0x8
000380 940e 0f6b 	CALL SUBOPT_0x4
000382 940e 0f98 	CALL SUBOPT_0x9
000384 940e 0f7e 	CALL SUBOPT_0x6
                 ; 0002 0034         break;
                 ; 0002 0035 
                 ; 0002 0036     default:
                 _0x40014:
                 ; 0002 0037         break;
                 ; 0002 0038     }
                 _0x40010:
                 ; 0002 0039 
                 ; 0002 003A     return x2;
000386 c025      	RJMP _0x2100013
                 ; 0002 003B }
                 ; .FEND
                 ;
                 ;int getY2(int y1, int amount, char unit)
                 ; 0002 003E {
                 _getY2:
                 ; .FSTART _getY2
                 ; 0002 003F     int y2;
                 ; 0002 0040 
                 ; 0002 0041     switch (unit)
000387 940e 0f5b 	CALL SUBOPT_0x2
                 ;	y1 -> Y+5
                 ;	amount -> Y+3
                 ;	unit -> Y+2
                 ;	y2 -> R16,R17
                 ; 0002 0042     {
                 ; 0002 0043     case 's': // second
000389 f449      	BRNE _0x40018
                 ; 0002 0044         y2 = y1 - (27 * cos(degreeToRadian(6 * amount)));
00038a 940e 0f64 	CALL SUBOPT_0x3
00038c 940e 0fa5 	CALL SUBOPT_0xA
00038e 940e 0f71 	CALL SUBOPT_0x5
000390 940e 0fab 	CALL SUBOPT_0xB
                 ; 0002 0045         break;
000392 c019      	RJMP _0x40017
                 ; 0002 0046 
                 ; 0002 0047     case 'm': // minute
                 _0x40018:
000393 36ed      	CPI  R30,LOW(0x6D)
000394 e0a0      	LDI  R26,HIGH(0x6D)
000395 07fa      	CPC  R31,R26
000396 f449      	BRNE _0x40019
                 ; 0002 0048         y2 = y1 - (23 * cos(degreeToRadian(6 * amount)));
000397 940e 0f64 	CALL SUBOPT_0x3
000399 940e 0fa5 	CALL SUBOPT_0xA
00039b 940e 0f84 	CALL SUBOPT_0x7
00039d 940e 0fab 	CALL SUBOPT_0xB
                 ; 0002 0049         break;
00039f c00c      	RJMP _0x40017
                 ; 0002 004A 
                 ; 0002 004B     case 'h': // hour
                 _0x40019:
0003a0 36e8      	CPI  R30,LOW(0x68)
0003a1 e0a0      	LDI  R26,HIGH(0x68)
0003a2 07fa      	CPC  R31,R26
0003a3 f441      	BRNE _0x4001B
                 ; 0002 004C         y2 = y1 - (18 * cos(degreeToRadian(30 * amount)));
0003a4 940e 0f91 	CALL SUBOPT_0x8
0003a6 940e 0fa5 	CALL SUBOPT_0xA
0003a8 940e 0f98 	CALL SUBOPT_0x9
0003aa 940e 0fab 	CALL SUBOPT_0xB
                 ; 0002 004D         break;
                 ; 0002 004E 
                 ; 0002 004F     default:
                 _0x4001B:
                 ; 0002 0050         break;
                 ; 0002 0051     }
                 _0x40017:
                 ; 0002 0052 
                 ; 0002 0053     return y2;
                 _0x2100013:
0003ac 01f8      	MOVW R30,R16
0003ad 8119      	LDD  R17,Y+1
0003ae 8108      	LDD  R16,Y+0
0003af 9627      	ADIW R28,7
0003b0 9508      	RET
                 ; 0002 0054 }
                 ; .FEND
                 ;
                 ;void drawLines(int amount, char unit)
                 ; 0002 0057 {
                 _drawLines:
                 ; .FSTART _drawLines
                 ; 0002 0058     int x1=32, x2, y1=31, y2;
                 ; 0002 0059 
                 ; 0002 005A     switch (unit)
0003b1 93aa      	ST   -Y,R26
0003b2 9722      	SBIW R28,2
0003b3 940e 13f3 	CALL __SAVELOCR6
                 ;	amount -> Y+9
                 ;	unit -> Y+8
                 ;	x1 -> R16,R17
                 ;	x2 -> R18,R19
                 ;	y1 -> R20,R21
                 ;	y2 -> Y+6
                +
0003b5 e200     +LDI R16 , LOW ( 32 )
0003b6 e010     +LDI R17 , HIGH ( 32 )
                 	__GETWRN 16,17,32
                +
0003b7 e14f     +LDI R20 , LOW ( 31 )
0003b8 e050     +LDI R21 , HIGH ( 31 )
                 	__GETWRN 20,21,31
0003b9 85e8      	LDD  R30,Y+8
0003ba e0f0      	LDI  R31,0
                 ; 0002 005B     {
                 ; 0002 005C     case 's': //second
0003bb 37e3      	CPI  R30,LOW(0x73)
0003bc e0a0      	LDI  R26,HIGH(0x73)
0003bd 07fa      	CPC  R31,R26
0003be f449      	BRNE _0x4001F
                 ; 0002 005D         x2 = getX2(x1, amount, 's');
0003bf 940e 0fb3 	CALL SUBOPT_0xC
0003c1 e7a3      	LDI  R26,LOW(115)
0003c2 940e 0fba 	CALL SUBOPT_0xD
                 ; 0002 005E         y2 = getY2(y1, amount, 's');
0003c4 e7a3      	LDI  R26,LOW(115)
0003c5 940e 0fc4 	CALL SUBOPT_0xE
                 ; 0002 005F         break;
0003c7 c019      	RJMP _0x4001E
                 ; 0002 0060 
                 ; 0002 0061     case 'm': //minute
                 _0x4001F:
0003c8 36ed      	CPI  R30,LOW(0x6D)
0003c9 e0a0      	LDI  R26,HIGH(0x6D)
0003ca 07fa      	CPC  R31,R26
0003cb f449      	BRNE _0x40020
                 ; 0002 0062         x2 = getX2(x1, amount, 'm');
0003cc 940e 0fb3 	CALL SUBOPT_0xC
0003ce e6ad      	LDI  R26,LOW(109)
0003cf 940e 0fba 	CALL SUBOPT_0xD
                 ; 0002 0063         y2 = getY2(y1, amount, 'm');
0003d1 e6ad      	LDI  R26,LOW(109)
0003d2 940e 0fc4 	CALL SUBOPT_0xE
                 ; 0002 0064         break;
0003d4 c00c      	RJMP _0x4001E
                 ; 0002 0065 
                 ; 0002 0066     case 'h': //hour
                 _0x40020:
0003d5 36e8      	CPI  R30,LOW(0x68)
0003d6 e0a0      	LDI  R26,HIGH(0x68)
0003d7 07fa      	CPC  R31,R26
0003d8 f441      	BRNE _0x40022
                 ; 0002 0067         x2 = getX2(x1, amount, 'h');
0003d9 940e 0fb3 	CALL SUBOPT_0xC
0003db e6a8      	LDI  R26,LOW(104)
0003dc 940e 0fba 	CALL SUBOPT_0xD
                 ; 0002 0068         y2 = getY2(y1, amount, 'h');
0003de e6a8      	LDI  R26,LOW(104)
0003df 940e 0fc4 	CALL SUBOPT_0xE
                 ; 0002 0069         break;
                 ; 0002 006A 
                 ; 0002 006B     default:
                 _0x40022:
                 ; 0002 006C         break;
                 ; 0002 006D     }
                 _0x4001E:
                 ; 0002 006E 
                 ; 0002 006F     glcd_line(x1, y1, x2, y2);
0003e1 930a      	ST   -Y,R16
0003e2 934a      	ST   -Y,R20
0003e3 932a      	ST   -Y,R18
0003e4 85a9      	LDD  R26,Y+9
0003e5 940e 09a1 	CALL _glcd_line
                 ; 0002 0070 }
0003e7 940e 13fa 	CALL __LOADLOCR6
0003e9 962b      	ADIW R28,11
0003ea 9508      	RET
                 ; .FEND
                 ;
                 ;interrupt[TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0002 0073 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0003eb 920a      	ST   -Y,R0
0003ec 921a      	ST   -Y,R1
0003ed 92fa      	ST   -Y,R15
0003ee 936a      	ST   -Y,R22
0003ef 937a      	ST   -Y,R23
0003f0 938a      	ST   -Y,R24
0003f1 939a      	ST   -Y,R25
0003f2 93aa      	ST   -Y,R26
0003f3 93ba      	ST   -Y,R27
0003f4 93ea      	ST   -Y,R30
0003f5 93fa      	ST   -Y,R31
0003f6 b7ef      	IN   R30,SREG
0003f7 93ea      	ST   -Y,R30
                 ; 0002 0074     // Reinitialize Timer1 value
                 ; 0002 0075     TCNT1H = 0x85EE >> 8;
0003f8 e8e5      	LDI  R30,LOW(133)
0003f9 bded      	OUT  0x2D,R30
                 ; 0002 0076     TCNT1L = 0x85EE & 0xff;
0003fa eeee      	LDI  R30,LOW(238)
0003fb bdec      	OUT  0x2C,R30
                 ; 0002 0077 
                 ; 0002 0078     second++;
0003fc 01f6      	MOVW R30,R12
0003fd 9631      	ADIW R30,1
0003fe 016f      	MOVW R12,R30
                 ; 0002 0079     if (second == 60)
0003ff e3ec      	LDI  R30,LOW(60)
000400 e0f0      	LDI  R31,HIGH(60)
000401 15ec      	CP   R30,R12
000402 05fd      	CPC  R31,R13
000403 f4b1      	BRNE _0x40023
                 ; 0002 007A     {
                 ; 0002 007B         second = 0;
000404 24cc      	CLR  R12
000405 24dd      	CLR  R13
                 ; 0002 007C         minute++;
000406 01f5      	MOVW R30,R10
000407 9631      	ADIW R30,1
000408 015f      	MOVW R10,R30
                 ; 0002 007D         if (minute == 60)
000409 e3ec      	LDI  R30,LOW(60)
00040a e0f0      	LDI  R31,HIGH(60)
00040b 15ea      	CP   R30,R10
00040c 05fb      	CPC  R31,R11
00040d f461      	BRNE _0x40024
                 ; 0002 007E         {
                 ; 0002 007F             minute = 0;
00040e 24aa      	CLR  R10
00040f 24bb      	CLR  R11
                 ; 0002 0080             hour++;
000410 01f4      	MOVW R30,R8
000411 9631      	ADIW R30,1
000412 014f      	MOVW R8,R30
                 ; 0002 0081             if (hour == 12)
000413 e0ec      	LDI  R30,LOW(12)
000414 e0f0      	LDI  R31,HIGH(12)
000415 15e8      	CP   R30,R8
000416 05f9      	CPC  R31,R9
000417 f411      	BRNE _0x40025
                 ; 0002 0082             {
                 ; 0002 0083                 hour = 0;
000418 2488      	CLR  R8
000419 2499      	CLR  R9
                 ; 0002 0084             }
                 ; 0002 0085         }
                 _0x40025:
                 ; 0002 0086     }
                 _0x40024:
                 ; 0002 0087     updateClock();
                 _0x40023:
00041a d00e      	RCALL _updateClock
                 ; 0002 0088 }
00041b 91e9      	LD   R30,Y+
00041c bfef      	OUT  SREG,R30
00041d 91f9      	LD   R31,Y+
00041e 91e9      	LD   R30,Y+
00041f 91b9      	LD   R27,Y+
000420 91a9      	LD   R26,Y+
000421 9199      	LD   R25,Y+
000422 9189      	LD   R24,Y+
000423 9179      	LD   R23,Y+
000424 9169      	LD   R22,Y+
000425 90f9      	LD   R15,Y+
000426 9019      	LD   R1,Y+
000427 9009      	LD   R0,Y+
000428 9518      	RETI
                 ; .FEND
                 ;
                 ;void updateClock()
                 ; 0002 008B {
                 _updateClock:
                 ; .FSTART _updateClock
                 ; 0002 008C     glcd_clear();
000429 d155      	RCALL _glcd_clear
                 ; 0002 008D     drawLines(second, 's');
00042a 92da      	ST   -Y,R13
00042b 92ca      	ST   -Y,R12
00042c e7a3      	LDI  R26,LOW(115)
00042d df83      	RCALL _drawLines
                 ; 0002 008E     drawLines(minute, 'm');
00042e 92ba      	ST   -Y,R11
00042f 92aa      	ST   -Y,R10
000430 e6ad      	LDI  R26,LOW(109)
000431 df7f      	RCALL _drawLines
                 ; 0002 008F     drawLines(hour, 'h');
000432 929a      	ST   -Y,R9
000433 928a      	ST   -Y,R8
000434 e6a8      	LDI  R26,LOW(104)
000435 df7b      	RCALL _drawLines
                 ; 0002 0090 
                 ; 0002 0091     glcd_outtextxy(30, 50, " ");
000436 e1ee      	LDI  R30,LOW(30)
000437 93ea      	ST   -Y,R30
000438 e3e2      	LDI  R30,LOW(50)
000439 93ea      	ST   -Y,R30
                +
00043a e6a0     +LDI R26 , LOW ( _0x40026 + ( 0 ) )
00043b e0b1     +LDI R27 , HIGH ( _0x40026 + ( 0 ) )
                 	__POINTW2MN _0x40026,0
00043c 940e 0935 	CALL _glcd_outtextxy
                 ; 0002 0092     glcd_outtextxy(30, 50, "6");
00043e e1ee      	LDI  R30,LOW(30)
00043f 93ea      	ST   -Y,R30
000440 e3e2      	LDI  R30,LOW(50)
000441 93ea      	ST   -Y,R30
                +
000442 e6a2     +LDI R26 , LOW ( _0x40026 + ( 2 ) )
000443 e0b1     +LDI R27 , HIGH ( _0x40026 + ( 2 ) )
                 	__POINTW2MN _0x40026,2
000444 940e 0935 	CALL _glcd_outtextxy
                 ; 0002 0093     glcd_outtextxy(54, 30, "3");
000446 e3e6      	LDI  R30,LOW(54)
000447 93ea      	ST   -Y,R30
000448 e1ee      	LDI  R30,LOW(30)
000449 93ea      	ST   -Y,R30
                +
00044a e6a4     +LDI R26 , LOW ( _0x40026 + ( 4 ) )
00044b e0b1     +LDI R27 , HIGH ( _0x40026 + ( 4 ) )
                 	__POINTW2MN _0x40026,4
00044c 940e 0935 	CALL _glcd_outtextxy
                 ; 0002 0094     glcd_outtextxy(4, 31, "9");
00044e e0e4      	LDI  R30,LOW(4)
00044f 93ea      	ST   -Y,R30
000450 e1ef      	LDI  R30,LOW(31)
000451 93ea      	ST   -Y,R30
                +
000452 e6a6     +LDI R26 , LOW ( _0x40026 + ( 6 ) )
000453 e0b1     +LDI R27 , HIGH ( _0x40026 + ( 6 ) )
                 	__POINTW2MN _0x40026,6
000454 940e 0935 	CALL _glcd_outtextxy
                 ; 0002 0095     glcd_outtextxy(27, 3, "12");
000456 e1eb      	LDI  R30,LOW(27)
000457 93ea      	ST   -Y,R30
000458 e0e3      	LDI  R30,LOW(3)
000459 93ea      	ST   -Y,R30
                +
00045a e6a8     +LDI R26 , LOW ( _0x40026 + ( 8 ) )
00045b e0b1     +LDI R27 , HIGH ( _0x40026 + ( 8 ) )
                 	__POINTW2MN _0x40026,8
00045c 940e 0935 	CALL _glcd_outtextxy
                 ; 0002 0096     glcd_circle(32, 31, 30);
00045e e2e0      	LDI  R30,LOW(32)
00045f 93ea      	ST   -Y,R30
000460 e1ef      	LDI  R30,LOW(31)
000461 93ea      	ST   -Y,R30
000462 e1ae      	LDI  R26,LOW(30)
000463 940e 0c82 	CALL _glcd_circle
                 ; 0002 0097 }
000465 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x40026:
000160           	.BYTE 0xB
                 ;
                 ;void subRoutine3()
                 ; 0002 009A {
                 
                 	.CSEG
                 _subRoutine3:
                 ; .FSTART _subRoutine3
                 ; 0002 009B #asm("sei");
000466 9478      	sei
                 ; 0002 009C     updateClock();
000467 dfc1      	RCALL _updateClock
                 ; 0002 009D }
000468 9508      	RET
                 ; .FEND
                 ;
                 ;void init(void){
                 ; 0002 009F void init(void){
                 _init:
                 ; .FSTART _init
                 ; 0002 00A0 
                 ; 0002 00A1 // Variable used to store graphic display
                 ; 0002 00A2 // controller initialization data
                 ; 0002 00A3 GLCDINIT_t glcd_init_data;
                 ; 0002 00A4 
                 ; 0002 00A5 // Input/Output Ports initialization
                 ; 0002 00A6 // Port A initialization
                 ; 0002 00A7 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 00A8 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000469 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
00046a e0e0      	LDI  R30,LOW(0)
00046b bbea      	OUT  0x1A,R30
                 ; 0002 00A9 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 00AA PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00046c bbeb      	OUT  0x1B,R30
                 ; 0002 00AB 
                 ; 0002 00AC // Port B initialization
                 ; 0002 00AD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 00AE DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00046d bbe7      	OUT  0x17,R30
                 ; 0002 00AF // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 00B0 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00046e bbe8      	OUT  0x18,R30
                 ; 0002 00B1 
                 ; 0002 00B2 // Port C initialization
                 ; 0002 00B3 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 00B4 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00046f bbe4      	OUT  0x14,R30
                 ; 0002 00B5 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 00B6 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000470 bbe5      	OUT  0x15,R30
                 ; 0002 00B7 
                 ; 0002 00B8 // Port D initialization
                 ; 0002 00B9 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0002 00BA DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000471 bbe1      	OUT  0x11,R30
                 ; 0002 00BB // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0002 00BC PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000472 bbe2      	OUT  0x12,R30
                 ; 0002 00BD 
                 ; 0002 00BE // Timer/Counter 0 initialization
                 ; 0002 00BF // Clock source: System Clock
                 ; 0002 00C0 // Clock value: Timer 0 Stopped
                 ; 0002 00C1 // Mode: Normal top=0xFF
                 ; 0002 00C2 // OC0 output: Disconnected
                 ; 0002 00C3 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000473 bfe3      	OUT  0x33,R30
                 ; 0002 00C4 TCNT0=0x00;
000474 bfe2      	OUT  0x32,R30
                 ; 0002 00C5 OCR0=0x00;
000475 bfec      	OUT  0x3C,R30
                 ; 0002 00C6 
                 ; 0002 00C7 // Timer/Counter 1 initialization
                 ; 0002 00C8 // Clock source: System Clock
                 ; 0002 00C9 // Clock value: Timer1 Stopped
                 ; 0002 00CA // Mode: Normal top=0xFFFF
                 ; 0002 00CB // OC1A output: Disconnected
                 ; 0002 00CC // OC1B output: Disconnected
                 ; 0002 00CD // Noise Canceler: Off
                 ; 0002 00CE // Input Capture on Falling Edge
                 ; 0002 00CF // Timer1 Overflow Interrupt: Off
                 ; 0002 00D0 // Input Capture Interrupt: Off
                 ; 0002 00D1 // Compare A Match Interrupt: Off
                 ; 0002 00D2 // Compare B Match Interrupt: Off
                 ; 0002 00D3 TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << WGM11) | (0 << WGM10);
000476 bdef      	OUT  0x2F,R30
                 ; 0002 00D4 TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (1 << CS12) | (0 << CS11) | (0 << CS10);
000477 e0e4      	LDI  R30,LOW(4)
000478 bdee      	OUT  0x2E,R30
                 ; 0002 00D5 TCNT1H = 0x85;
000479 e8e5      	LDI  R30,LOW(133)
00047a bded      	OUT  0x2D,R30
                 ; 0002 00D6 TCNT1L = 0xEE;
00047b eeee      	LDI  R30,LOW(238)
00047c bdec      	OUT  0x2C,R30
                 ; 0002 00D7 ICR1H = 0x00;
00047d e0e0      	LDI  R30,LOW(0)
00047e bde7      	OUT  0x27,R30
                 ; 0002 00D8 ICR1L = 0x00;
00047f bde6      	OUT  0x26,R30
                 ; 0002 00D9 OCR1AH = 0x00;
000480 bdeb      	OUT  0x2B,R30
                 ; 0002 00DA OCR1AL = 0x00;
000481 bdea      	OUT  0x2A,R30
                 ; 0002 00DB OCR1BH = 0x00;
000482 bde9      	OUT  0x29,R30
                 ; 0002 00DC OCR1BL = 0x00;
000483 bde8      	OUT  0x28,R30
                 ; 0002 00DD 
                 ; 0002 00DE //Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0002 00DF TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) | (0 < ...
000484 e0e4      	LDI  R30,LOW(4)
000485 bfe9      	OUT  0x39,R30
                 ; 0002 00E0 
                 ; 0002 00E1 
                 ; 0002 00E2 // External Interrupt(s) initialization
                 ; 0002 00E3 // INT0: Off
                 ; 0002 00E4 // INT1: Off
                 ; 0002 00E5 // INT2: Off
                 ; 0002 00E6 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000486 e0e0      	LDI  R30,LOW(0)
000487 bfe5      	OUT  0x35,R30
                 ; 0002 00E7 MCUCSR=(0<<ISC2);
000488 bfe4      	OUT  0x34,R30
                 ; 0002 00E8 
                 ; 0002 00E9 // USART initialization
                 ; 0002 00EA // USART disabled
                 ; 0002 00EB UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000489 b9ea      	OUT  0xA,R30
                 ; 0002 00EC 
                 ; 0002 00ED // Analog Comparator initialization
                 ; 0002 00EE // Analog Comparator: Off
                 ; 0002 00EF // The Analog Comparator's positive input is
                 ; 0002 00F0 // connected to the AIN0 pin
                 ; 0002 00F1 // The Analog Comparator's negative input is
                 ; 0002 00F2 // connected to the AIN1 pin
                 ; 0002 00F3 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00048a e8e0      	LDI  R30,LOW(128)
00048b b9e8      	OUT  0x8,R30
                 ; 0002 00F4 SFIOR=(0<<ACME);
00048c e0e0      	LDI  R30,LOW(0)
00048d bfe0      	OUT  0x30,R30
                 ; 0002 00F5 
                 ; 0002 00F6 // ADC initialization
                 ; 0002 00F7 // ADC disabled
                 ; 0002 00F8 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00048e b9e6      	OUT  0x6,R30
                 ; 0002 00F9 
                 ; 0002 00FA // SPI initialization
                 ; 0002 00FB // SPI disabled
                 ; 0002 00FC SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00048f b9ed      	OUT  0xD,R30
                 ; 0002 00FD 
                 ; 0002 00FE // TWI initialization
                 ; 0002 00FF // TWI disabled
                 ; 0002 0100 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000490 bfe6      	OUT  0x36,R30
                 ; 0002 0101 
                 ; 0002 0102 // Graphic Display Controller initialization
                 ; 0002 0103 // The KS0108 connections are specified in the
                 ; 0002 0104 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0002 0105 // DB0 - PORTC Bit 0
                 ; 0002 0106 // DB1 - PORTC Bit 1
                 ; 0002 0107 // DB2 - PORTC Bit 2
                 ; 0002 0108 // DB3 - PORTC Bit 3
                 ; 0002 0109 // DB4 - PORTC Bit 4
                 ; 0002 010A // DB5 - PORTC Bit 5
                 ; 0002 010B // DB6 - PORTC Bit 6
                 ; 0002 010C // DB7 - PORTC Bit 7
                 ; 0002 010D // E - PORTD Bit 0
                 ; 0002 010E // RD /WR - PORTD Bit 1
                 ; 0002 010F // RS - PORTD Bit 2
                 ; 0002 0110 // /RST - PORTD Bit 3
                 ; 0002 0111 // CS1 - PORTD Bit 4
                 ; 0002 0112 // CS2 - PORTD Bit 5
                 ; 0002 0113 
                 ; 0002 0114 // Specify the current font for displaying text
                 ; 0002 0115 glcd_init_data.font=font5x7;
000491 e5e4      	LDI  R30,LOW(_font5x7*2)
000492 e0f0      	LDI  R31,HIGH(_font5x7*2)
000493 83e8      	ST   Y,R30
000494 83f9      	STD  Y+1,R31
                 ; 0002 0116 // No function is used for reading
                 ; 0002 0117 // image data from external memory
                 ; 0002 0118 glcd_init_data.readxmem=NULL;
000495 e0e0      	LDI  R30,LOW(0)
000496 83ea      	STD  Y+2,R30
000497 83eb      	STD  Y+2+1,R30
                 ; 0002 0119 // No function is used for writing
                 ; 0002 011A // image data to external memory
                 ; 0002 011B glcd_init_data.writexmem=NULL;
000498 83ec      	STD  Y+4,R30
000499 83ed      	STD  Y+4+1,R30
                 ; 0002 011C 
                 ; 0002 011D glcd_init(&glcd_init_data);
00049a 01de      	MOVW R26,R28
00049b d080      	RCALL _glcd_init
                 ; 0002 011E 
                 ; 0002 011F }
00049c c17e      	RJMP _0x2100010
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _ks0108_enable_G100:
                 ; .FSTART _ks0108_enable_G100
00049d 0000      	nop
00049e 9a90      	SBI  0x12,0
00049f 0000      	nop
0004a0 9508      	RET
                 ; .FEND
                 _ks0108_disable_G100:
                 ; .FSTART _ks0108_disable_G100
0004a1 9890      	CBI  0x12,0
0004a2 9894      	CBI  0x12,4
0004a3 9895      	CBI  0x12,5
0004a4 9508      	RET
                 ; .FEND
                 _ks0108_rdbus_G100:
                 ; .FSTART _ks0108_rdbus_G100
0004a5 931a      	ST   -Y,R17
0004a6 dff6      	RCALL _ks0108_enable_G100
0004a7 b313      	IN   R17,19
0004a8 9890      	CBI  0x12,0
0004a9 2fe1      	MOV  R30,R17
0004aa 9119      	LD   R17,Y+
0004ab 9508      	RET
                 ; .FEND
                 _ks0108_busy_G100:
                 ; .FSTART _ks0108_busy_G100
0004ac 93aa      	ST   -Y,R26
0004ad 931a      	ST   -Y,R17
0004ae e0e0      	LDI  R30,LOW(0)
0004af bbe4      	OUT  0x14,R30
0004b0 9a91      	SBI  0x12,1
0004b1 9892      	CBI  0x12,2
0004b2 81e9      	LDD  R30,Y+1
0004b3 5fef      	SUBI R30,-LOW(1)
0004b4 2f1e      	MOV  R17,R30
0004b5 ff10      	SBRS R17,0
0004b6 c002      	RJMP _0x2000003
0004b7 9a94      	SBI  0x12,4
0004b8 c001      	RJMP _0x2000004
                 _0x2000003:
0004b9 9894      	CBI  0x12,4
                 _0x2000004:
0004ba ff11      	SBRS R17,1
0004bb c002      	RJMP _0x2000005
0004bc 9a95      	SBI  0x12,5
0004bd c001      	RJMP _0x2000006
                 _0x2000005:
0004be 9895      	CBI  0x12,5
                 _0x2000006:
                 _0x2000007:
0004bf dfe5      	RCALL _ks0108_rdbus_G100
0004c0 78e0      	ANDI R30,LOW(0x80)
0004c1 f7e9      	BRNE _0x2000007
0004c2 8118      	LDD  R17,Y+0
0004c3 c362      	RJMP _0x210000E
                 ; .FEND
                 _ks0108_wrcmd_G100:
                 ; .FSTART _ks0108_wrcmd_G100
0004c4 93aa      	ST   -Y,R26
0004c5 81a9      	LDD  R26,Y+1
0004c6 dfe5      	RCALL _ks0108_busy_G100
0004c7 940e 0fc9 	CALL SUBOPT_0xF
0004c9 c35c      	RJMP _0x210000E
                 ; .FEND
                 _ks0108_setloc_G100:
                 ; .FSTART _ks0108_setloc_G100
                +
0004ca 91e0 0189+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
0004cc 93ea      	ST   -Y,R30
0004cd 91e0 0188 	LDS  R30,_ks0108_coord_G100
0004cf 73ef      	ANDI R30,LOW(0x3F)
0004d0 64e0      	ORI  R30,0x40
0004d1 2fae      	MOV  R26,R30
0004d2 dff1      	RCALL _ks0108_wrcmd_G100
                +
0004d3 91e0 0189+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
0004d5 93ea      	ST   -Y,R30
                +
0004d6 91e0 018a+LDS R30 , _ks0108_coord_G100 + ( 2 )
                 	__GETB1MN _ks0108_coord_G100,2
0004d8 6be8      	ORI  R30,LOW(0xB8)
0004d9 2fae      	MOV  R26,R30
0004da dfe9      	RCALL _ks0108_wrcmd_G100
0004db 9508      	RET
                 ; .FEND
                 _ks0108_gotoxp_G100:
                 ; .FSTART _ks0108_gotoxp_G100
0004dc 93aa      	ST   -Y,R26
0004dd 81e9      	LDD  R30,Y+1
0004de 93e0 0188 	STS  _ks0108_coord_G100,R30
0004e0 95e2      	SWAP R30
0004e1 70ef      	ANDI R30,0xF
0004e2 95e6      	LSR  R30
0004e3 95e6      	LSR  R30
                +
0004e4 93e0 0189+STS _ks0108_coord_G100 + ( 1 ) , R30
                 	__PUTB1MN _ks0108_coord_G100,1
0004e6 81e8      	LD   R30,Y
                +
0004e7 93e0 018a+STS _ks0108_coord_G100 + ( 2 ) , R30
                 	__PUTB1MN _ks0108_coord_G100,2
0004e9 dfe0      	RCALL _ks0108_setloc_G100
0004ea c33b      	RJMP _0x210000E
                 ; .FEND
                 _ks0108_nextx_G100:
                 ; .FSTART _ks0108_nextx_G100
0004eb 91a0 0188 	LDS  R26,_ks0108_coord_G100
0004ed 5faf      	SUBI R26,-LOW(1)
0004ee 93a0 0188 	STS  _ks0108_coord_G100,R26
0004f0 38a0      	CPI  R26,LOW(0x80)
0004f1 f018      	BRLO _0x200000A
0004f2 e0e0      	LDI  R30,LOW(0)
0004f3 93e0 0188 	STS  _ks0108_coord_G100,R30
                 _0x200000A:
0004f5 91e0 0188 	LDS  R30,_ks0108_coord_G100
0004f7 73ef      	ANDI R30,LOW(0x3F)
0004f8 f431      	BRNE _0x200000B
0004f9 91e0 0188 	LDS  R30,_ks0108_coord_G100
0004fb 93ea      	ST   -Y,R30
                +
0004fc 91a0 018a+LDS R26 , _ks0108_coord_G100 + ( 2 )
                 	__GETB2MN _ks0108_coord_G100,2
0004fe dfdd      	RCALL _ks0108_gotoxp_G100
                 _0x200000B:
0004ff 9508      	RET
                 ; .FEND
                 _ks0108_wrdata_G100:
                 ; .FSTART _ks0108_wrdata_G100
000500 93aa      	ST   -Y,R26
                +
000501 91a0 0189+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
000503 dfa8      	RCALL _ks0108_busy_G100
000504 9a92      	SBI  0x12,2
000505 940e 0fc9 	CALL SUBOPT_0xF
000507 9621      	ADIW R28,1
000508 9508      	RET
                 ; .FEND
                 _ks0108_rddata_G100:
                 ; .FSTART _ks0108_rddata_G100
                +
000509 91a0 0189+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
00050b dfa0      	RCALL _ks0108_busy_G100
00050c e0e0      	LDI  R30,LOW(0)
00050d bbe4      	OUT  0x14,R30
00050e 9a91      	SBI  0x12,1
00050f 9a92      	SBI  0x12,2
000510 df94      	RCALL _ks0108_rdbus_G100
000511 9508      	RET
                 ; .FEND
                 _ks0108_rdbyte_G100:
                 ; .FSTART _ks0108_rdbyte_G100
000512 93aa      	ST   -Y,R26
000513 81e9      	LDD  R30,Y+1
000514 93ea      	ST   -Y,R30
000515 81e9      	LDD  R30,Y+1
000516 940e 0fd2 	CALL SUBOPT_0x10
000518 dff0      	RCALL _ks0108_rddata_G100
000519 dfb0      	RCALL _ks0108_setloc_G100
00051a dfee      	RCALL _ks0108_rddata_G100
00051b c30a      	RJMP _0x210000E
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00051c 93ba      	ST   -Y,R27
00051d 93aa      	ST   -Y,R26
00051e 931a      	ST   -Y,R17
00051f 9a88      	SBI  0x11,0
000520 9a89      	SBI  0x11,1
000521 9a8a      	SBI  0x11,2
000522 9a8b      	SBI  0x11,3
000523 9a93      	SBI  0x12,3
000524 9a8c      	SBI  0x11,4
000525 9a8d      	SBI  0x11,5
000526 df7a      	RCALL _ks0108_disable_G100
000527 9893      	CBI  0x12,3
000528 e6a4      	LDI  R26,LOW(100)
000529 e0b0      	LDI  R27,0
00052a 940e 1133 	CALL _delay_ms
00052c 9a93      	SBI  0x12,3
00052d e010      	LDI  R17,LOW(0)
                 _0x200000C:
00052e 3012      	CPI  R17,2
00052f f440      	BRSH _0x200000E
000530 931a      	ST   -Y,R17
000531 e3af      	LDI  R26,LOW(63)
000532 df91      	RCALL _ks0108_wrcmd_G100
000533 931a      	ST   -Y,R17
000534 9513      	INC  R17
000535 eca0      	LDI  R26,LOW(192)
000536 df8d      	RCALL _ks0108_wrcmd_G100
000537 cff6      	RJMP _0x200000C
                 _0x200000E:
000538 e0e1      	LDI  R30,LOW(1)
000539 93e0 016b 	STS  _glcd_state,R30
00053b e0e0      	LDI  R30,LOW(0)
                +
00053c 93e0 016c+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00053e 81e9      	LDD  R30,Y+1
00053f 81fa      	LDD  R31,Y+1+1
000540 9730      	SBIW R30,0
000541 f0a9      	BREQ _0x200000F
000542 81a9      	LDD  R26,Y+1
000543 81ba      	LDD  R27,Y+1+1
000544 940e 138f 	CALL __GETW1P
                +
000546 93e0 016f+STS _glcd_state + ( 4 ) , R30
000548 93f0 0170+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00054a 9612      	ADIW R26,2
00054b 940e 138f 	CALL __GETW1P
                +
00054d 93e0 0184+STS _glcd_state + ( 25 ) , R30
00054f 93f0 0185+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000551 81a9      	LDD  R26,Y+1
000552 81ba      	LDD  R27,Y+1+1
000553 9614      	ADIW R26,4
000554 940e 138f 	CALL __GETW1P
000556 c00a      	RJMP _0x20000AC
                 _0x200000F:
000557 e0e0      	LDI  R30,LOW(0)
000558 e0f0      	LDI  R31,HIGH(0)
                +
000559 93e0 016f+STS _glcd_state + ( 4 ) , R30
00055b 93f0 0170+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00055d 93e0 0184+STS _glcd_state + ( 25 ) , R30
00055f 93f0 0185+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000AC:
                +
000561 93e0 0186+STS _glcd_state + ( 27 ) , R30
000563 93f0 0187+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000565 e0e1      	LDI  R30,LOW(1)
                +
000566 93e0 0171+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000568 93e0 0172+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00056a 93e0 0173+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00056c efef      	LDI  R30,LOW(255)
                +
00056d 93e0 0174+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00056f e0e1      	LDI  R30,LOW(1)
                +
000570 93e0 017b+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000572 e7ec     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000573 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000574 93fa      	ST   -Y,R31
000575 93ea      	ST   -Y,R30
000576 efef      	LDI  R30,LOW(255)
000577 93ea      	ST   -Y,R30
000578 e0a8      	LDI  R26,LOW(8)
000579 e0b0      	LDI  R27,0
00057a 940e 0ece 	CALL _memset
00057c d002      	RCALL _glcd_clear
00057d e0e1      	LDI  R30,LOW(1)
00057e c2ce      	RJMP _0x210000D
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00057f 940e 13f5 	CALL __SAVELOCR4
000581 e000      	LDI  R16,0
000582 e030      	LDI  R19,0
                +
000583 91e0 016c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000585 30e0      	CPI  R30,0
000586 f009      	BREQ _0x2000015
000587 ef0f      	LDI  R16,LOW(255)
                 _0x2000015:
                 _0x2000016:
000588 3038      	CPI  R19,8
000589 f478      	BRSH _0x2000018
00058a e0e0      	LDI  R30,LOW(0)
00058b 93ea      	ST   -Y,R30
00058c 2fa3      	MOV  R26,R19
00058d 5f3f      	SUBI R19,-1
00058e df4d      	RCALL _ks0108_gotoxp_G100
00058f e010      	LDI  R17,LOW(0)
                 _0x2000019:
000590 2fa1      	MOV  R26,R17
000591 5f1f      	SUBI R17,-1
000592 38a0      	CPI  R26,LOW(0x80)
000593 f420      	BRSH _0x200001B
000594 2fa0      	MOV  R26,R16
000595 940e 0fd8 	CALL SUBOPT_0x11
000597 cff8      	RJMP _0x2000019
                 _0x200001B:
000598 cfef      	RJMP _0x2000016
                 _0x2000018:
000599 e0e0      	LDI  R30,LOW(0)
00059a 93ea      	ST   -Y,R30
00059b e0a0      	LDI  R26,LOW(0)
00059c df3f      	RCALL _ks0108_gotoxp_G100
00059d e0e0      	LDI  R30,LOW(0)
00059e 93ea      	ST   -Y,R30
00059f e0a0      	LDI  R26,LOW(0)
0005a0 d3f3      	RCALL _glcd_moveto
0005a1 940e 13fc 	CALL __LOADLOCR4
                 _0x2100012:
0005a3 9624      	ADIW R28,4
0005a4 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
0005a5 93aa      	ST   -Y,R26
0005a6 931a      	ST   -Y,R17
0005a7 930a      	ST   -Y,R16
0005a8 81ac      	LDD  R26,Y+4
0005a9 38a0      	CPI  R26,LOW(0x80)
0005aa f418      	BRSH _0x200001D
0005ab 81ab      	LDD  R26,Y+3
0005ac 34a0      	CPI  R26,LOW(0x40)
0005ad f008      	BRLO _0x200001C
                 _0x200001D:
0005ae c016      	RJMP _0x2100011
                 _0x200001C:
0005af 81ec      	LDD  R30,Y+4
0005b0 93ea      	ST   -Y,R30
0005b1 81ac      	LDD  R26,Y+4
0005b2 df5f      	RCALL _ks0108_rdbyte_G100
0005b3 2f1e      	MOV  R17,R30
0005b4 df15      	RCALL _ks0108_setloc_G100
0005b5 81eb      	LDD  R30,Y+3
0005b6 70e7      	ANDI R30,LOW(0x7)
0005b7 e0a1      	LDI  R26,LOW(1)
0005b8 940e 130f 	CALL __LSLB12
0005ba 2f0e      	MOV  R16,R30
0005bb 81ea      	LDD  R30,Y+2
0005bc 30e0      	CPI  R30,0
0005bd f011      	BREQ _0x200001F
0005be 2b10      	OR   R17,R16
0005bf c003      	RJMP _0x2000020
                 _0x200001F:
0005c0 2fe0      	MOV  R30,R16
0005c1 95e0      	COM  R30
0005c2 231e      	AND  R17,R30
                 _0x2000020:
0005c3 2fa1      	MOV  R26,R17
0005c4 df3b      	RCALL _ks0108_wrdata_G100
                 _0x2100011:
0005c5 8119      	LDD  R17,Y+1
0005c6 8108      	LDD  R16,Y+0
0005c7 9625      	ADIW R28,5
0005c8 9508      	RET
                 ; .FEND
                 _glcd_getpixel:
                 ; .FSTART _glcd_getpixel
0005c9 93aa      	ST   -Y,R26
0005ca 81a9      	LDD  R26,Y+1
0005cb 38a0      	CPI  R26,LOW(0x80)
0005cc f418      	BRSH _0x2000022
0005cd 81a8      	LD   R26,Y
0005ce 34a0      	CPI  R26,LOW(0x40)
0005cf f010      	BRLO _0x2000021
                 _0x2000022:
0005d0 e0e0      	LDI  R30,LOW(0)
0005d1 c254      	RJMP _0x210000E
                 _0x2000021:
0005d2 81e9      	LDD  R30,Y+1
0005d3 93ea      	ST   -Y,R30
0005d4 81a9      	LDD  R26,Y+1
0005d5 df3c      	RCALL _ks0108_rdbyte_G100
0005d6 2e1e      	MOV  R1,R30
0005d7 81e8      	LD   R30,Y
0005d8 70e7      	ANDI R30,LOW(0x7)
0005d9 e0a1      	LDI  R26,LOW(1)
0005da 940e 130f 	CALL __LSLB12
0005dc 21e1      	AND  R30,R1
0005dd f011      	BREQ _0x2000024
0005de e0e1      	LDI  R30,LOW(1)
0005df c001      	RJMP _0x2000025
                 _0x2000024:
0005e0 e0e0      	LDI  R30,LOW(0)
                 _0x2000025:
0005e1 c244      	RJMP _0x210000E
                 ; .FEND
                 _ks0108_wrmasked_G100:
                 ; .FSTART _ks0108_wrmasked_G100
0005e2 93aa      	ST   -Y,R26
0005e3 931a      	ST   -Y,R17
0005e4 81ed      	LDD  R30,Y+5
0005e5 93ea      	ST   -Y,R30
0005e6 81ad      	LDD  R26,Y+5
0005e7 df2a      	RCALL _ks0108_rdbyte_G100
0005e8 2f1e      	MOV  R17,R30
0005e9 dee0      	RCALL _ks0108_setloc_G100
0005ea 81e9      	LDD  R30,Y+1
0005eb 30e7      	CPI  R30,LOW(0x7)
0005ec f011      	BREQ _0x200002B
0005ed 30e8      	CPI  R30,LOW(0x8)
0005ee f439      	BRNE _0x200002C
                 _0x200002B:
0005ef 81eb      	LDD  R30,Y+3
0005f0 93ea      	ST   -Y,R30
0005f1 81aa      	LDD  R26,Y+2
0005f2 940e 0ee9 	CALL _glcd_mappixcolor1bit
0005f4 83eb      	STD  Y+3,R30
0005f5 c008      	RJMP _0x200002D
                 _0x200002C:
0005f6 30e3      	CPI  R30,LOW(0x3)
0005f7 f421      	BRNE _0x200002F
0005f8 81eb      	LDD  R30,Y+3
0005f9 95e0      	COM  R30
0005fa 83eb      	STD  Y+3,R30
0005fb c002      	RJMP _0x2000030
                 _0x200002F:
0005fc 30e0      	CPI  R30,0
0005fd f421      	BRNE _0x2000031
                 _0x2000030:
                 _0x200002D:
0005fe 81ea      	LDD  R30,Y+2
0005ff 95e0      	COM  R30
000600 231e      	AND  R17,R30
000601 c002      	RJMP _0x2000032
                 _0x2000031:
000602 30e2      	CPI  R30,LOW(0x2)
000603 f429      	BRNE _0x2000033
                 _0x2000032:
000604 81ea      	LDD  R30,Y+2
000605 81ab      	LDD  R26,Y+3
000606 23ea      	AND  R30,R26
000607 2b1e      	OR   R17,R30
000608 c00e      	RJMP _0x2000029
                 _0x2000033:
000609 30e1      	CPI  R30,LOW(0x1)
00060a f429      	BRNE _0x2000034
00060b 81ea      	LDD  R30,Y+2
00060c 81ab      	LDD  R26,Y+3
00060d 23ea      	AND  R30,R26
00060e 271e      	EOR  R17,R30
00060f c007      	RJMP _0x2000029
                 _0x2000034:
000610 30e4      	CPI  R30,LOW(0x4)
000611 f429      	BRNE _0x2000029
000612 81ea      	LDD  R30,Y+2
000613 95e0      	COM  R30
000614 81ab      	LDD  R26,Y+3
000615 2bea      	OR   R30,R26
000616 231e      	AND  R17,R30
                 _0x2000029:
000617 2fa1      	MOV  R26,R17
000618 940e 0fd8 	CALL SUBOPT_0x11
00061a 8118      	LDD  R17,Y+0
                 _0x2100010:
00061b 9626      	ADIW R28,6
00061c 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00061d 93aa      	ST   -Y,R26
00061e 9723      	SBIW R28,3
00061f 940e 13f3 	CALL __SAVELOCR6
000621 89a8      	LDD  R26,Y+16
000622 38a0      	CPI  R26,LOW(0x80)
000623 f448      	BRSH _0x2000037
000624 85af      	LDD  R26,Y+15
000625 34a0      	CPI  R26,LOW(0x40)
000626 f430      	BRSH _0x2000037
000627 85ae      	LDD  R26,Y+14
000628 30a0      	CPI  R26,LOW(0x0)
000629 f019      	BREQ _0x2000037
00062a 85ad      	LDD  R26,Y+13
00062b 30a0      	CPI  R26,LOW(0x0)
00062c f409      	BRNE _0x2000036
                 _0x2000037:
00062d c1c8      	RJMP _0x210000F
                 _0x2000036:
00062e 85ee      	LDD  R30,Y+14
00062f 87e8      	STD  Y+8,R30
000630 89a8      	LDD  R26,Y+16
000631 27bb      	CLR  R27
000632 85ee      	LDD  R30,Y+14
000633 e0f0      	LDI  R31,0
000634 0fae      	ADD  R26,R30
000635 1fbf      	ADC  R27,R31
000636 38a1      	CPI  R26,LOW(0x81)
000637 e0e0      	LDI  R30,HIGH(0x81)
000638 07be      	CPC  R27,R30
000639 f020      	BRLO _0x2000039
00063a 89a8      	LDD  R26,Y+16
00063b e8e0      	LDI  R30,LOW(128)
00063c 1bea      	SUB  R30,R26
00063d 87ee      	STD  Y+14,R30
                 _0x2000039:
00063e 852d      	LDD  R18,Y+13
00063f 85af      	LDD  R26,Y+15
000640 27bb      	CLR  R27
000641 85ed      	LDD  R30,Y+13
000642 e0f0      	LDI  R31,0
000643 0fae      	ADD  R26,R30
000644 1fbf      	ADC  R27,R31
000645 34a1      	CPI  R26,LOW(0x41)
000646 e0e0      	LDI  R30,HIGH(0x41)
000647 07be      	CPC  R27,R30
000648 f020      	BRLO _0x200003A
000649 85af      	LDD  R26,Y+15
00064a e4e0      	LDI  R30,LOW(64)
00064b 1bea      	SUB  R30,R26
00064c 87ed      	STD  Y+13,R30
                 _0x200003A:
00064d 85a9      	LDD  R26,Y+9
00064e 30a6      	CPI  R26,LOW(0x6)
00064f f009      	BREQ PC+2
000650 c05b      	RJMP _0x200003B
000651 85ec      	LDD  R30,Y+12
000652 30e1      	CPI  R30,LOW(0x1)
000653 f409      	BRNE _0x200003F
000654 c1a1      	RJMP _0x210000F
                 _0x200003F:
000655 30e3      	CPI  R30,LOW(0x3)
000656 f439      	BRNE _0x2000042
                +
000657 91e0 0186+LDS R30 , _glcd_state + ( 27 )
000659 91f0 0187+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00065b 9730      	SBIW R30,0
00065c f409      	BRNE _0x2000041
00065d c198      	RJMP _0x210000F
                 _0x2000041:
                 _0x2000042:
00065e 8508      	LDD  R16,Y+8
00065f 85ed      	LDD  R30,Y+13
000660 95e6      	LSR  R30
000661 95e6      	LSR  R30
000662 95e6      	LSR  R30
000663 2f3e      	MOV  R19,R30
000664 2fe2      	MOV  R30,R18
000665 70e7      	ANDI R30,LOW(0x7)
000666 f419      	BRNE _0x2000044
000667 85ad      	LDD  R26,Y+13
000668 172a      	CP   R18,R26
000669 f0e9      	BREQ _0x2000043
                 _0x2000044:
00066a 2fa0      	MOV  R26,R16
00066b 27bb      	CLR  R27
00066c 2fe3      	MOV  R30,R19
00066d e0f0      	LDI  R31,0
00066e 940e 1333 	CALL __MULW12U
000670 85aa      	LDD  R26,Y+10
000671 85bb      	LDD  R27,Y+10+1
000672 940e 0fdc 	CALL SUBOPT_0x12
000674 9526      	LSR  R18
000675 9526      	LSR  R18
000676 9526      	LSR  R18
000677 2f53      	MOV  R21,R19
                 _0x2000046:
000678 935f      	PUSH R21
000679 5f5f      	SUBI R21,-1
00067a 2fe2      	MOV  R30,R18
00067b 91af      	POP  R26
00067c 17ea      	CP   R30,R26
00067d f048      	BRLO _0x2000048
00067e 2f10      	MOV  R17,R16
                 _0x2000049:
00067f 2fe1      	MOV  R30,R17
000680 5011      	SUBI R17,1
000681 30e0      	CPI  R30,0
000682 f019      	BREQ _0x200004B
000683 940e 0fe1 	CALL SUBOPT_0x13
000685 cff9      	RJMP _0x2000049
                 _0x200004B:
000686 cff1      	RJMP _0x2000046
                 _0x2000048:
                 _0x2000043:
000687 85ae      	LDD  R26,Y+14
000688 170a      	CP   R16,R26
000689 f111      	BREQ _0x200004C
00068a 85ee      	LDD  R30,Y+14
00068b 85aa      	LDD  R26,Y+10
00068c 85bb      	LDD  R27,Y+10+1
00068d e0f0      	LDI  R31,0
00068e 940e 0fdc 	CALL SUBOPT_0x12
000690 85ed      	LDD  R30,Y+13
000691 70e7      	ANDI R30,LOW(0x7)
000692 f009      	BREQ _0x200004D
000693 5f3f      	SUBI R19,-LOW(1)
                 _0x200004D:
000694 e020      	LDI  R18,LOW(0)
                 _0x200004E:
000695 932f      	PUSH R18
000696 5f2f      	SUBI R18,-1
000697 2fe3      	MOV  R30,R19
000698 91af      	POP  R26
000699 17ae      	CP   R26,R30
00069a f488      	BRSH _0x2000050
00069b 851e      	LDD  R17,Y+14
                 _0x2000051:
00069c 931f      	PUSH R17
00069d 5f1f      	SUBI R17,-1
00069e 2fe0      	MOV  R30,R16
00069f 91af      	POP  R26
0006a0 17ae      	CP   R26,R30
0006a1 f418      	BRSH _0x2000053
0006a2 940e 0fe1 	CALL SUBOPT_0x13
0006a4 cff7      	RJMP _0x2000051
                 _0x2000053:
0006a5 85ee      	LDD  R30,Y+14
0006a6 81ae      	LDD  R26,Y+6
0006a7 81bf      	LDD  R27,Y+6+1
0006a8 e0f0      	LDI  R31,0
0006a9 940e 0fdc 	CALL SUBOPT_0x12
0006ab cfe9      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004C:
                 _0x200003B:
0006ac 85ef      	LDD  R30,Y+15
0006ad 70e7      	ANDI R30,LOW(0x7)
0006ae 2f3e      	MOV  R19,R30
                 _0x2000054:
0006af 85ed      	LDD  R30,Y+13
0006b0 30e0      	CPI  R30,0
0006b1 f409      	BRNE PC+2
0006b2 c143      	RJMP _0x2000056
0006b3 85ea      	LDD  R30,Y+10
0006b4 85fb      	LDD  R31,Y+10+1
0006b5 83ee      	STD  Y+6,R30
0006b6 83ff      	STD  Y+6+1,R31
0006b7 e010      	LDI  R17,LOW(0)
0006b8 8908      	LDD  R16,Y+16
0006b9 3030      	CPI  R19,0
0006ba f009      	BREQ PC+2
0006bb c065      	RJMP _0x2000057
0006bc 85ad      	LDD  R26,Y+13
0006bd 30a8      	CPI  R26,LOW(0x8)
0006be f408      	BRSH PC+2
0006bf c05c      	RJMP _0x2000058
0006c0 85e9      	LDD  R30,Y+9
0006c1 30e0      	CPI  R30,0
0006c2 f011      	BREQ _0x200005D
0006c3 30e3      	CPI  R30,LOW(0x3)
0006c4 f409      	BRNE _0x200005E
                 _0x200005D:
0006c5 c002      	RJMP _0x200005F
                 _0x200005E:
0006c6 30e7      	CPI  R30,LOW(0x7)
0006c7 f409      	BRNE _0x2000060
                 _0x200005F:
0006c8 c002      	RJMP _0x2000061
                 _0x2000060:
0006c9 30e8      	CPI  R30,LOW(0x8)
0006ca f409      	BRNE _0x2000062
                 _0x2000061:
0006cb c002      	RJMP _0x2000063
                 _0x2000062:
0006cc 30e6      	CPI  R30,LOW(0x6)
0006cd f409      	BRNE _0x2000064
                 _0x2000063:
0006ce c002      	RJMP _0x2000065
                 _0x2000064:
0006cf 30e9      	CPI  R30,LOW(0x9)
0006d0 f409      	BRNE _0x2000066
                 _0x2000065:
0006d1 c002      	RJMP _0x2000067
                 _0x2000066:
0006d2 30ea      	CPI  R30,LOW(0xA)
0006d3 f421      	BRNE _0x200005B
                 _0x2000067:
0006d4 930a      	ST   -Y,R16
0006d5 89e8      	LDD  R30,Y+16
0006d6 940e 0fd2 	CALL SUBOPT_0x10
                 _0x200005B:
                 _0x2000069:
0006d8 931f      	PUSH R17
0006d9 5f1f      	SUBI R17,-1
0006da 85ee      	LDD  R30,Y+14
0006db 91af      	POP  R26
0006dc 17ae      	CP   R26,R30
0006dd f5b8      	BRSH _0x200006B
0006de 85a9      	LDD  R26,Y+9
0006df 30a6      	CPI  R26,LOW(0x6)
0006e0 f461      	BRNE _0x200006C
0006e1 de27      	RCALL _ks0108_rddata_G100
0006e2 dde7      	RCALL _ks0108_setloc_G100
0006e3 940e 0fee 	CALL SUBOPT_0x14
0006e5 93fa      	ST   -Y,R31
0006e6 93ea      	ST   -Y,R30
0006e7 de21      	RCALL _ks0108_rddata_G100
0006e8 2fae      	MOV  R26,R30
0006e9 940e 0f30 	CALL _glcd_writemem
0006eb ddff      	RCALL _ks0108_nextx_G100
0006ec c027      	RJMP _0x200006D
                 _0x200006C:
0006ed 85e9      	LDD  R30,Y+9
0006ee 30e9      	CPI  R30,LOW(0x9)
0006ef f411      	BRNE _0x2000071
0006f0 e050      	LDI  R21,LOW(0)
0006f1 c00e      	RJMP _0x2000072
                 _0x2000071:
0006f2 30ea      	CPI  R30,LOW(0xA)
0006f3 f411      	BRNE _0x2000070
0006f4 ef5f      	LDI  R21,LOW(255)
0006f5 c00a      	RJMP _0x2000072
                 _0x2000070:
0006f6 940e 0fee 	CALL SUBOPT_0x14
0006f8 940e 0ff7 	CALL SUBOPT_0x15
0006fa 2f5e      	MOV  R21,R30
0006fb 85e9      	LDD  R30,Y+9
0006fc 30e7      	CPI  R30,LOW(0x7)
0006fd f011      	BREQ _0x2000079
0006fe 30e8      	CPI  R30,LOW(0x8)
0006ff f421      	BRNE _0x200007A
                 _0x2000079:
                 _0x2000072:
000700 940e 0ffd 	CALL SUBOPT_0x16
000702 2f5e      	MOV  R21,R30
000703 c006      	RJMP _0x200007B
                 _0x200007A:
000704 30e3      	CPI  R30,LOW(0x3)
000705 f411      	BRNE _0x200007D
000706 9550      	COM  R21
000707 c002      	RJMP _0x200007E
                 _0x200007D:
000708 30e0      	CPI  R30,0
000709 f421      	BRNE _0x2000080
                 _0x200007E:
                 _0x200007B:
00070a 2fa5      	MOV  R26,R21
00070b 940e 0fd8 	CALL SUBOPT_0x11
00070d c006      	RJMP _0x2000077
                 _0x2000080:
00070e 940e 1001 	CALL SUBOPT_0x17
000710 efef      	LDI  R30,LOW(255)
000711 93ea      	ST   -Y,R30
000712 85ad      	LDD  R26,Y+13
000713 dece      	RCALL _ks0108_wrmasked_G100
                 _0x2000077:
                 _0x200006D:
000714 cfc3      	RJMP _0x2000069
                 _0x200006B:
000715 85ef      	LDD  R30,Y+15
000716 5fe8      	SUBI R30,-LOW(8)
000717 87ef      	STD  Y+15,R30
000718 85ed      	LDD  R30,Y+13
000719 50e8      	SUBI R30,LOW(8)
00071a 87ed      	STD  Y+13,R30
00071b c0d1      	RJMP _0x2000081
                 _0x2000058:
00071c 855d      	LDD  R21,Y+13
00071d e020      	LDI  R18,LOW(0)
00071e e0e0      	LDI  R30,LOW(0)
00071f 87ed      	STD  Y+13,R30
000720 c07a      	RJMP _0x2000082
                 _0x2000057:
000721 2fe3      	MOV  R30,R19
000722 85ad      	LDD  R26,Y+13
000723 0fae      	ADD  R26,R30
000724 30a9      	CPI  R26,LOW(0x9)
000725 f420      	BRSH _0x2000083
000726 852d      	LDD  R18,Y+13
000727 e0e0      	LDI  R30,LOW(0)
000728 87ed      	STD  Y+13,R30
000729 c003      	RJMP _0x2000084
                 _0x2000083:
00072a e0e8      	LDI  R30,LOW(8)
00072b 1be3      	SUB  R30,R19
00072c 2f2e      	MOV  R18,R30
                 _0x2000084:
00072d 933a      	ST   -Y,R19
00072e 2fa2      	MOV  R26,R18
00072f 940e 0ede 	CALL _glcd_getmask
000731 2f4e      	MOV  R20,R30
000732 85e9      	LDD  R30,Y+9
000733 30e6      	CPI  R30,LOW(0x6)
000734 f4f1      	BRNE _0x2000088
                 _0x2000089:
000735 931f      	PUSH R17
000736 5f1f      	SUBI R17,-1
000737 85ee      	LDD  R30,Y+14
000738 91af      	POP  R26
000739 17ae      	CP   R26,R30
00073a f4b8      	BRSH _0x200008B
00073b 940e 1007 	CALL SUBOPT_0x18
00073d 2fae      	MOV  R26,R30
00073e 2fe3      	MOV  R30,R19
00073f 940e 1317 	CALL __LSRB12
000741 940e 100e 	CALL SUBOPT_0x19
000743 2fe3      	MOV  R30,R19
000744 2fa4      	MOV  R26,R20
000745 940e 1317 	CALL __LSRB12
000747 95e0      	COM  R30
000748 21e1      	AND  R30,R1
000749 2b5e      	OR   R21,R30
00074a 940e 0fee 	CALL SUBOPT_0x14
00074c 93fa      	ST   -Y,R31
00074d 93ea      	ST   -Y,R30
00074e 2fa5      	MOV  R26,R21
00074f 940e 0f30 	CALL _glcd_writemem
000751 cfe3      	RJMP _0x2000089
                 _0x200008B:
000752 c02c      	RJMP _0x2000087
                 _0x2000088:
000753 30e9      	CPI  R30,LOW(0x9)
000754 f411      	BRNE _0x200008C
000755 e050      	LDI  R21,LOW(0)
000756 c003      	RJMP _0x200008D
                 _0x200008C:
000757 30ea      	CPI  R30,LOW(0xA)
000758 f4a9      	BRNE _0x2000093
000759 ef5f      	LDI  R21,LOW(255)
                 _0x200008D:
00075a 940e 0ffd 	CALL SUBOPT_0x16
00075c 2fae      	MOV  R26,R30
00075d 2fe3      	MOV  R30,R19
00075e 940e 130f 	CALL __LSLB12
000760 2f5e      	MOV  R21,R30
                 _0x2000090:
000761 931f      	PUSH R17
000762 5f1f      	SUBI R17,-1
000763 85ee      	LDD  R30,Y+14
000764 91af      	POP  R26
000765 17ae      	CP   R26,R30
000766 f430      	BRSH _0x2000092
000767 940e 1001 	CALL SUBOPT_0x17
000769 934a      	ST   -Y,R20
00076a e0a0      	LDI  R26,LOW(0)
00076b de76      	RCALL _ks0108_wrmasked_G100
00076c cff4      	RJMP _0x2000090
                 _0x2000092:
00076d c011      	RJMP _0x2000087
                 _0x2000093:
                 _0x2000094:
00076e 931f      	PUSH R17
00076f 5f1f      	SUBI R17,-1
000770 85ee      	LDD  R30,Y+14
000771 91af      	POP  R26
000772 17ae      	CP   R26,R30
000773 f458      	BRSH _0x2000096
000774 940e 1019 	CALL SUBOPT_0x1A
000776 2fae      	MOV  R26,R30
000777 2fe3      	MOV  R30,R19
000778 940e 130f 	CALL __LSLB12
00077a 93ea      	ST   -Y,R30
00077b 934a      	ST   -Y,R20
00077c 85ad      	LDD  R26,Y+13
00077d de64      	RCALL _ks0108_wrmasked_G100
00077e cfef      	RJMP _0x2000094
                 _0x2000096:
                 _0x2000087:
00077f 85ed      	LDD  R30,Y+13
000780 30e0      	CPI  R30,0
000781 f409      	BRNE _0x2000097
000782 c073      	RJMP _0x2000056
                 _0x2000097:
000783 85ad      	LDD  R26,Y+13
000784 30a8      	CPI  R26,LOW(0x8)
000785 f428      	BRSH _0x2000098
000786 85ed      	LDD  R30,Y+13
000787 1be2      	SUB  R30,R18
000788 2f5e      	MOV  R21,R30
000789 e0e0      	LDI  R30,LOW(0)
00078a c003      	RJMP _0x20000AD
                 _0x2000098:
00078b 2f53      	MOV  R21,R19
00078c 85ed      	LDD  R30,Y+13
00078d 50e8      	SUBI R30,LOW(8)
                 _0x20000AD:
00078e 87ed      	STD  Y+13,R30
00078f e010      	LDI  R17,LOW(0)
000790 85ef      	LDD  R30,Y+15
000791 5fe8      	SUBI R30,-LOW(8)
000792 87ef      	STD  Y+15,R30
000793 e0e8      	LDI  R30,LOW(8)
000794 1be3      	SUB  R30,R19
000795 2f2e      	MOV  R18,R30
000796 8908      	LDD  R16,Y+16
000797 85ea      	LDD  R30,Y+10
000798 85fb      	LDD  R31,Y+10+1
000799 83ee      	STD  Y+6,R30
00079a 83ff      	STD  Y+6+1,R31
                 _0x2000082:
00079b 2fe5      	MOV  R30,R21
00079c e0f0      	LDI  R31,0
00079d 5be4      	SUBI R30,LOW(-__glcd_mask*2)
00079e 4ffa      	SBCI R31,HIGH(-__glcd_mask*2)
00079f 9144      	LPM  R20,Z
0007a0 85e9      	LDD  R30,Y+9
0007a1 30e6      	CPI  R30,LOW(0x6)
0007a2 f4f1      	BRNE _0x200009D
                 _0x200009E:
0007a3 931f      	PUSH R17
0007a4 5f1f      	SUBI R17,-1
0007a5 85ee      	LDD  R30,Y+14
0007a6 91af      	POP  R26
0007a7 17ae      	CP   R26,R30
0007a8 f4b8      	BRSH _0x20000A0
0007a9 940e 1007 	CALL SUBOPT_0x18
0007ab 2fae      	MOV  R26,R30
0007ac 2fe2      	MOV  R30,R18
0007ad 940e 130f 	CALL __LSLB12
0007af 940e 100e 	CALL SUBOPT_0x19
0007b1 2fe2      	MOV  R30,R18
0007b2 2fa4      	MOV  R26,R20
0007b3 940e 130f 	CALL __LSLB12
0007b5 95e0      	COM  R30
0007b6 21e1      	AND  R30,R1
0007b7 2b5e      	OR   R21,R30
0007b8 940e 0fee 	CALL SUBOPT_0x14
0007ba 93fa      	ST   -Y,R31
0007bb 93ea      	ST   -Y,R30
0007bc 2fa5      	MOV  R26,R21
0007bd 940e 0f30 	CALL _glcd_writemem
0007bf cfe3      	RJMP _0x200009E
                 _0x20000A0:
0007c0 c02c      	RJMP _0x200009C
                 _0x200009D:
0007c1 30e9      	CPI  R30,LOW(0x9)
0007c2 f411      	BRNE _0x20000A1
0007c3 e050      	LDI  R21,LOW(0)
0007c4 c003      	RJMP _0x20000A2
                 _0x20000A1:
0007c5 30ea      	CPI  R30,LOW(0xA)
0007c6 f4a9      	BRNE _0x20000A8
0007c7 ef5f      	LDI  R21,LOW(255)
                 _0x20000A2:
0007c8 940e 0ffd 	CALL SUBOPT_0x16
0007ca 2fae      	MOV  R26,R30
0007cb 2fe2      	MOV  R30,R18
0007cc 940e 1317 	CALL __LSRB12
0007ce 2f5e      	MOV  R21,R30
                 _0x20000A5:
0007cf 931f      	PUSH R17
0007d0 5f1f      	SUBI R17,-1
0007d1 85ee      	LDD  R30,Y+14
0007d2 91af      	POP  R26
0007d3 17ae      	CP   R26,R30
0007d4 f430      	BRSH _0x20000A7
0007d5 940e 1001 	CALL SUBOPT_0x17
0007d7 934a      	ST   -Y,R20
0007d8 e0a0      	LDI  R26,LOW(0)
0007d9 de08      	RCALL _ks0108_wrmasked_G100
0007da cff4      	RJMP _0x20000A5
                 _0x20000A7:
0007db c011      	RJMP _0x200009C
                 _0x20000A8:
                 _0x20000A9:
0007dc 931f      	PUSH R17
0007dd 5f1f      	SUBI R17,-1
0007de 85ee      	LDD  R30,Y+14
0007df 91af      	POP  R26
0007e0 17ae      	CP   R26,R30
0007e1 f458      	BRSH _0x20000AB
0007e2 940e 1019 	CALL SUBOPT_0x1A
0007e4 2fae      	MOV  R26,R30
0007e5 2fe2      	MOV  R30,R18
0007e6 940e 1317 	CALL __LSRB12
0007e8 93ea      	ST   -Y,R30
0007e9 934a      	ST   -Y,R20
0007ea 85ad      	LDD  R26,Y+13
0007eb ddf6      	RCALL _ks0108_wrmasked_G100
0007ec cfef      	RJMP _0x20000A9
                 _0x20000AB:
                 _0x200009C:
                 _0x2000081:
0007ed 85e8      	LDD  R30,Y+8
0007ee 85aa      	LDD  R26,Y+10
0007ef 85bb      	LDD  R27,Y+10+1
0007f0 e0f0      	LDI  R31,0
0007f1 0fea      	ADD  R30,R26
0007f2 1ffb      	ADC  R31,R27
0007f3 87ea      	STD  Y+10,R30
0007f4 87fb      	STD  Y+10+1,R31
0007f5 ceb9      	RJMP _0x2000054
                 _0x2000056:
                 _0x210000F:
0007f6 940e 13fa 	CALL __LOADLOCR6
0007f8 9661      	ADIW R28,17
0007f9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0007fa 940e 1026 	CALL SUBOPT_0x1B
0007fc f01c      	BRLT _0x2020003
0007fd e0e0      	LDI  R30,LOW(0)
0007fe e0f0      	LDI  R31,HIGH(0)
0007ff c026      	RJMP _0x210000E
                 _0x2020003:
000800 81a8      	LD   R26,Y
000801 81b9      	LDD  R27,Y+1
000802 38a0      	CPI  R26,LOW(0x80)
000803 e0e0      	LDI  R30,HIGH(0x80)
000804 07be      	CPC  R27,R30
000805 f01c      	BRLT _0x2020004
000806 e7ef      	LDI  R30,LOW(127)
000807 e0f0      	LDI  R31,HIGH(127)
000808 c01d      	RJMP _0x210000E
                 _0x2020004:
000809 81e8      	LD   R30,Y
00080a 81f9      	LDD  R31,Y+1
00080b c01a      	RJMP _0x210000E
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00080c 940e 1026 	CALL SUBOPT_0x1B
00080e f01c      	BRLT _0x2020005
00080f e0e0      	LDI  R30,LOW(0)
000810 e0f0      	LDI  R31,HIGH(0)
000811 c014      	RJMP _0x210000E
                 _0x2020005:
000812 81a8      	LD   R26,Y
000813 81b9      	LDD  R27,Y+1
000814 34a0      	CPI  R26,LOW(0x40)
000815 e0e0      	LDI  R30,HIGH(0x40)
000816 07be      	CPC  R27,R30
000817 f01c      	BRLT _0x2020006
000818 e3ef      	LDI  R30,LOW(63)
000819 e0f0      	LDI  R31,HIGH(63)
00081a c00b      	RJMP _0x210000E
                 _0x2020006:
00081b 81e8      	LD   R30,Y
00081c 81f9      	LDD  R31,Y+1
00081d c008      	RJMP _0x210000E
                 ; .FEND
                 _glcd_setpixel:
                 ; .FSTART _glcd_setpixel
00081e 93aa      	ST   -Y,R26
00081f 81e9      	LDD  R30,Y+1
000820 93ea      	ST   -Y,R30
000821 81e9      	LDD  R30,Y+1
000822 93ea      	ST   -Y,R30
000823 91a0 016b 	LDS  R26,_glcd_state
000825 dd7f      	RCALL _glcd_putpixel
                 _0x210000E:
000826 9622      	ADIW R28,2
000827 9508      	RET
                 ; .FEND
                 _glcd_imagesize:
                 ; .FSTART _glcd_imagesize
000828 93aa      	ST   -Y,R26
000829 931a      	ST   -Y,R17
00082a 81aa      	LDD  R26,Y+2
00082b 38a0      	CPI  R26,LOW(0x80)
00082c f418      	BRSH _0x2020008
00082d 81a9      	LDD  R26,Y+1
00082e 34a0      	CPI  R26,LOW(0x40)
00082f f018      	BRLO _0x2020007
                 _0x2020008:
000830 940e 102d 	CALL SUBOPT_0x1C
000832 c01a      	RJMP _0x210000D
                 _0x2020007:
000833 81e9      	LDD  R30,Y+1
000834 70e7      	ANDI R30,LOW(0x7)
000835 2f1e      	MOV  R17,R30
000836 81e9      	LDD  R30,Y+1
000837 95e6      	LSR  R30
000838 95e6      	LSR  R30
000839 95e6      	LSR  R30
00083a 83e9      	STD  Y+1,R30
00083b 3010      	CPI  R17,0
00083c f011      	BREQ _0x202000A
00083d 5fef      	SUBI R30,-LOW(1)
00083e 83e9      	STD  Y+1,R30
                 _0x202000A:
00083f 81aa      	LDD  R26,Y+2
000840 27bb      	CLR  R27
000841 2788      	CLR  R24
000842 2799      	CLR  R25
000843 81e9      	LDD  R30,Y+1
000844 27ff      	CLR  R31
000845 2766      	CLR  R22
000846 2777      	CLR  R23
000847 940e 133b 	CALL __MULD12U
                +
000849 5fec     +SUBI R30 , LOW ( - 4 )
00084a 4fff     +SBCI R31 , HIGH ( - 4 )
00084b 4f6f     +SBCI R22 , BYTE3 ( - 4 )
00084c 4f7f     +SBCI R23 , BYTE4 ( - 4 )
                 	__ADDD1N 4
                 _0x210000D:
00084d 8118      	LDD  R17,Y+0
00084e 9623      	ADIW R28,3
00084f 9508      	RET
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000850 93ba      	ST   -Y,R27
000851 93aa      	ST   -Y,R26
000852 9723      	SBIW R28,3
000853 940e 1032 	CALL SUBOPT_0x1D
000855 018f      	MOVW R16,R30
000856 2e00      	MOV  R0,R16
000857 2a01      	OR   R0,R17
000858 f0d1      	BREQ _0x210000C
000859 940e 1039 	CALL SUBOPT_0x1E
00085b 820f      	STD  Y+7,R0
00085c 940e 1039 	CALL SUBOPT_0x1E
00085e 820e      	STD  Y+6,R0
00085f 940e 1039 	CALL SUBOPT_0x1E
000861 8608      	STD  Y+8,R0
000862 85eb      	LDD  R30,Y+11
000863 85a8      	LDD  R26,Y+8
000864 17ea      	CP   R30,R26
000865 f068      	BRLO _0x210000C
000866 01f8      	MOVW R30,R16
                +
000867 5f0f     +SUBI R16 , LOW ( - 1 )
000868 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000869 9154      	LPM  R21,Z
00086a 27bb      	CLR  R27
00086b 27ee      	CLR  R30
00086c 0fa5      	ADD  R26,R21
00086d 1fbe      	ADC  R27,R30
00086e 85eb      	LDD  R30,Y+11
00086f e0f0      	LDI  R31,0
000870 17ea      	CP   R30,R26
000871 07fb      	CPC  R31,R27
000872 f030      	BRLO _0x202000D
                 _0x210000C:
000873 e0e0      	LDI  R30,LOW(0)
000874 e0f0      	LDI  R31,HIGH(0)
000875 940e 13fa 	CALL __LOADLOCR6
000877 962c      	ADIW R28,12
000878 9508      	RET
                 _0x202000D:
000879 81ee      	LDD  R30,Y+6
00087a 95e6      	LSR  R30
00087b 95e6      	LSR  R30
00087c 95e6      	LSR  R30
00087d 2f4e      	MOV  R20,R30
00087e 81ee      	LDD  R30,Y+6
00087f 70e7      	ANDI R30,LOW(0x7)
000880 f009      	BREQ _0x202000E
000881 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000882 81ef      	LDD  R30,Y+7
000883 30e0      	CPI  R30,0
000884 f0b9      	BREQ _0x202000F
000885 85a9      	LDD  R26,Y+9
000886 85ba      	LDD  R27,Y+9+1
000887 93ec      	ST   X,R30
000888 85a8      	LDD  R26,Y+8
000889 85eb      	LDD  R30,Y+11
00088a 1bea      	SUB  R30,R26
00088b e0f0      	LDI  R31,0
00088c 01df      	MOVW R26,R30
00088d 81ef      	LDD  R30,Y+7
00088e e0f0      	LDI  R31,0
00088f 940e 1333 	CALL __MULW12U
000891 01df      	MOVW R26,R30
000892 2fe4      	MOV  R30,R20
000893 e0f0      	LDI  R31,0
000894 940e 1333 	CALL __MULW12U
000896 0fe0      	ADD  R30,R16
000897 1ff1      	ADC  R31,R17
000898 940e 13fa 	CALL __LOADLOCR6
00089a 940c 0e3e 	JMP  _0x2100006
                 _0x202000F:
00089c 0198      	MOVW R18,R16
00089d 2fe5      	MOV  R30,R21
00089e e0f0      	LDI  R31,0
                +
00089f 0f0e     +ADD R16 , R30
0008a0 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0008a1 85a8      	LDD  R26,Y+8
0008a2 5faf      	SUBI R26,-LOW(1)
0008a3 87a8      	STD  Y+8,R26
0008a4 50a1      	SUBI R26,LOW(1)
0008a5 85eb      	LDD  R30,Y+11
0008a6 17ae      	CP   R26,R30
0008a7 f460      	BRSH _0x2020012
0008a8 01f9      	MOVW R30,R18
                +
0008a9 5f2f     +SUBI R18 , LOW ( - 1 )
0008aa 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0008ab 91a4      	LPM  R26,Z
0008ac e0b0      	LDI  R27,0
0008ad 2fe4      	MOV  R30,R20
0008ae e0f0      	LDI  R31,0
0008af 940e 1333 	CALL __MULW12U
                +
0008b1 0f0e     +ADD R16 , R30
0008b2 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0008b3 cfed      	RJMP _0x2020010
                 _0x2020012:
0008b4 01f9      	MOVW R30,R18
0008b5 91e4      	LPM  R30,Z
0008b6 85a9      	LDD  R26,Y+9
0008b7 85ba      	LDD  R27,Y+9+1
0008b8 93ec      	ST   X,R30
0008b9 01f8      	MOVW R30,R16
0008ba 940e 13fa 	CALL __LOADLOCR6
0008bc 940c 0e3e 	JMP  _0x2100006
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0008be e0e0      	LDI  R30,LOW(0)
                +
0008bf 93e0 016d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0008c1 91a0 016e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0008c3 27bb      	CLR  R27
0008c4 940e 103e 	CALL SUBOPT_0x1F
0008c6 e0f0      	LDI  R31,0
0008c7 0fae      	ADD  R26,R30
0008c8 1fbf      	ADC  R27,R31
                +
0008c9 91e0 0172+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0008cb e0f0      	LDI  R31,0
0008cc 0fae      	ADD  R26,R30
0008cd 1fbf      	ADC  R27,R31
0008ce df3d      	RCALL _glcd_clipy
                +
0008cf 93e0 016e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0008d1 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0008d2 93aa      	ST   -Y,R26
0008d3 9721      	SBIW R28,1
0008d4 940e 1032 	CALL SUBOPT_0x1D
0008d6 9730      	SBIW R30,0
0008d7 f409      	BRNE PC+2
0008d8 c057      	RJMP _0x202001F
0008d9 81af      	LDD  R26,Y+7
0008da 30aa      	CPI  R26,LOW(0xA)
0008db f409      	BRNE _0x2020020
0008dc c04f      	RJMP _0x2020021
                 _0x2020020:
0008dd 81ef      	LDD  R30,Y+7
0008de 93ea      	ST   -Y,R30
0008df 01de      	MOVW R26,R28
0008e0 9617      	ADIW R26,7
0008e1 df6e      	RCALL _glcd_getcharw_G101
0008e2 01af      	MOVW R20,R30
0008e3 9730      	SBIW R30,0
0008e4 f419      	BRNE _0x2020022
0008e5 940e 13fa 	CALL __LOADLOCR6
0008e7 c335      	RJMP _0x210000A
                 _0x2020022:
                +
0008e8 91e0 0171+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008ea 81ae      	LDD  R26,Y+6
0008eb 0fea      	ADD  R30,R26
0008ec 2f3e      	MOV  R19,R30
                +
0008ed 91a0 016d+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0008ef 27bb      	CLR  R27
0008f0 940e 1045 	CALL SUBOPT_0x20
                +
0008f2 3801     +CPI R16 , LOW ( 129 )
0008f3 e0e0     +LDI R30 , HIGH ( 129 )
0008f4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
0008f5 f018      	BRLO _0x2020023
0008f6 2f03      	MOV  R16,R19
0008f7 2711      	CLR  R17
0008f8 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
0008f9 91e0 016d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008fb 93ea      	ST   -Y,R30
                +
0008fc 91e0 016e+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0008fe 93ea      	ST   -Y,R30
0008ff 85e8      	LDD  R30,Y+8
000900 93ea      	ST   -Y,R30
000901 940e 103e 	CALL SUBOPT_0x1F
000903 93ea      	ST   -Y,R30
000904 e0e1      	LDI  R30,LOW(1)
000905 93ea      	ST   -Y,R30
000906 935a      	ST   -Y,R21
000907 934a      	ST   -Y,R20
000908 e0a7      	LDI  R26,LOW(7)
000909 dd13      	RCALL _glcd_block
                +
00090a 91e0 016d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00090c 81ae      	LDD  R26,Y+6
00090d 0fea      	ADD  R30,R26
00090e 93ea      	ST   -Y,R30
                +
00090f 91e0 016e+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000911 93ea      	ST   -Y,R30
                +
000912 91e0 0171+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000914 93ea      	ST   -Y,R30
000915 940e 103e 	CALL SUBOPT_0x1F
000917 940e 104a 	CALL SUBOPT_0x21
                +
000919 91e0 016d+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00091b 93ea      	ST   -Y,R30
                +
00091c 91a0 016e+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00091e 940e 103e 	CALL SUBOPT_0x1F
000920 0fea      	ADD  R30,R26
000921 93ea      	ST   -Y,R30
000922 933a      	ST   -Y,R19
                +
000923 91e0 0172+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000925 940e 104a 	CALL SUBOPT_0x21
000927 e8e0      	LDI  R30,LOW(128)
000928 e0f0      	LDI  R31,HIGH(128)
000929 17e0      	CP   R30,R16
00092a 07f1      	CPC  R31,R17
00092b f421      	BRNE _0x2020024
                 _0x2020021:
00092c df91      	RCALL _glcd_new_line_G101
00092d 940e 13fa 	CALL __LOADLOCR6
00092f c2ed      	RJMP _0x210000A
                 _0x2020024:
                 _0x202001F:
                +
000930 9300 016d+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
000932 940e 13fa 	CALL __LOADLOCR6
000934 c2e8      	RJMP _0x210000A
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000935 93ba      	ST   -Y,R27
000936 93aa      	ST   -Y,R26
000937 931a      	ST   -Y,R17
000938 81ec      	LDD  R30,Y+4
000939 93ea      	ST   -Y,R30
00093a 81ac      	LDD  R26,Y+4
00093b d058      	RCALL _glcd_moveto
                 _0x2020025:
00093c 81a9      	LDD  R26,Y+1
00093d 81ba      	LDD  R27,Y+1+1
00093e 91ed      	LD   R30,X+
00093f 83a9      	STD  Y+1,R26
000940 83ba      	STD  Y+1+1,R27
000941 2f1e      	MOV  R17,R30
000942 30e0      	CPI  R30,0
000943 f019      	BREQ _0x2020027
000944 2fa1      	MOV  R26,R17
000945 df8c      	RCALL _glcd_putchar
000946 cff5      	RJMP _0x2020025
                 _0x2020027:
000947 8118      	LDD  R17,Y+0
000948 940c 0edc 	JMP  _0x2100004
                 ; .FEND
                 _glcd_putimagef:
                 ; .FSTART _glcd_putimagef
00094a 93aa      	ST   -Y,R26
00094b 940e 13f5 	CALL __SAVELOCR4
00094d 81ac      	LDD  R26,Y+4
00094e 30a5      	CPI  R26,LOW(0x5)
00094f f518      	BRSH _0x2020038
000950 81ed      	LDD  R30,Y+5
000951 81fe      	LDD  R31,Y+5+1
000952 9105      	LPM  R16,Z+
000953 940e 1054 	CALL SUBOPT_0x22
000955 9115      	LPM  R17,Z+
000956 940e 1054 	CALL SUBOPT_0x22
000958 9125      	LPM  R18,Z+
000959 940e 1054 	CALL SUBOPT_0x22
00095b 9135      	LPM  R19,Z+
00095c 83ed      	STD  Y+5,R30
00095d 83fe      	STD  Y+5+1,R31
00095e 85e8      	LDD  R30,Y+8
00095f 93ea      	ST   -Y,R30
000960 85e8      	LDD  R30,Y+8
000961 93ea      	ST   -Y,R30
000962 930a      	ST   -Y,R16
000963 932a      	ST   -Y,R18
000964 e0e1      	LDI  R30,LOW(1)
000965 93ea      	ST   -Y,R30
000966 85ea      	LDD  R30,Y+10
000967 85fb      	LDD  R31,Y+10+1
000968 93fa      	ST   -Y,R31
000969 93ea      	ST   -Y,R30
00096a 85ab      	LDD  R26,Y+11
00096b dcb1      	RCALL _glcd_block
00096c 930a      	ST   -Y,R16
00096d 2fa2      	MOV  R26,R18
00096e deb9      	RCALL _glcd_imagesize
00096f 940e 13fc 	CALL __LOADLOCR4
000971 940c 0ec0 	JMP  _0x2100005
                 _0x2020038:
000973 940e 102d 	CALL SUBOPT_0x1C
000975 940e 13fc 	CALL __LOADLOCR4
000977 940c 0ec0 	JMP  _0x2100005
                 ; .FEND
                 _glcd_putpixelm_G101:
                 ; .FSTART _glcd_putpixelm_G101
000979 93aa      	ST   -Y,R26
00097a 81ea      	LDD  R30,Y+2
00097b 93ea      	ST   -Y,R30
00097c 81ea      	LDD  R30,Y+2
00097d 93ea      	ST   -Y,R30
                +
00097e 91e0 0174+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000980 81aa      	LDD  R26,Y+2
000981 23ea      	AND  R30,R26
000982 f019      	BREQ _0x202003E
000983 91e0 016b 	LDS  R30,_glcd_state
000985 c002      	RJMP _0x202003F
                 _0x202003E:
                +
000986 91e0 016c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x202003F:
000988 2fae      	MOV  R26,R30
000989 dc1b      	RCALL _glcd_putpixel
00098a 81e8      	LD   R30,Y
00098b 0fee      	LSL  R30
00098c 83e8      	ST   Y,R30
00098d 30e0      	CPI  R30,0
00098e f411      	BRNE _0x2020041
00098f e0e1      	LDI  R30,LOW(1)
000990 83e8      	ST   Y,R30
                 _0x2020041:
000991 81e8      	LD   R30,Y
000992 940c 0f2e 	JMP  _0x2100002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000994 93aa      	ST   -Y,R26
000995 81a9      	LDD  R26,Y+1
000996 27bb      	CLR  R27
000997 de62      	RCALL _glcd_clipx
                +
000998 93e0 016d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00099a 81a8      	LD   R26,Y
00099b 27bb      	CLR  R27
00099c de6f      	RCALL _glcd_clipy
                +
00099d 93e0 016e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00099f 940c 0ee7 	JMP  _0x2100003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
0009a1 93aa      	ST   -Y,R26
0009a2 972b      	SBIW R28,11
0009a3 940e 13f3 	CALL __SAVELOCR6
0009a5 89ac      	LDD  R26,Y+20
0009a6 27bb      	CLR  R27
0009a7 de52      	RCALL _glcd_clipx
0009a8 8bec      	STD  Y+20,R30
0009a9 89aa      	LDD  R26,Y+18
0009aa 27bb      	CLR  R27
0009ab de4e      	RCALL _glcd_clipx
0009ac 8bea      	STD  Y+18,R30
0009ad 89ab      	LDD  R26,Y+19
0009ae 27bb      	CLR  R27
0009af de5c      	RCALL _glcd_clipy
0009b0 8beb      	STD  Y+19,R30
0009b1 89a9      	LDD  R26,Y+17
0009b2 27bb      	CLR  R27
0009b3 de58      	RCALL _glcd_clipy
0009b4 8be9      	STD  Y+17,R30
0009b5 89ea      	LDD  R30,Y+18
                +
0009b6 93e0 016d+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0009b8 89e9      	LDD  R30,Y+17
                +
0009b9 93e0 016e+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0009bb e0e1      	LDI  R30,LOW(1)
0009bc 87e8      	STD  Y+8,R30
0009bd 89e9      	LDD  R30,Y+17
0009be 89ab      	LDD  R26,Y+19
0009bf 17ea      	CP   R30,R26
0009c0 f571      	BRNE _0x2020042
0009c1 891c      	LDD  R17,Y+20
0009c2 89aa      	LDD  R26,Y+18
0009c3 171a      	CP   R17,R26
0009c4 f431      	BRNE _0x2020043
0009c5 931a      	ST   -Y,R17
0009c6 89ec      	LDD  R30,Y+20
0009c7 93ea      	ST   -Y,R30
0009c8 e0a1      	LDI  R26,LOW(1)
0009c9 dfaf      	RCALL _glcd_putpixelm_G101
0009ca c0c8      	RJMP _0x210000B
                 _0x2020043:
0009cb 89aa      	LDD  R26,Y+18
0009cc 171a      	CP   R17,R26
0009cd f430      	BRSH _0x2020044
0009ce 89ea      	LDD  R30,Y+18
0009cf 1be1      	SUB  R30,R17
0009d0 2f0e      	MOV  R16,R30
                +
0009d1 e041     +LDI R20 , LOW ( 1 )
0009d2 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
0009d3 c006      	RJMP _0x2020045
                 _0x2020044:
0009d4 89aa      	LDD  R26,Y+18
0009d5 2fe1      	MOV  R30,R17
0009d6 1bea      	SUB  R30,R26
0009d7 2f0e      	MOV  R16,R30
                +
0009d8 ef4f     +LDI R20 , LOW ( - 1 )
0009d9 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2020045:
                 _0x2020047:
0009da 893b      	LDD  R19,Y+19
0009db e0e0      	LDI  R30,LOW(0)
0009dc 83ee      	STD  Y+6,R30
                 _0x2020049:
0009dd 940e 1057 	CALL SUBOPT_0x23
0009df f438      	BRSH _0x202004B
0009e0 931a      	ST   -Y,R17
0009e1 933a      	ST   -Y,R19
0009e2 9533      	INC  R19
0009e3 85aa      	LDD  R26,Y+10
0009e4 df94      	RCALL _glcd_putpixelm_G101
0009e5 83ef      	STD  Y+7,R30
0009e6 cff6      	RJMP _0x2020049
                 _0x202004B:
0009e7 81ef      	LDD  R30,Y+7
0009e8 87e8      	STD  Y+8,R30
0009e9 0f14      	ADD  R17,R20
0009ea 2fe0      	MOV  R30,R16
0009eb 5001      	SUBI R16,1
0009ec 30e0      	CPI  R30,0
0009ed f761      	BRNE _0x2020047
0009ee c0a4      	RJMP _0x202004C
                 _0x2020042:
0009ef 89ea      	LDD  R30,Y+18
0009f0 89ac      	LDD  R26,Y+20
0009f1 17ea      	CP   R30,R26
0009f2 f539      	BRNE _0x202004D
0009f3 893b      	LDD  R19,Y+19
0009f4 89a9      	LDD  R26,Y+17
0009f5 173a      	CP   R19,R26
0009f6 f430      	BRSH _0x202004E
0009f7 89e9      	LDD  R30,Y+17
0009f8 1be3      	SUB  R30,R19
0009f9 2f2e      	MOV  R18,R30
0009fa e0e1      	LDI  R30,LOW(1)
0009fb e0f0      	LDI  R31,HIGH(1)
0009fc c006      	RJMP _0x202011B
                 _0x202004E:
0009fd 89a9      	LDD  R26,Y+17
0009fe 2fe3      	MOV  R30,R19
0009ff 1bea      	SUB  R30,R26
000a00 2f2e      	MOV  R18,R30
000a01 efef      	LDI  R30,LOW(65535)
000a02 efff      	LDI  R31,HIGH(65535)
                 _0x202011B:
000a03 87ed      	STD  Y+13,R30
000a04 87fe      	STD  Y+13+1,R31
                 _0x2020051:
000a05 891c      	LDD  R17,Y+20
000a06 e0e0      	LDI  R30,LOW(0)
000a07 83ee      	STD  Y+6,R30
                 _0x2020053:
000a08 940e 1057 	CALL SUBOPT_0x23
000a0a f430      	BRSH _0x2020055
000a0b 931a      	ST   -Y,R17
000a0c 9513      	INC  R17
000a0d 940e 105f 	CALL SUBOPT_0x24
000a0f 83ef      	STD  Y+7,R30
000a10 cff7      	RJMP _0x2020053
                 _0x2020055:
000a11 81ef      	LDD  R30,Y+7
000a12 87e8      	STD  Y+8,R30
000a13 85ed      	LDD  R30,Y+13
000a14 0f3e      	ADD  R19,R30
000a15 2fe2      	MOV  R30,R18
000a16 5021      	SUBI R18,1
000a17 30e0      	CPI  R30,0
000a18 f761      	BRNE _0x2020051
000a19 c079      	RJMP _0x2020056
                 _0x202004D:
000a1a e0e0      	LDI  R30,LOW(0)
000a1b 83ee      	STD  Y+6,R30
                 _0x2020057:
000a1c 940e 1057 	CALL SUBOPT_0x23
000a1e f008      	BRLO PC+2
000a1f c073      	RJMP _0x2020059
000a20 891c      	LDD  R17,Y+20
000a21 893b      	LDD  R19,Y+19
000a22 e0e1      	LDI  R30,LOW(1)
000a23 2f2e      	MOV  R18,R30
000a24 2f0e      	MOV  R16,R30
000a25 89aa      	LDD  R26,Y+18
000a26 27bb      	CLR  R27
000a27 89ec      	LDD  R30,Y+20
000a28 e0f0      	LDI  R31,0
000a29 1bae      	SUB  R26,R30
000a2a 0bbf      	SBC  R27,R31
000a2b 01ad      	MOVW R20,R26
000a2c 2355      	TST  R21
000a2d f42a      	BRPL _0x202005A
000a2e ef0f      	LDI  R16,LOW(255)
000a2f 01fa      	MOVW R30,R20
000a30 940e 1303 	CALL __ANEGW1
000a32 01af      	MOVW R20,R30
                 _0x202005A:
000a33 01fa      	MOVW R30,R20
000a34 0fee      	LSL  R30
000a35 1fff      	ROL  R31
000a36 87ef      	STD  Y+15,R30
000a37 8bf8      	STD  Y+15+1,R31
000a38 89a9      	LDD  R26,Y+17
000a39 27bb      	CLR  R27
000a3a 89eb      	LDD  R30,Y+19
000a3b e0f0      	LDI  R31,0
000a3c 1bae      	SUB  R26,R30
000a3d 0bbf      	SBC  R27,R31
000a3e 87ad      	STD  Y+13,R26
000a3f 87be      	STD  Y+13+1,R27
000a40 85ae      	LDD  R26,Y+14
000a41 23aa      	TST  R26
000a42 f43a      	BRPL _0x202005B
000a43 ef2f      	LDI  R18,LOW(255)
000a44 85ed      	LDD  R30,Y+13
000a45 85fe      	LDD  R31,Y+13+1
000a46 940e 1303 	CALL __ANEGW1
000a48 87ed      	STD  Y+13,R30
000a49 87fe      	STD  Y+13+1,R31
                 _0x202005B:
000a4a 85ed      	LDD  R30,Y+13
000a4b 85fe      	LDD  R31,Y+13+1
000a4c 0fee      	LSL  R30
000a4d 1fff      	ROL  R31
000a4e 87eb      	STD  Y+11,R30
000a4f 87fc      	STD  Y+11+1,R31
000a50 931a      	ST   -Y,R17
000a51 933a      	ST   -Y,R19
000a52 e0a1      	LDI  R26,LOW(1)
000a53 df25      	RCALL _glcd_putpixelm_G101
000a54 87e8      	STD  Y+8,R30
000a55 e0e0      	LDI  R30,LOW(0)
000a56 87e9      	STD  Y+9,R30
000a57 87ea      	STD  Y+9+1,R30
000a58 85ad      	LDD  R26,Y+13
000a59 85be      	LDD  R27,Y+13+1
000a5a 174a      	CP   R20,R26
000a5b 075b      	CPC  R21,R27
000a5c f0bc      	BRLT _0x202005C
                 _0x202005E:
000a5d 0f10      	ADD  R17,R16
000a5e 85eb      	LDD  R30,Y+11
000a5f 85fc      	LDD  R31,Y+11+1
000a60 940e 1063 	CALL SUBOPT_0x25
000a62 85a9      	LDD  R26,Y+9
000a63 85ba      	LDD  R27,Y+9+1
000a64 174a      	CP   R20,R26
000a65 075b      	CPC  R21,R27
000a66 f42c      	BRGE _0x2020060
000a67 0f32      	ADD  R19,R18
000a68 85af      	LDD  R26,Y+15
000a69 89b8      	LDD  R27,Y+15+1
000a6a 940e 106a 	CALL SUBOPT_0x26
                 _0x2020060:
000a6c 931a      	ST   -Y,R17
000a6d 940e 105f 	CALL SUBOPT_0x24
000a6f 87e8      	STD  Y+8,R30
000a70 89ea      	LDD  R30,Y+18
000a71 17e1      	CP   R30,R17
000a72 f751      	BRNE _0x202005E
000a73 c018      	RJMP _0x2020061
                 _0x202005C:
                 _0x2020063:
000a74 0f32      	ADD  R19,R18
000a75 85ef      	LDD  R30,Y+15
000a76 89f8      	LDD  R31,Y+15+1
000a77 940e 1063 	CALL SUBOPT_0x25
000a79 85ed      	LDD  R30,Y+13
000a7a 85fe      	LDD  R31,Y+13+1
000a7b 85a9      	LDD  R26,Y+9
000a7c 85ba      	LDD  R27,Y+9+1
000a7d 17ea      	CP   R30,R26
000a7e 07fb      	CPC  R31,R27
000a7f f42c      	BRGE _0x2020065
000a80 0f10      	ADD  R17,R16
000a81 85ab      	LDD  R26,Y+11
000a82 85bc      	LDD  R27,Y+11+1
000a83 940e 106a 	CALL SUBOPT_0x26
                 _0x2020065:
000a85 931a      	ST   -Y,R17
000a86 940e 105f 	CALL SUBOPT_0x24
000a88 87e8      	STD  Y+8,R30
000a89 89e9      	LDD  R30,Y+17
000a8a 17e3      	CP   R30,R19
000a8b f741      	BRNE _0x2020063
                 _0x2020061:
000a8c 89eb      	LDD  R30,Y+19
000a8d 5fef      	SUBI R30,-LOW(1)
000a8e 8beb      	STD  Y+19,R30
000a8f 89e9      	LDD  R30,Y+17
000a90 5fef      	SUBI R30,-LOW(1)
000a91 8be9      	STD  Y+17,R30
000a92 cf89      	RJMP _0x2020057
                 _0x2020059:
                 _0x2020056:
                 _0x202004C:
                 _0x210000B:
000a93 940e 13fa 	CALL __LOADLOCR6
000a95 9665      	ADIW R28,21
000a96 9508      	RET
                 ; .FEND
                 _glcd_plot8_G101:
                 ; .FSTART _glcd_plot8_G101
000a97 93ba      	ST   -Y,R27
000a98 93aa      	ST   -Y,R26
000a99 9723      	SBIW R28,3
000a9a 940e 13f3 	CALL __SAVELOCR6
000a9c 85ed      	LDD  R30,Y+13
000a9d 87e8      	STD  Y+8,R30
                +
000a9e 91e0 0173+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000aa0 83ef      	STD  Y+7,R30
000aa1 91e0 016b 	LDS  R30,_glcd_state
000aa3 83ee      	STD  Y+6,R30
000aa4 89aa      	LDD  R26,Y+18
000aa5 27bb      	CLR  R27
000aa6 85ef      	LDD  R30,Y+15
000aa7 940e 1045 	CALL SUBOPT_0x20
000aa9 89a9      	LDD  R26,Y+17
000aaa 27bb      	CLR  R27
000aab 89e8      	LDD  R30,Y+16
000aac 940e 1071 	CALL SUBOPT_0x27
000aae 89e8      	LDD  R30,Y+16
000aaf 940e 1078 	CALL SUBOPT_0x28
000ab1 f071      	BREQ _0x2020073
000ab2 85e8      	LDD  R30,Y+8
000ab3 78e0      	ANDI R30,LOW(0x80)
000ab4 f4f1      	BRNE _0x2020075
000ab5 85ad      	LDD  R26,Y+13
000ab6 85be      	LDD  R27,Y+13+1
000ab7 e5ea      	LDI  R30,LOW(90)
000ab8 e0f0      	LDI  R31,HIGH(90)
000ab9 940e 1080 	CALL SUBOPT_0x29
000abb f01c      	BRLT _0x2020077
000abc 940e 1089 	CALL SUBOPT_0x2A
000abe f40c      	BRGE _0x2020078
                 _0x2020077:
000abf c013      	RJMP _0x2020076
                 _0x2020078:
                 _0x2020073:
000ac0 2333      	TST  R19
000ac1 f012      	BRMI _0x2020079
000ac2 940e 108e 	CALL SUBOPT_0x2B
                 _0x2020079:
000ac4 81af      	LDD  R26,Y+7
000ac5 30a2      	CPI  R26,LOW(0x2)
000ac6 f020      	BRLO _0x202007B
                +
000ac7 3022     +CPI R18 , LOW ( 2 )
000ac8 e0e0     +LDI R30 , HIGH ( 2 )
000ac9 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000aca f40c      	BRGE _0x202007C
                 _0x202007B:
000acb c007      	RJMP _0x202007A
                 _0x202007C:
000acc 940e 1092 	CALL SUBOPT_0x2C
000ace f421      	BRNE _0x202007D
000acf 930a      	ST   -Y,R16
000ad0 2fa2      	MOV  R26,R18
000ad1 50a1      	SUBI R26,LOW(1)
000ad2 dd4b      	RCALL _glcd_setpixel
                 _0x202007D:
                 _0x202007A:
                 _0x2020076:
                 _0x2020075:
000ad3 85e8      	LDD  R30,Y+8
000ad4 78e8      	ANDI R30,LOW(0x88)
000ad5 38e8      	CPI  R30,LOW(0x88)
000ad6 f091      	BREQ _0x202007F
000ad7 85e8      	LDD  R30,Y+8
000ad8 78e0      	ANDI R30,LOW(0x80)
000ad9 f4c9      	BRNE _0x2020081
000ada 85ad      	LDD  R26,Y+13
000adb 85be      	LDD  R27,Y+13+1
000adc 5fa2      	SUBI R26,LOW(-270)
000add 4fbe      	SBCI R27,HIGH(-270)
000ade 940e 109b 	CALL SUBOPT_0x2D
000ae0 f03c      	BRLT _0x2020083
000ae1 85ad      	LDD  R26,Y+13
000ae2 85be      	LDD  R27,Y+13+1
000ae3 5fa2      	SUBI R26,LOW(-270)
000ae4 4fbe      	SBCI R27,HIGH(-270)
000ae5 940e 10a0 	CALL SUBOPT_0x2E
000ae7 f40c      	BRGE _0x2020084
                 _0x2020083:
000ae8 c00a      	RJMP _0x2020082
                 _0x2020084:
                 _0x202007F:
000ae9 940e 10a5 	CALL SUBOPT_0x2F
000aeb f038      	BRLO _0x2020085
000aec 940e 10ac 	CALL SUBOPT_0x30
000aee f421      	BRNE _0x2020086
000aef 930a      	ST   -Y,R16
000af0 2fa4      	MOV  R26,R20
000af1 5faf      	SUBI R26,-LOW(1)
000af2 dd2b      	RCALL _glcd_setpixel
                 _0x2020086:
                 _0x2020085:
                 _0x2020082:
                 _0x2020081:
000af3 89aa      	LDD  R26,Y+18
000af4 27bb      	CLR  R27
000af5 85ef      	LDD  R30,Y+15
000af6 e0f0      	LDI  R31,0
000af7 1bae      	SUB  R26,R30
000af8 0bbf      	SBC  R27,R31
000af9 018d      	MOVW R16,R26
000afa 2311      	TST  R17
000afb f40a      	BRPL PC+2
000afc c045      	RJMP _0x2020087
000afd 85e8      	LDD  R30,Y+8
000afe 78e2      	ANDI R30,LOW(0x82)
000aff 38e2      	CPI  R30,LOW(0x82)
000b00 f091      	BREQ _0x2020089
000b01 85e8      	LDD  R30,Y+8
000b02 78e0      	ANDI R30,LOW(0x80)
000b03 f511      	BRNE _0x202008B
000b04 85ad      	LDD  R26,Y+13
000b05 85be      	LDD  R27,Y+13+1
000b06 5aa6      	SUBI R26,LOW(-90)
000b07 4fbf      	SBCI R27,HIGH(-90)
000b08 940e 109b 	CALL SUBOPT_0x2D
000b0a f03c      	BRLT _0x202008D
000b0b 85ad      	LDD  R26,Y+13
000b0c 85be      	LDD  R27,Y+13+1
000b0d 5aa6      	SUBI R26,LOW(-90)
000b0e 4fbf      	SBCI R27,HIGH(-90)
000b0f 940e 10a0 	CALL SUBOPT_0x2E
000b11 f40c      	BRGE _0x202008E
                 _0x202008D:
000b12 c013      	RJMP _0x202008C
                 _0x202008E:
                 _0x2020089:
000b13 2333      	TST  R19
000b14 f012      	BRMI _0x202008F
000b15 940e 108e 	CALL SUBOPT_0x2B
                 _0x202008F:
000b17 81af      	LDD  R26,Y+7
000b18 30a2      	CPI  R26,LOW(0x2)
000b19 f020      	BRLO _0x2020091
                +
000b1a 3022     +CPI R18 , LOW ( 2 )
000b1b e0e0     +LDI R30 , HIGH ( 2 )
000b1c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
000b1d f40c      	BRGE _0x2020092
                 _0x2020091:
000b1e c007      	RJMP _0x2020090
                 _0x2020092:
000b1f 940e 1092 	CALL SUBOPT_0x2C
000b21 f421      	BRNE _0x2020093
000b22 930a      	ST   -Y,R16
000b23 2fa2      	MOV  R26,R18
000b24 50a1      	SUBI R26,LOW(1)
000b25 dcf8      	RCALL _glcd_setpixel
                 _0x2020093:
                 _0x2020090:
                 _0x202008C:
                 _0x202008B:
000b26 85e8      	LDD  R30,Y+8
000b27 78e4      	ANDI R30,LOW(0x84)
000b28 38e4      	CPI  R30,LOW(0x84)
000b29 f071      	BREQ _0x2020095
000b2a 85e8      	LDD  R30,Y+8
000b2b 78e0      	ANDI R30,LOW(0x80)
000b2c f4a9      	BRNE _0x2020097
000b2d 85ad      	LDD  R26,Y+13
000b2e 85be      	LDD  R27,Y+13+1
000b2f e0ee      	LDI  R30,LOW(270)
000b30 e0f1      	LDI  R31,HIGH(270)
000b31 940e 1080 	CALL SUBOPT_0x29
000b33 f01c      	BRLT _0x2020099
000b34 940e 1089 	CALL SUBOPT_0x2A
000b36 f40c      	BRGE _0x202009A
                 _0x2020099:
000b37 c00a      	RJMP _0x2020098
                 _0x202009A:
                 _0x2020095:
000b38 940e 10a5 	CALL SUBOPT_0x2F
000b3a f038      	BRLO _0x202009B
000b3b 940e 10ac 	CALL SUBOPT_0x30
000b3d f421      	BRNE _0x202009C
000b3e 930a      	ST   -Y,R16
000b3f 2fa4      	MOV  R26,R20
000b40 5faf      	SUBI R26,-LOW(1)
000b41 dcdc      	RCALL _glcd_setpixel
                 _0x202009C:
                 _0x202009B:
                 _0x2020098:
                 _0x2020097:
                 _0x2020087:
000b42 89aa      	LDD  R26,Y+18
000b43 27bb      	CLR  R27
000b44 89e8      	LDD  R30,Y+16
000b45 940e 1045 	CALL SUBOPT_0x20
000b47 89a9      	LDD  R26,Y+17
000b48 27bb      	CLR  R27
000b49 85ef      	LDD  R30,Y+15
000b4a 940e 1071 	CALL SUBOPT_0x27
000b4c 85ef      	LDD  R30,Y+15
000b4d 940e 1078 	CALL SUBOPT_0x28
000b4f f081      	BREQ _0x202009E
000b50 85e8      	LDD  R30,Y+8
000b51 78e0      	ANDI R30,LOW(0x80)
000b52 f4f1      	BRNE _0x20200A0
000b53 85eb      	LDD  R30,Y+11
000b54 85fc      	LDD  R31,Y+11+1
000b55 85ad      	LDD  R26,Y+13
000b56 85be      	LDD  R27,Y+13+1
000b57 17ae      	CP   R26,R30
000b58 07bf      	CPC  R27,R31
000b59 f02c      	BRLT _0x20200A2
000b5a 85e9      	LDD  R30,Y+9
000b5b 85fa      	LDD  R31,Y+9+1
000b5c 17ea      	CP   R30,R26
000b5d 07fb      	CPC  R31,R27
000b5e f40c      	BRGE _0x20200A3
                 _0x20200A2:
000b5f c011      	RJMP _0x20200A1
                 _0x20200A3:
                 _0x202009E:
000b60 2333      	TST  R19
000b61 f07a      	BRMI _0x20200A4
000b62 940e 108e 	CALL SUBOPT_0x2B
000b64 81af      	LDD  R26,Y+7
000b65 30a2      	CPI  R26,LOW(0x2)
000b66 f050      	BRLO _0x20200A5
000b67 2fe0      	MOV  R30,R16
000b68 5fee      	SUBI R30,-LOW(2)
000b69 940e 10b5 	CALL SUBOPT_0x31
000b6b f429      	BRNE _0x20200A6
000b6c 2fe0      	MOV  R30,R16
000b6d 5fef      	SUBI R30,-LOW(1)
000b6e 93ea      	ST   -Y,R30
000b6f 2fa2      	MOV  R26,R18
000b70 dcad      	RCALL _glcd_setpixel
                 _0x20200A6:
                 _0x20200A5:
                 _0x20200A4:
                 _0x20200A1:
                 _0x20200A0:
000b71 85e8      	LDD  R30,Y+8
000b72 78e8      	ANDI R30,LOW(0x88)
000b73 38e8      	CPI  R30,LOW(0x88)
000b74 f071      	BREQ _0x20200A8
000b75 85e8      	LDD  R30,Y+8
000b76 78e0      	ANDI R30,LOW(0x80)
000b77 f4c1      	BRNE _0x20200AA
000b78 85ad      	LDD  R26,Y+13
000b79 85be      	LDD  R27,Y+13+1
000b7a e6e8      	LDI  R30,LOW(360)
000b7b e0f1      	LDI  R31,HIGH(360)
000b7c 940e 1080 	CALL SUBOPT_0x29
000b7e f01c      	BRLT _0x20200AC
000b7f 940e 1089 	CALL SUBOPT_0x2A
000b81 f40c      	BRGE _0x20200AD
                 _0x20200AC:
000b82 c00d      	RJMP _0x20200AB
                 _0x20200AD:
                 _0x20200A8:
000b83 940e 10a5 	CALL SUBOPT_0x2F
000b85 f050      	BRLO _0x20200AE
000b86 2fe0      	MOV  R30,R16
000b87 5fee      	SUBI R30,-LOW(2)
000b88 940e 10bd 	CALL SUBOPT_0x32
000b8a f429      	BRNE _0x20200AF
000b8b 2fe0      	MOV  R30,R16
000b8c 5fef      	SUBI R30,-LOW(1)
000b8d 93ea      	ST   -Y,R30
000b8e 2fa4      	MOV  R26,R20
000b8f dc8e      	RCALL _glcd_setpixel
                 _0x20200AF:
                 _0x20200AE:
                 _0x20200AB:
                 _0x20200AA:
000b90 89aa      	LDD  R26,Y+18
000b91 27bb      	CLR  R27
000b92 89e8      	LDD  R30,Y+16
000b93 e0f0      	LDI  R31,0
000b94 1bae      	SUB  R26,R30
000b95 0bbf      	SBC  R27,R31
000b96 018d      	MOVW R16,R26
000b97 2311      	TST  R17
000b98 f40a      	BRPL PC+2
000b99 c050      	RJMP _0x20200B0
000b9a 85e8      	LDD  R30,Y+8
000b9b 78e2      	ANDI R30,LOW(0x82)
000b9c 38e2      	CPI  R30,LOW(0x82)
000b9d f071      	BREQ _0x20200B2
000b9e 85e8      	LDD  R30,Y+8
000b9f 78e0      	ANDI R30,LOW(0x80)
000ba0 f509      	BRNE _0x20200B4
000ba1 85ad      	LDD  R26,Y+13
000ba2 85be      	LDD  R27,Y+13+1
000ba3 ebe4      	LDI  R30,LOW(180)
000ba4 e0f0      	LDI  R31,HIGH(180)
000ba5 940e 1080 	CALL SUBOPT_0x29
000ba7 f01c      	BRLT _0x20200B6
000ba8 940e 1089 	CALL SUBOPT_0x2A
000baa f40c      	BRGE _0x20200B7
                 _0x20200B6:
000bab c016      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B2:
000bac 2333      	TST  R19
000bad f0a2      	BRMI _0x20200B8
000bae 940e 108e 	CALL SUBOPT_0x2B
000bb0 81af      	LDD  R26,Y+7
000bb1 30a2      	CPI  R26,LOW(0x2)
000bb2 f020      	BRLO _0x20200BA
                +
000bb3 3002     +CPI R16 , LOW ( 2 )
000bb4 e0e0     +LDI R30 , HIGH ( 2 )
000bb5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000bb6 f40c      	BRGE _0x20200BB
                 _0x20200BA:
000bb7 c00a      	RJMP _0x20200B9
                 _0x20200BB:
000bb8 2fe0      	MOV  R30,R16
000bb9 50e2      	SUBI R30,LOW(2)
000bba 940e 10b5 	CALL SUBOPT_0x31
000bbc f429      	BRNE _0x20200BC
000bbd 2fe0      	MOV  R30,R16
000bbe 50e1      	SUBI R30,LOW(1)
000bbf 93ea      	ST   -Y,R30
000bc0 2fa2      	MOV  R26,R18
000bc1 dc5c      	RCALL _glcd_setpixel
                 _0x20200BC:
                 _0x20200B9:
                 _0x20200B8:
                 _0x20200B5:
                 _0x20200B4:
000bc2 85e8      	LDD  R30,Y+8
000bc3 78e4      	ANDI R30,LOW(0x84)
000bc4 38e4      	CPI  R30,LOW(0x84)
000bc5 f091      	BREQ _0x20200BE
000bc6 85e8      	LDD  R30,Y+8
000bc7 78e0      	ANDI R30,LOW(0x80)
000bc8 f509      	BRNE _0x20200C0
000bc9 85ad      	LDD  R26,Y+13
000bca 85be      	LDD  R27,Y+13+1
000bcb 54ac      	SUBI R26,LOW(-180)
000bcc 4fbf      	SBCI R27,HIGH(-180)
000bcd 940e 109b 	CALL SUBOPT_0x2D
000bcf f03c      	BRLT _0x20200C2
000bd0 85ad      	LDD  R26,Y+13
000bd1 85be      	LDD  R27,Y+13+1
000bd2 54ac      	SUBI R26,LOW(-180)
000bd3 4fbf      	SBCI R27,HIGH(-180)
000bd4 940e 10a0 	CALL SUBOPT_0x2E
000bd6 f40c      	BRGE _0x20200C3
                 _0x20200C2:
000bd7 c012      	RJMP _0x20200C1
                 _0x20200C3:
                 _0x20200BE:
000bd8 940e 10a5 	CALL SUBOPT_0x2F
000bda f020      	BRLO _0x20200C5
                +
000bdb 3002     +CPI R16 , LOW ( 2 )
000bdc e0e0     +LDI R30 , HIGH ( 2 )
000bdd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000bde f40c      	BRGE _0x20200C6
                 _0x20200C5:
000bdf c00a      	RJMP _0x20200C4
                 _0x20200C6:
000be0 2fe0      	MOV  R30,R16
000be1 50e2      	SUBI R30,LOW(2)
000be2 940e 10bd 	CALL SUBOPT_0x32
000be4 f429      	BRNE _0x20200C7
000be5 2fe0      	MOV  R30,R16
000be6 50e1      	SUBI R30,LOW(1)
000be7 93ea      	ST   -Y,R30
000be8 2fa4      	MOV  R26,R20
000be9 dc34      	RCALL _glcd_setpixel
                 _0x20200C7:
                 _0x20200C4:
                 _0x20200C1:
                 _0x20200C0:
                 _0x20200B0:
000bea 940e 13fa 	CALL __LOADLOCR6
000bec 9663      	ADIW R28,19
000bed 9508      	RET
                 ; .FEND
                 _glcd_line2_G101:
                 ; .FSTART _glcd_line2_G101
000bee 93aa      	ST   -Y,R26
000bef 940e 13f5 	CALL __SAVELOCR4
000bf1 81af      	LDD  R26,Y+7
000bf2 27bb      	CLR  R27
000bf3 81ed      	LDD  R30,Y+5
000bf4 e0f0      	LDI  R31,0
000bf5 1bae      	SUB  R26,R30
000bf6 0bbf      	SBC  R27,R31
000bf7 dc02      	RCALL _glcd_clipx
000bf8 2f1e      	MOV  R17,R30
000bf9 81af      	LDD  R26,Y+7
000bfa 27bb      	CLR  R27
000bfb 81ed      	LDD  R30,Y+5
000bfc e0f0      	LDI  R31,0
000bfd 0fae      	ADD  R26,R30
000bfe 1fbf      	ADC  R27,R31
000bff dbfa      	RCALL _glcd_clipx
000c00 2f0e      	MOV  R16,R30
000c01 81ae      	LDD  R26,Y+6
000c02 27bb      	CLR  R27
000c03 81ec      	LDD  R30,Y+4
000c04 e0f0      	LDI  R31,0
000c05 1bae      	SUB  R26,R30
000c06 0bbf      	SBC  R27,R31
000c07 dc04      	RCALL _glcd_clipy
000c08 2f3e      	MOV  R19,R30
000c09 81ae      	LDD  R26,Y+6
000c0a 27bb      	CLR  R27
000c0b 81ec      	LDD  R30,Y+4
000c0c e0f0      	LDI  R31,0
000c0d 0fae      	ADD  R26,R30
000c0e 1fbf      	ADC  R27,R31
000c0f dbfc      	RCALL _glcd_clipy
000c10 2f2e      	MOV  R18,R30
000c11 931a      	ST   -Y,R17
000c12 933a      	ST   -Y,R19
000c13 930a      	ST   -Y,R16
000c14 2fa3      	MOV  R26,R19
000c15 dd8b      	RCALL _glcd_line
000c16 931a      	ST   -Y,R17
000c17 932a      	ST   -Y,R18
000c18 930a      	ST   -Y,R16
000c19 2fa2      	MOV  R26,R18
000c1a dd86      	RCALL _glcd_line
000c1b 940e 13fc 	CALL __LOADLOCR4
                 _0x210000A:
000c1d 9628      	ADIW R28,8
000c1e 9508      	RET
                 ; .FEND
                 _glcd_quadrant_G101:
                 ; .FSTART _glcd_quadrant_G101
000c1f 93aa      	ST   -Y,R26
000c20 940e 13f3 	CALL __SAVELOCR6
000c22 85a9      	LDD  R26,Y+9
000c23 38a0      	CPI  R26,LOW(0x80)
000c24 f418      	BRSH _0x20200C9
000c25 85a8      	LDD  R26,Y+8
000c26 34a0      	CPI  R26,LOW(0x40)
000c27 f020      	BRLO _0x20200C8
                 _0x20200C9:
000c28 940e 13fa 	CALL __LOADLOCR6
000c2a 940c 0d54 	JMP  _0x2100009
                 _0x20200C8:
                +
000c2c 9150 0173+LDS R21 , _glcd_state + ( 8 )
                 	__GETBRMN 21,_glcd_state,8
                 _0x20200CB:
000c2e 2fe5      	MOV  R30,R21
000c2f 5051      	SUBI R21,1
000c30 30e0      	CPI  R30,0
000c31 f409      	BRNE PC+2
000c32 c04b      	RJMP _0x20200CD
000c33 81ef      	LDD  R30,Y+7
000c34 30e0      	CPI  R30,0
000c35 f421      	BRNE _0x20200CE
000c36 940e 13fa 	CALL __LOADLOCR6
000c38 940c 0d54 	JMP  _0x2100009
                 _0x20200CE:
000c3a 81ef      	LDD  R30,Y+7
000c3b 50e1      	SUBI R30,LOW(1)
000c3c 83ef      	STD  Y+7,R30
000c3d 5fef      	SUBI R30,-LOW(1)
000c3e 2f0e      	MOV  R16,R30
000c3f e0f0      	LDI  R31,0
000c40 e0a5      	LDI  R26,LOW(5)
000c41 e0b0      	LDI  R27,HIGH(5)
000c42 1bae      	SUB  R26,R30
000c43 0bbf      	SBC  R27,R31
000c44 01fd      	MOVW R30,R26
000c45 940e 131f 	CALL __LSLW2
000c47 940e 1324 	CALL __ASRW2
000c49 019f      	MOVW R18,R30
000c4a e010      	LDI  R17,LOW(0)
                 _0x20200D0:
000c4b 81ae      	LDD  R26,Y+6
000c4c 34a0      	CPI  R26,LOW(0x40)
000c4d f459      	BRNE _0x20200D2
000c4e 940e 10c5 	CALL SUBOPT_0x33
000c50 931a      	ST   -Y,R17
000c51 2fa0      	MOV  R26,R16
000c52 df9b      	RCALL _glcd_line2_G101
000c53 940e 10c5 	CALL SUBOPT_0x33
000c55 930a      	ST   -Y,R16
000c56 2fa1      	MOV  R26,R17
000c57 df96      	RCALL _glcd_line2_G101
000c58 c00f      	RJMP _0x20200D3
                 _0x20200D2:
000c59 940e 10c5 	CALL SUBOPT_0x33
000c5b 931a      	ST   -Y,R17
000c5c 930a      	ST   -Y,R16
000c5d 85ea      	LDD  R30,Y+10
000c5e e0f0      	LDI  R31,0
000c5f 93fa      	ST   -Y,R31
000c60 93ea      	ST   -Y,R30
000c61 e0e0      	LDI  R30,LOW(0)
000c62 e0f0      	LDI  R31,HIGH(0)
000c63 93fa      	ST   -Y,R31
000c64 93ea      	ST   -Y,R30
000c65 e0a0      	LDI  R26,LOW(0)
000c66 e0b0      	LDI  R27,0
000c67 de2f      	RCALL _glcd_plot8_G101
                 _0x20200D3:
000c68 5f1f      	SUBI R17,-1
000c69 2333      	TST  R19
000c6a f41a      	BRPL _0x20200D4
000c6b 2fe1      	MOV  R30,R17
000c6c e0f0      	LDI  R31,0
000c6d c008      	RJMP _0x202011C
                 _0x20200D4:
000c6e 5001      	SUBI R16,1
000c6f 2fa1      	MOV  R26,R17
000c70 27bb      	CLR  R27
000c71 2fe0      	MOV  R30,R16
000c72 e0f0      	LDI  R31,0
000c73 1bae      	SUB  R26,R30
000c74 0bbf      	SBC  R27,R31
000c75 01fd      	MOVW R30,R26
                 _0x202011C:
000c76 0fee      	LSL  R30
000c77 1fff      	ROL  R31
000c78 9631      	ADIW R30,1
                +
000c79 0f2e     +ADD R18 , R30
000c7a 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
000c7b 1701      	CP   R16,R17
000c7c f670      	BRSH _0x20200D0
000c7d cfb0      	RJMP _0x20200CB
                 _0x20200CD:
000c7e 940e 13fa 	CALL __LOADLOCR6
000c80 940c 0d54 	JMP  _0x2100009
                 ; .FEND
                 _glcd_circle:
                 ; .FSTART _glcd_circle
000c82 93aa      	ST   -Y,R26
000c83 81ea      	LDD  R30,Y+2
000c84 93ea      	ST   -Y,R30
000c85 81ea      	LDD  R30,Y+2
000c86 93ea      	ST   -Y,R30
000c87 81ea      	LDD  R30,Y+2
000c88 93ea      	ST   -Y,R30
000c89 e8af      	LDI  R26,LOW(143)
000c8a df94      	RCALL _glcd_quadrant_G101
000c8b 940c 0f2e 	JMP  _0x2100002
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000c8d 940e 13ac 	CALL __PUTPARD2
000c8f 817b         ldd  r23,y+3
000c90 816a         ldd  r22,y+2
000c91 81f9         ldd  r31,y+1
000c92 81e8         ld   r30,y
000c93 fb77         bst  r23,7
000c94 0f77         lsl  r23
000c95 fd67         sbrc r22,7
000c96 6071         sbr  r23,1
000c97 2f97         mov  r25,r23
000c98 579e         subi r25,0x7e
000c99 f081         breq __ftrunc0
000c9a f078         brcs __ftrunc0
000c9b 3198         cpi  r25,24
000c9c f490         brsh __ftrunc1
000c9d 27aa         clr  r26
000c9e 27bb         clr  r27
000c9f 2788         clr  r24
                 __ftrunc2:
000ca0 9408         sec
000ca1 9587         ror  r24
000ca2 95b7         ror  r27
000ca3 95a7         ror  r26
000ca4 959a         dec  r25
000ca5 f7d1         brne __ftrunc2
000ca6 23ea         and  r30,r26
000ca7 23fb         and  r31,r27
000ca8 2368         and  r22,r24
000ca9 c005         rjmp __ftrunc1
                 __ftrunc0:
000caa 94e8         clt
000cab 2777         clr  r23
000cac 27ee         clr  r30
000cad 27ff         clr  r31
000cae 2766         clr  r22
                 __ftrunc1:
000caf 776f         cbr  r22,0x80
000cb0 9576         lsr  r23
000cb1 f408         brcc __ftrunc3
000cb2 6860         sbr  r22,0x80
                 __ftrunc3:
000cb3 f977         bld  r23,7
000cb4 91a9         ld   r26,y+
000cb5 91b9         ld   r27,y+
000cb6 9189         ld   r24,y+
000cb7 9199         ld   r25,y+
000cb8 17ea         cp   r30,r26
000cb9 07fb         cpc  r31,r27
000cba 0768         cpc  r22,r24
000cbb 0779         cpc  r23,r25
000cbc fb97         bst  r25,7
000cbd 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000cbe 940e 0f56 	CALL SUBOPT_0x1
000cc0 940e 0c8d 	CALL _ftrunc
000cc2 940e 13a2 	CALL __PUTD1S0
000cc4 f421          brne __floor1
                 __floor0:
000cc5 940e 10ca 	CALL SUBOPT_0x34
000cc7 940c 0f4d 	JMP  _0x2100001
                 __floor1:
000cc9 f7de          brtc __floor0
000cca 940e 10ca 	CALL SUBOPT_0x34
000ccc 940e 10cd 	CALL SUBOPT_0x35
000cce 940c 0f4d 	JMP  _0x2100001
                 ; .FEND
                 _log:
                 ; .FSTART _log
000cd0 940e 13ac 	CALL __PUTPARD2
000cd2 9724      	SBIW R28,4
000cd3 931a      	ST   -Y,R17
000cd4 930a      	ST   -Y,R16
000cd5 940e 10d4 	CALL SUBOPT_0x36
000cd7 940e 13e8 	CALL __CPD02
000cd9 f02c      	BRLT _0x206000C
                +
000cda efef     +LDI R30 , LOW ( 0xFF7FFFFF )
000cdb efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
000cdc e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
000cdd ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
000cde c073      	RJMP _0x2100008
                 _0x206000C:
000cdf 940e 10d9 	CALL SUBOPT_0x37
000ce1 940e 13a7 	CALL __PUTPARD1
000ce3 b7ad      	IN   R26,SPL
000ce4 b7be      	IN   R27,SPH
000ce5 9711      	SBIW R26,1
000ce6 931f      	PUSH R17
000ce7 930f      	PUSH R16
000ce8 940e 113d 	CALL _frexp
000cea 910f      	POP  R16
000ceb 911f      	POP  R17
000cec 940e 10de 	CALL SUBOPT_0x38
000cee 940e 10d4 	CALL SUBOPT_0x36
                +
000cf0 efe3     +LDI R30 , LOW ( 0x3F3504F3 )
000cf1 e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
000cf2 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
000cf3 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
000cf4 940e 12e3 	CALL __CMPF12
000cf6 f440      	BRSH _0x206000D
000cf7 940e 10e3 	CALL SUBOPT_0x39
000cf9 940e 1200 	CALL __ADDF12
000cfb 940e 10de 	CALL SUBOPT_0x38
                +
000cfd 5001     +SUBI R16 , LOW ( 1 )
000cfe 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x206000D:
000cff 940e 10d9 	CALL SUBOPT_0x37
000d01 940e 10cd 	CALL SUBOPT_0x35
000d03 937f      	PUSH R23
000d04 936f      	PUSH R22
000d05 93ff      	PUSH R31
000d06 93ef      	PUSH R30
000d07 940e 10d9 	CALL SUBOPT_0x37
                +
000d09 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000d0a e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000d0b e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000d0c e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000d0d 940e 1200 	CALL __ADDF12
000d0f 91af      	POP  R26
000d10 91bf      	POP  R27
000d11 918f      	POP  R24
000d12 919f      	POP  R25
000d13 940e 129e 	CALL __DIVF21
000d15 940e 10de 	CALL SUBOPT_0x38
000d17 940e 10e3 	CALL SUBOPT_0x39
000d19 940e 10e5 	CALL SUBOPT_0x3A
                +
000d1b e2a6     +LDI R26 , LOW ( 0x3F654226 )
000d1c e4b2     +LDI R27 , HIGH ( 0x3F654226 )
000d1d e685     +LDI R24 , BYTE3 ( 0x3F654226 )
000d1e e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
000d1f 940e 10ec 	CALL SUBOPT_0x3B
                +
000d21 e4ee     +LDI R30 , LOW ( 0x4054114E )
000d22 e1f1     +LDI R31 , HIGH ( 0x4054114E )
000d23 e564     +LDI R22 , BYTE3 ( 0x4054114E )
000d24 e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
000d25 940e 10f1 	CALL SUBOPT_0x3C
000d27 940e 10d4 	CALL SUBOPT_0x36
000d29 940e 1250 	CALL __MULF12
000d2b 937f      	PUSH R23
000d2c 936f      	PUSH R22
000d2d 93ff      	PUSH R31
000d2e 93ef      	PUSH R30
000d2f 940e 10f6 	CALL SUBOPT_0x3D
                +
000d31 e4ad     +LDI R26 , LOW ( 0x3FD4114D )
000d32 e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
000d33 ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
000d34 e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
000d35 940e 11f9 	CALL __SUBF12
000d37 91af      	POP  R26
000d38 91bf      	POP  R27
000d39 918f      	POP  R24
000d3a 919f      	POP  R25
000d3b 940e 129e 	CALL __DIVF21
000d3d 937f      	PUSH R23
000d3e 936f      	PUSH R22
000d3f 93ff      	PUSH R31
000d40 93ef      	PUSH R30
000d41 01f8      	MOVW R30,R16
000d42 940e 1329 	CALL __CWD1
000d44 940e 11c6 	CALL __CDF1
                +
000d46 e1a8     +LDI R26 , LOW ( 0x3F317218 )
000d47 e7b2     +LDI R27 , HIGH ( 0x3F317218 )
000d48 e381     +LDI R24 , BYTE3 ( 0x3F317218 )
000d49 e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
000d4a 940e 1250 	CALL __MULF12
000d4c 91af      	POP  R26
000d4d 91bf      	POP  R27
000d4e 918f      	POP  R24
000d4f 919f      	POP  R25
000d50 940e 1200 	CALL __ADDF12
                 _0x2100008:
000d52 8119      	LDD  R17,Y+1
000d53 8108      	LDD  R16,Y+0
                 _0x2100009:
000d54 962a      	ADIW R28,10
000d55 9508      	RET
                 ; .FEND
                 _exp:
                 ; .FSTART _exp
000d56 940e 13ac 	CALL __PUTPARD2
000d58 9728      	SBIW R28,8
000d59 931a      	ST   -Y,R17
000d5a 930a      	ST   -Y,R16
000d5b 940e 10fb 	CALL SUBOPT_0x3E
                +
000d5d e5e0     +LDI R30 , LOW ( 0xC2AEAC50 )
000d5e eafc     +LDI R31 , HIGH ( 0xC2AEAC50 )
000d5f ea6e     +LDI R22 , BYTE3 ( 0xC2AEAC50 )
000d60 ec72     +LDI R23 , BYTE4 ( 0xC2AEAC50 )
                 	__GETD1N 0xC2AEAC50
000d61 940e 12e3 	CALL __CMPF12
000d63 f418      	BRSH _0x206000F
000d64 940e 102d 	CALL SUBOPT_0x1C
000d66 c083      	RJMP _0x2100007
                 _0x206000F:
                +
000d67 85ea     +LDD R30 , Y + 10
000d68 85fb     +LDD R31 , Y + 10 + 1
000d69 856c     +LDD R22 , Y + 10 + 2
000d6a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d6b 940e 13e0 	CALL __CPD10
000d6d f429      	BRNE _0x2060010
                +
000d6e e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d6f e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d70 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d71 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d72 c077      	RJMP _0x2100007
                 _0x2060010:
000d73 940e 10fb 	CALL SUBOPT_0x3E
                +
000d75 e1e8     +LDI R30 , LOW ( 0x42B17218 )
000d76 e7f2     +LDI R31 , HIGH ( 0x42B17218 )
000d77 eb61     +LDI R22 , BYTE3 ( 0x42B17218 )
000d78 e472     +LDI R23 , BYTE4 ( 0x42B17218 )
                 	__GETD1N 0x42B17218
000d79 940e 12e3 	CALL __CMPF12
000d7b f009      	BREQ PC+2
000d7c f408      	BRCC PC+2
000d7d c005      	RJMP _0x2060011
                +
000d7e efef     +LDI R30 , LOW ( 0x7F7FFFFF )
000d7f efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
000d80 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
000d81 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
000d82 c067      	RJMP _0x2100007
                 _0x2060011:
000d83 940e 10fb 	CALL SUBOPT_0x3E
                +
000d85 e3eb     +LDI R30 , LOW ( 0x3FB8AA3B )
000d86 eafa     +LDI R31 , HIGH ( 0x3FB8AA3B )
000d87 eb68     +LDI R22 , BYTE3 ( 0x3FB8AA3B )
000d88 e37f     +LDI R23 , BYTE4 ( 0x3FB8AA3B )
                 	__GETD1N 0x3FB8AA3B
000d89 940e 1250 	CALL __MULF12
                +
000d8b 87ea     +STD Y + 10 , R30
000d8c 87fb     +STD Y + 10 + 1 , R31
000d8d 876c     +STD Y + 10 + 2 , R22
000d8e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000d8f 940e 10fb 	CALL SUBOPT_0x3E
000d91 df2c      	RCALL _floor
000d92 940e 118f 	CALL __CFD1
000d94 018f      	MOVW R16,R30
000d95 940e 10fb 	CALL SUBOPT_0x3E
000d97 940e 1329 	CALL __CWD1
000d99 940e 11c6 	CALL __CDF1
000d9b 940e 10f1 	CALL SUBOPT_0x3C
000d9d 01df      	MOVW R26,R30
000d9e 01cb      	MOVW R24,R22
000d9f 940e 1100 	CALL SUBOPT_0x3F
000da1 940e 10f1 	CALL SUBOPT_0x3C
000da3 940e 10de 	CALL SUBOPT_0x38
000da5 940e 10e3 	CALL SUBOPT_0x39
000da7 940e 10e5 	CALL SUBOPT_0x3A
                +
000da9 e6ad     +LDI R26 , LOW ( 0x3D6C4C6D )
000daa e4bc     +LDI R27 , HIGH ( 0x3D6C4C6D )
000dab e68c     +LDI R24 , BYTE3 ( 0x3D6C4C6D )
000dac e39d     +LDI R25 , BYTE4 ( 0x3D6C4C6D )
                 	__GETD2N 0x3D6C4C6D
000dad 940e 1250 	CALL __MULF12
                +
000daf eaa6     +LDI R26 , LOW ( 0x40E6E3A6 )
000db0 eeb3     +LDI R27 , HIGH ( 0x40E6E3A6 )
000db1 ee86     +LDI R24 , BYTE3 ( 0x40E6E3A6 )
000db2 e490     +LDI R25 , BYTE4 ( 0x40E6E3A6 )
                 	__GETD2N 0x40E6E3A6
000db3 940e 1200 	CALL __ADDF12
000db5 940e 10d4 	CALL SUBOPT_0x36
000db7 940e 1250 	CALL __MULF12
000db9 940e 10de 	CALL SUBOPT_0x38
000dbb 940e 10f6 	CALL SUBOPT_0x3D
                +
000dbd e2a8     +LDI R26 , LOW ( 0x41A68D28 )
000dbe e8bd     +LDI R27 , HIGH ( 0x41A68D28 )
000dbf ea86     +LDI R24 , BYTE3 ( 0x41A68D28 )
000dc0 e491     +LDI R25 , BYTE4 ( 0x41A68D28 )
                 	__GETD2N 0x41A68D28
000dc1 940e 1200 	CALL __ADDF12
                +
000dc3 83ea     +STD Y + 2 , R30
000dc4 83fb     +STD Y + 2 + 1 , R31
000dc5 836c     +STD Y + 2 + 2 , R22
000dc6 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000dc7 940e 10d9 	CALL SUBOPT_0x37
                +
000dc9 81aa     +LDD R26 , Y + 2
000dca 81bb     +LDD R27 , Y + 2 + 1
000dcb 818c     +LDD R24 , Y + 2 + 2
000dcc 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000dcd 940e 1200 	CALL __ADDF12
                +
000dcf efa3     +LDI R26 , LOW ( 0x3FB504F3 )
000dd0 e0b4     +LDI R27 , HIGH ( 0x3FB504F3 )
000dd1 eb85     +LDI R24 , BYTE3 ( 0x3FB504F3 )
000dd2 e39f     +LDI R25 , BYTE4 ( 0x3FB504F3 )
                 	__GETD2N 0x3FB504F3
000dd3 940e 1250 	CALL __MULF12
000dd5 937f      	PUSH R23
000dd6 936f      	PUSH R22
000dd7 93ff      	PUSH R31
000dd8 93ef      	PUSH R30
000dd9 940e 10d4 	CALL SUBOPT_0x36
000ddb 940e 10f6 	CALL SUBOPT_0x3D
000ddd 940e 11f9 	CALL __SUBF12
000ddf 91af      	POP  R26
000de0 91bf      	POP  R27
000de1 918f      	POP  R24
000de2 919f      	POP  R25
000de3 940e 129e 	CALL __DIVF21
000de5 940e 13a7 	CALL __PUTPARD1
000de7 01d8      	MOVW R26,R16
000de8 940e 114e 	CALL _ldexp
                 _0x2100007:
000dea 8119      	LDD  R17,Y+1
000deb 8108      	LDD  R16,Y+0
000dec 962e      	ADIW R28,14
000ded 9508      	RET
                 ; .FEND
                 _pow:
                 ; .FSTART _pow
000dee 940e 13ac 	CALL __PUTPARD2
000df0 9724      	SBIW R28,4
000df1 940e 1105 	CALL SUBOPT_0x40
000df3 940e 13e0 	CALL __CPD10
000df5 f419      	BRNE _0x2060012
000df6 940e 102d 	CALL SUBOPT_0x1C
000df8 c045      	RJMP _0x2100006
                 _0x2060012:
                +
000df9 85a8     +LDD R26 , Y + 8
000dfa 85b9     +LDD R27 , Y + 8 + 1
000dfb 858a     +LDD R24 , Y + 8 + 2
000dfc 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000dfd 940e 13e8 	CALL __CPD02
000dff f494      	BRGE _0x2060013
000e00 940e 110a 	CALL SUBOPT_0x41
000e02 940e 13e0 	CALL __CPD10
000e04 f429      	BRNE _0x2060014
                +
000e05 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000e06 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000e07 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000e08 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000e09 c034      	RJMP _0x2100006
                 _0x2060014:
                +
000e0a 85a8     +LDD R26 , Y + 8
000e0b 85b9     +LDD R27 , Y + 8 + 1
000e0c 858a     +LDD R24 , Y + 8 + 2
000e0d 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000e0e 940e 110f 	CALL SUBOPT_0x42
000e10 df45      	RCALL _exp
000e11 c02c      	RJMP _0x2100006
                 _0x2060013:
000e12 940e 110a 	CALL SUBOPT_0x41
000e14 01de      	MOVW R26,R28
000e15 940e 118f 	CALL __CFD1
000e17 940e 1393 	CALL __PUTDP1
000e19 940e 10ca 	CALL SUBOPT_0x34
000e1b 940e 11c6 	CALL __CDF1
000e1d 01df      	MOVW R26,R30
000e1e 01cb      	MOVW R24,R22
000e1f 940e 110a 	CALL SUBOPT_0x41
000e21 940e 13ee 	CALL __CPD12
000e23 f019      	BREQ _0x2060015
000e24 940e 102d 	CALL SUBOPT_0x1C
000e26 c017      	RJMP _0x2100006
                 _0x2060015:
000e27 940e 1105 	CALL SUBOPT_0x40
000e29 940e 115a 	CALL __ANEGF1
000e2b 01df      	MOVW R26,R30
000e2c 01cb      	MOVW R24,R22
000e2d 940e 110f 	CALL SUBOPT_0x42
000e2f df26      	RCALL _exp
                +
000e30 87e8     +STD Y + 8 , R30
000e31 87f9     +STD Y + 8 + 1 , R31
000e32 876a     +STD Y + 8 + 2 , R22
000e33 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000e34 81e8      	LD   R30,Y
000e35 70e1      	ANDI R30,LOW(0x1)
000e36 f419      	BRNE _0x2060016
000e37 940e 1105 	CALL SUBOPT_0x40
000e39 c004      	RJMP _0x2100006
                 _0x2060016:
000e3a 940e 1105 	CALL SUBOPT_0x40
000e3c 940e 115a 	CALL __ANEGF1
                 _0x2100006:
000e3e 962c      	ADIW R28,12
000e3f 9508      	RET
                 ; .FEND
                 _sin:
                 ; .FSTART _sin
000e40 940e 13ac 	CALL __PUTPARD2
000e42 9724      	SBIW R28,4
000e43 931a      	ST   -Y,R17
000e44 e010      	LDI  R17,0
000e45 940e 1116 	CALL SUBOPT_0x43
                +
000e47 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000e48 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000e49 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000e4a e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000e4b 940e 1250 	CALL __MULF12
000e4d 940e 111b 	CALL SUBOPT_0x44
000e4f de6e      	RCALL _floor
000e50 940e 1116 	CALL SUBOPT_0x43
000e52 940e 10f1 	CALL SUBOPT_0x3C
000e54 940e 111b 	CALL SUBOPT_0x44
000e56 940e 1100 	CALL SUBOPT_0x3F
000e58 940e 12e3 	CALL __CMPF12
000e5a f009      	BREQ PC+2
000e5b f408      	BRCC PC+2
000e5c c009      	RJMP _0x2060017
000e5d 940e 1120 	CALL SUBOPT_0x45
                +
000e5f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e60 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e61 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e62 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e63 940e 1125 	CALL SUBOPT_0x46
000e65 e011      	LDI  R17,LOW(1)
                 _0x2060017:
000e66 940e 1116 	CALL SUBOPT_0x43
                +
000e68 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000e69 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000e6a e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000e6b e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000e6c 940e 12e3 	CALL __CMPF12
000e6e f009      	BREQ PC+2
000e6f f408      	BRCC PC+2
000e70 c006      	RJMP _0x2060018
000e71 940e 1116 	CALL SUBOPT_0x43
000e73 940e 1100 	CALL SUBOPT_0x3F
000e75 940e 1125 	CALL SUBOPT_0x46
                 _0x2060018:
000e77 3010      	CPI  R17,0
000e78 f041      	BREQ _0x2060019
000e79 940e 1120 	CALL SUBOPT_0x45
000e7b 940e 115a 	CALL __ANEGF1
                +
000e7d 83ed     +STD Y + 5 , R30
000e7e 83fe     +STD Y + 5 + 1 , R31
000e7f 836f     +STD Y + 5 + 2 , R22
000e80 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
                 _0x2060019:
000e81 940e 1120 	CALL SUBOPT_0x45
000e83 940e 1116 	CALL SUBOPT_0x43
000e85 940e 1250 	CALL __MULF12
                +
000e87 83e9     +STD Y + 1 , R30
000e88 83fa     +STD Y + 1 + 1 , R31
000e89 836b     +STD Y + 1 + 2 , R22
000e8a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000e8b eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000e8c ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000e8d e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000e8e e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000e8f 940e 10ec 	CALL SUBOPT_0x3B
                +
000e91 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000e92 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000e93 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000e94 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000e95 940e 10f1 	CALL SUBOPT_0x3C
000e97 940e 112c 	CALL SUBOPT_0x47
                +
000e99 e4ac     +LDI R26 , LOW ( 0x4104534C )
000e9a e5b3     +LDI R27 , HIGH ( 0x4104534C )
000e9b e084     +LDI R24 , BYTE3 ( 0x4104534C )
000e9c e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000e9d 940e 1200 	CALL __ADDF12
000e9f 940e 1116 	CALL SUBOPT_0x43
000ea1 940e 1250 	CALL __MULF12
000ea3 937f      	PUSH R23
000ea4 936f      	PUSH R22
000ea5 93ff      	PUSH R31
000ea6 93ef      	PUSH R30
                +
000ea7 81e9     +LDD R30 , Y + 1
000ea8 81fa     +LDD R31 , Y + 1 + 1
000ea9 816b     +LDD R22 , Y + 1 + 2
000eaa 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000eab e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000eac eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000ead ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000eae e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000eaf 940e 1200 	CALL __ADDF12
000eb1 940e 112c 	CALL SUBOPT_0x47
                +
000eb3 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000eb4 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000eb5 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000eb6 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000eb7 940e 1200 	CALL __ADDF12
000eb9 91af      	POP  R26
000eba 91bf      	POP  R27
000ebb 918f      	POP  R24
000ebc 919f      	POP  R25
000ebd 940e 129e 	CALL __DIVF21
000ebf 8118      	LDD  R17,Y+0
                 _0x2100005:
000ec0 9629      	ADIW R28,9
000ec1 9508      	RET
                 ; .FEND
                 _cos:
                 ; .FSTART _cos
000ec2 940e 0f56 	CALL SUBOPT_0x1
                +
000ec4 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000ec5 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000ec6 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000ec7 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000ec8 940e 11f9 	CALL __SUBF12
000eca 01df      	MOVW R26,R30
000ecb 01cb      	MOVW R24,R22
000ecc df73      	RCALL _sin
000ecd c07f      	RJMP _0x2100001
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000ece 93ba      	ST   -Y,R27
000ecf 93aa      	ST   -Y,R26
000ed0 81b9          ldd  r27,y+1
000ed1 81a8          ld   r26,y
000ed2 9610          adiw r26,0
000ed3 f031          breq memset1
000ed4 81fc          ldd  r31,y+4
000ed5 81eb          ldd  r30,y+3
000ed6 816a          ldd  r22,y+2
                 memset0:
000ed7 9361          st   z+,r22
000ed8 9711          sbiw r26,1
000ed9 f7e9          brne memset0
                 memset1:
000eda 81eb          ldd  r30,y+3
000edb 81fc          ldd  r31,y+4
                 _0x2100004:
000edc 9625      	ADIW R28,5
000edd 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000ede 93aa      	ST   -Y,R26
000edf 81e8      	LD   R30,Y
000ee0 e0f0      	LDI  R31,0
000ee1 5be4      	SUBI R30,LOW(-__glcd_mask*2)
000ee2 4ffa      	SBCI R31,HIGH(-__glcd_mask*2)
000ee3 91a4      	LPM  R26,Z
000ee4 81e9      	LDD  R30,Y+1
000ee5 940e 130f 	CALL __LSLB12
                 _0x2100003:
000ee7 9622      	ADIW R28,2
000ee8 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000ee9 93aa      	ST   -Y,R26
000eea 931a      	ST   -Y,R17
000eeb 81e9      	LDD  R30,Y+1
000eec 30e7      	CPI  R30,LOW(0x7)
000eed f011      	BREQ _0x20A0007
000eee 30ea      	CPI  R30,LOW(0xA)
000eef f419      	BRNE _0x20A0008
                 _0x20A0007:
000ef0 9110 016b 	LDS  R17,_glcd_state
000ef2 c009      	RJMP _0x20A0009
                 _0x20A0008:
000ef3 30e9      	CPI  R30,LOW(0x9)
000ef4 f419      	BRNE _0x20A000B
                +
000ef5 9110 016c+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000ef7 c004      	RJMP _0x20A0009
                 _0x20A000B:
000ef8 30e8      	CPI  R30,LOW(0x8)
000ef9 f4a1      	BRNE _0x20A0005
                +
000efa 9110 017b+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20A0009:
                +
000efc 91e0 016c+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000efe 30e0      	CPI  R30,0
000eff f049      	BREQ _0x20A000E
000f00 3010      	CPI  R17,0
000f01 f019      	BREQ _0x20A000F
000f02 efef      	LDI  R30,LOW(255)
000f03 8118      	LDD  R17,Y+0
000f04 c029      	RJMP _0x2100002
                 _0x20A000F:
000f05 81ea      	LDD  R30,Y+2
000f06 95e0      	COM  R30
000f07 8118      	LDD  R17,Y+0
000f08 c025      	RJMP _0x2100002
                 _0x20A000E:
000f09 3010      	CPI  R17,0
000f0a f419      	BRNE _0x20A0011
000f0b e0e0      	LDI  R30,LOW(0)
000f0c 8118      	LDD  R17,Y+0
000f0d c020      	RJMP _0x2100002
                 _0x20A0011:
                 _0x20A0005:
000f0e 81ea      	LDD  R30,Y+2
000f0f 8118      	LDD  R17,Y+0
000f10 c01d      	RJMP _0x2100002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f11 93ba      	ST   -Y,R27
000f12 93aa      	ST   -Y,R26
000f13 81ea      	LDD  R30,Y+2
000f14 30e1      	CPI  R30,LOW(0x1)
000f15 f421      	BRNE _0x20A0015
000f16 81e8      	LD   R30,Y
000f17 81f9      	LDD  R31,Y+1
000f18 91e4      	LPM  R30,Z
000f19 c014      	RJMP _0x2100002
                 _0x20A0015:
000f1a 30e2      	CPI  R30,LOW(0x2)
000f1b f429      	BRNE _0x20A0016
000f1c 81a8      	LD   R26,Y
000f1d 81b9      	LDD  R27,Y+1
000f1e 940e 13c3 	CALL __EEPROMRDB
000f20 c00d      	RJMP _0x2100002
                 _0x20A0016:
000f21 30e3      	CPI  R30,LOW(0x3)
000f22 f441      	BRNE _0x20A0018
000f23 81a8      	LD   R26,Y
000f24 81b9      	LDD  R27,Y+1
                +
000f25 91e0 0184+LDS R30 , _glcd_state + ( 25 )
000f27 91f0 0185+LDS R31 , _glcd_state + ( 25 ) + 1
000f29 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000f2a c003      	RJMP _0x2100002
                 _0x20A0018:
000f2b 81a8      	LD   R26,Y
000f2c 81b9      	LDD  R27,Y+1
000f2d 91ec      	LD   R30,X
                 _0x2100002:
000f2e 9623      	ADIW R28,3
000f2f 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000f30 93aa      	ST   -Y,R26
000f31 81eb      	LDD  R30,Y+3
000f32 30e0      	CPI  R30,0
000f33 f429      	BRNE _0x20A001C
000f34 81e8      	LD   R30,Y
000f35 81a9      	LDD  R26,Y+1
000f36 81ba      	LDD  R27,Y+1+1
000f37 93ec      	ST   X,R30
000f38 c014      	RJMP _0x20A001B
                 _0x20A001C:
000f39 30e2      	CPI  R30,LOW(0x2)
000f3a f431      	BRNE _0x20A001D
000f3b 81e8      	LD   R30,Y
000f3c 81a9      	LDD  R26,Y+1
000f3d 81ba      	LDD  R27,Y+1+1
000f3e 940e 13cf 	CALL __EEPROMWRB
000f40 c00c      	RJMP _0x20A001B
                 _0x20A001D:
000f41 30e3      	CPI  R30,LOW(0x3)
000f42 f451      	BRNE _0x20A001B
000f43 81e9      	LDD  R30,Y+1
000f44 81fa      	LDD  R31,Y+1+1
000f45 93fa      	ST   -Y,R31
000f46 93ea      	ST   -Y,R30
000f47 81aa      	LDD  R26,Y+2
                +
000f48 91e0 0186+LDS R30 , _glcd_state + ( 27 )
000f4a 91f0 0187+LDS R31 , _glcd_state + ( 27 ) + 1
000f4c 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20A001B:
                 _0x2100001:
000f4d 9624      	ADIW R28,4
000f4e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00016b           	.BYTE 0x1D
                 _ks0108_coord_G100:
000188           	.BYTE 0x3
                 __seed_G106:
00018b           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000f4f 940e 1329 	CALL __CWD1
000f51 940e 11c6 	CALL __CDF1
000f53 01df      	MOVW R26,R30
000f54 01cb      	MOVW R24,R22
000f55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000f56 940e 13ac 	CALL __PUTPARD2
000f58 940e 139d 	CALL __GETD2S0
000f5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000f5b 93aa      	ST   -Y,R26
000f5c 931a      	ST   -Y,R17
000f5d 930a      	ST   -Y,R16
000f5e 81ea      	LDD  R30,Y+2
000f5f e0f0      	LDI  R31,0
000f60 37e3      	CPI  R30,LOW(0x73)
000f61 e0a0      	LDI  R26,HIGH(0x73)
000f62 07fa      	CPC  R31,R26
000f63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3:
000f64 81eb      	LDD  R30,Y+3
000f65 81fc      	LDD  R31,Y+3+1
000f66 e0a6      	LDI  R26,LOW(6)
000f67 e0b0      	LDI  R27,HIGH(6)
000f68 940e 135b 	CALL __MULW12
000f6a cfe4      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000f6b 940e 0357 	CALL _degreeToRadian
000f6d 01df      	MOVW R26,R30
000f6e 01cb      	MOVW R24,R22
000f6f 940c 0e40 	JMP  _sin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
                +
000f71 e0a0     +LDI R26 , LOW ( 0x41D80000 )
000f72 e0b0     +LDI R27 , HIGH ( 0x41D80000 )
000f73 ed88     +LDI R24 , BYTE3 ( 0x41D80000 )
000f74 e491     +LDI R25 , BYTE4 ( 0x41D80000 )
                 	__GETD2N 0x41D80000
000f75 940e 1250 	CALL __MULF12
000f77 81ad      	LDD  R26,Y+5
000f78 81be      	LDD  R27,Y+5+1
000f79 940e 132e 	CALL __CWD2
000f7b 940e 13b3 	CALL __CDF2
000f7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000f7e 940e 1200 	CALL __ADDF12
000f80 940e 118f 	CALL __CFD1
000f82 018f      	MOVW R16,R30
000f83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
                +
000f84 e0a0     +LDI R26 , LOW ( 0x41B80000 )
000f85 e0b0     +LDI R27 , HIGH ( 0x41B80000 )
000f86 eb88     +LDI R24 , BYTE3 ( 0x41B80000 )
000f87 e491     +LDI R25 , BYTE4 ( 0x41B80000 )
                 	__GETD2N 0x41B80000
000f88 940e 1250 	CALL __MULF12
000f8a 81ad      	LDD  R26,Y+5
000f8b 81be      	LDD  R27,Y+5+1
000f8c 940e 132e 	CALL __CWD2
000f8e 940e 13b3 	CALL __CDF2
000f90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000f91 81eb      	LDD  R30,Y+3
000f92 81fc      	LDD  R31,Y+3+1
000f93 e1ae      	LDI  R26,LOW(30)
000f94 e0b0      	LDI  R27,HIGH(30)
000f95 940e 135b 	CALL __MULW12
000f97 cfb7      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
                +
000f98 e0a0     +LDI R26 , LOW ( 0x41900000 )
000f99 e0b0     +LDI R27 , HIGH ( 0x41900000 )
000f9a e980     +LDI R24 , BYTE3 ( 0x41900000 )
000f9b e491     +LDI R25 , BYTE4 ( 0x41900000 )
                 	__GETD2N 0x41900000
000f9c 940e 1250 	CALL __MULF12
000f9e 81ad      	LDD  R26,Y+5
000f9f 81be      	LDD  R27,Y+5+1
000fa0 940e 132e 	CALL __CWD2
000fa2 940e 13b3 	CALL __CDF2
000fa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000fa5 940e 0357 	CALL _degreeToRadian
000fa7 01df      	MOVW R26,R30
000fa8 01cb      	MOVW R24,R22
000fa9 940c 0ec2 	JMP  _cos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB:
000fab 940e 13b6 	CALL __SWAPD12
000fad 940e 11f9 	CALL __SUBF12
000faf 940e 118f 	CALL __CFD1
000fb1 018f      	MOVW R16,R30
000fb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000fb3 931a      	ST   -Y,R17
000fb4 930a      	ST   -Y,R16
000fb5 85eb      	LDD  R30,Y+11
000fb6 85fc      	LDD  R31,Y+11+1
000fb7 93fa      	ST   -Y,R31
000fb8 93ea      	ST   -Y,R30
000fb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD:
000fba 940e 0361 	CALL _getX2
000fbc 019f      	MOVW R18,R30
000fbd 935a      	ST   -Y,R21
000fbe 934a      	ST   -Y,R20
000fbf 85eb      	LDD  R30,Y+11
000fc0 85fc      	LDD  R31,Y+11+1
000fc1 93fa      	ST   -Y,R31
000fc2 93ea      	ST   -Y,R30
000fc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000fc4 940e 0387 	CALL _getY2
000fc6 83ee      	STD  Y+6,R30
000fc7 83ff      	STD  Y+6+1,R31
000fc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000fc9 9891      	CBI  0x12,1
000fca efef      	LDI  R30,LOW(255)
000fcb bbe4      	OUT  0x14,R30
000fcc 81e8      	LD   R30,Y
000fcd bbe5      	OUT  0x15,R30
000fce 940e 049d 	CALL _ks0108_enable_G100
000fd0 940c 04a1 	JMP  _ks0108_disable_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000fd2 95e6      	LSR  R30
000fd3 95e6      	LSR  R30
000fd4 95e6      	LSR  R30
000fd5 2fae      	MOV  R26,R30
000fd6 940c 04dc 	JMP  _ks0108_gotoxp_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000fd8 940e 0500 	CALL _ks0108_wrdata_G100
000fda 940c 04eb 	JMP  _ks0108_nextx_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000fdc 0fea      	ADD  R30,R26
000fdd 1ffb      	ADC  R31,R27
000fde 83ee      	STD  Y+6,R30
000fdf 83ff      	STD  Y+6+1,R31
000fe0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x13:
000fe1 85ec      	LDD  R30,Y+12
000fe2 93ea      	ST   -Y,R30
000fe3 81ef      	LDD  R30,Y+7
000fe4 85f8      	LDD  R31,Y+7+1
000fe5 9631      	ADIW R30,1
000fe6 83ef      	STD  Y+7,R30
000fe7 87f8      	STD  Y+7+1,R31
000fe8 9731      	SBIW R30,1
000fe9 93fa      	ST   -Y,R31
000fea 93ea      	ST   -Y,R30
000feb e0a0      	LDI  R26,LOW(0)
000fec 940c 0f30 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14:
000fee 85ec      	LDD  R30,Y+12
000fef 93ea      	ST   -Y,R30
000ff0 81ef      	LDD  R30,Y+7
000ff1 85f8      	LDD  R31,Y+7+1
000ff2 9631      	ADIW R30,1
000ff3 83ef      	STD  Y+7,R30
000ff4 87f8      	STD  Y+7+1,R31
000ff5 9731      	SBIW R30,1
000ff6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000ff7 2766      	CLR  R22
000ff8 2777      	CLR  R23
000ff9 01df      	MOVW R26,R30
000ffa 01cb      	MOVW R24,R22
000ffb 940c 0f11 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
000ffd 935a      	ST   -Y,R21
000ffe 85aa      	LDD  R26,Y+10
000fff 940c 0ee9 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
001001 930a      	ST   -Y,R16
001002 9503      	INC  R16
001003 89e8      	LDD  R30,Y+16
001004 93ea      	ST   -Y,R30
001005 935a      	ST   -Y,R21
001006 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
001007 930a      	ST   -Y,R16
001008 9503      	INC  R16
001009 89a8      	LDD  R26,Y+16
00100a 940e 0512 	CALL _ks0108_rdbyte_G100
00100c 23e4      	AND  R30,R20
00100d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00100e 2f5e      	MOV  R21,R30
00100f 85ec      	LDD  R30,Y+12
001010 93ea      	ST   -Y,R30
001011 81af      	LDD  R26,Y+7
001012 85b8      	LDD  R27,Y+7+1
001013 2788      	CLR  R24
001014 2799      	CLR  R25
001015 940e 0f11 	CALL _glcd_readmem
001017 2e1e      	MOV  R1,R30
001018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
001019 930a      	ST   -Y,R16
00101a 9503      	INC  R16
00101b 89e8      	LDD  R30,Y+16
00101c 93ea      	ST   -Y,R30
00101d 85ee      	LDD  R30,Y+14
00101e 93ea      	ST   -Y,R30
00101f 85e9      	LDD  R30,Y+9
001020 85fa      	LDD  R31,Y+9+1
001021 9631      	ADIW R30,1
001022 87e9      	STD  Y+9,R30
001023 87fa      	STD  Y+9+1,R31
001024 9731      	SBIW R30,1
001025 cfd1      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
001026 93ba      	ST   -Y,R27
001027 93aa      	ST   -Y,R26
001028 81a8      	LD   R26,Y
001029 81b9      	LDD  R27,Y+1
00102a 940e 13e4 	CALL __CPW02
00102c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
                +
00102d e0e0     +LDI R30 , LOW ( 0x0 )
00102e e0f0     +LDI R31 , HIGH ( 0x0 )
00102f e060     +LDI R22 , BYTE3 ( 0x0 )
001030 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
001031 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
001032 940e 13f3 	CALL __SAVELOCR6
                +
001034 91e0 016f+LDS R30 , _glcd_state + ( 4 )
001036 91f0 0170+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
001038 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
001039 01f8      	MOVW R30,R16
                +
00103a 5f0f     +SUBI R16 , LOW ( - 1 )
00103b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00103c 9004      	LPM  R0,Z
00103d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1F:
                +
00103e 91e0 016f+LDS R30 , _glcd_state + ( 4 )
001040 91f0 0170+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
001042 9631      	ADIW R30,1
001043 91e4      	LPM  R30,Z
001044 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
001045 e0f0      	LDI  R31,0
001046 0fea      	ADD  R30,R26
001047 1ffb      	ADC  R31,R27
001048 018f      	MOVW R16,R30
001049 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
00104a 93ea      	ST   -Y,R30
00104b e0e0      	LDI  R30,LOW(0)
00104c 93ea      	ST   -Y,R30
00104d e0e0      	LDI  R30,LOW(0)
00104e e0f0      	LDI  R31,HIGH(0)
00104f 93fa      	ST   -Y,R31
001050 93ea      	ST   -Y,R30
001051 e0a9      	LDI  R26,LOW(9)
001052 940c 061d 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
001054 83ed      	STD  Y+5,R30
001055 83fe      	STD  Y+5+1,R31
001056 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23:
001057 81ae      	LDD  R26,Y+6
001058 5faf      	SUBI R26,-LOW(1)
001059 83ae      	STD  Y+6,R26
00105a 50a1      	SUBI R26,LOW(1)
                +
00105b 91e0 0173+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
00105d 17ae      	CP   R26,R30
00105e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
00105f 933a      	ST   -Y,R19
001060 85aa      	LDD  R26,Y+10
001061 940c 0979 	JMP  _glcd_putpixelm_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
001063 85a9      	LDD  R26,Y+9
001064 85ba      	LDD  R27,Y+9+1
001065 0fea      	ADD  R30,R26
001066 1ffb      	ADC  R31,R27
001067 87e9      	STD  Y+9,R30
001068 87fa      	STD  Y+9+1,R31
001069 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
00106a 85e9      	LDD  R30,Y+9
00106b 85fa      	LDD  R31,Y+9+1
00106c 1bea      	SUB  R30,R26
00106d 0bfb      	SBC  R31,R27
00106e 87e9      	STD  Y+9,R30
00106f 87fa      	STD  Y+9+1,R31
001070 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
001071 e0f0      	LDI  R31,0
001072 1bae      	SUB  R26,R30
001073 0bbf      	SBC  R27,R31
001074 019d      	MOVW R18,R26
001075 89a9      	LDD  R26,Y+17
001076 27bb      	CLR  R27
001077 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
001078 e0f0      	LDI  R31,0
001079 0fea      	ADD  R30,R26
00107a 1ffb      	ADC  R31,R27
00107b 01af      	MOVW R20,R30
00107c 85e8      	LDD  R30,Y+8
00107d 78e1      	ANDI R30,LOW(0x81)
00107e 38e1      	CPI  R30,LOW(0x81)
00107f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x29:
001080 1bea      	SUB  R30,R26
001081 0bfb      	SBC  R31,R27
001082 010f      	MOVW R0,R30
001083 01df      	MOVW R26,R30
001084 85eb      	LDD  R30,Y+11
001085 85fc      	LDD  R31,Y+11+1
001086 17ae      	CP   R26,R30
001087 07bf      	CPC  R27,R31
001088 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
001089 85e9      	LDD  R30,Y+9
00108a 85fa      	LDD  R31,Y+9+1
00108b 15e0      	CP   R30,R0
00108c 05f1      	CPC  R31,R1
00108d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
00108e 930a      	ST   -Y,R16
00108f 2fa2      	MOV  R26,R18
001090 940c 081e 	JMP  _glcd_setpixel
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
001092 930a      	ST   -Y,R16
001093 2fa2      	MOV  R26,R18
001094 50a2      	SUBI R26,LOW(2)
001095 940e 05c9 	CALL _glcd_getpixel
001097 2fae      	MOV  R26,R30
001098 81ee      	LDD  R30,Y+6
001099 17ea      	CP   R30,R26
00109a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
00109b 85eb      	LDD  R30,Y+11
00109c 85fc      	LDD  R31,Y+11+1
00109d 17ae      	CP   R26,R30
00109e 07bf      	CPC  R27,R31
00109f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0010a0 85e9      	LDD  R30,Y+9
0010a1 85fa      	LDD  R31,Y+9+1
0010a2 17ea      	CP   R30,R26
0010a3 07fb      	CPC  R31,R27
0010a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
0010a5 930a      	ST   -Y,R16
0010a6 2fa4      	MOV  R26,R20
0010a7 940e 081e 	CALL _glcd_setpixel
0010a9 81af      	LDD  R26,Y+7
0010aa 30a2      	CPI  R26,LOW(0x2)
0010ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
0010ac 930a      	ST   -Y,R16
0010ad 2fa4      	MOV  R26,R20
0010ae 5fae      	SUBI R26,-LOW(2)
0010af 940e 05c9 	CALL _glcd_getpixel
0010b1 2fae      	MOV  R26,R30
0010b2 81ee      	LDD  R30,Y+6
0010b3 17ea      	CP   R30,R26
0010b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
0010b5 93ea      	ST   -Y,R30
0010b6 2fa2      	MOV  R26,R18
0010b7 940e 05c9 	CALL _glcd_getpixel
0010b9 2fae      	MOV  R26,R30
0010ba 81ee      	LDD  R30,Y+6
0010bb 17ea      	CP   R30,R26
0010bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
0010bd 93ea      	ST   -Y,R30
0010be 2fa4      	MOV  R26,R20
0010bf 940e 05c9 	CALL _glcd_getpixel
0010c1 2fae      	MOV  R26,R30
0010c2 81ee      	LDD  R30,Y+6
0010c3 17ea      	CP   R30,R26
0010c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
0010c5 85e9      	LDD  R30,Y+9
0010c6 93ea      	ST   -Y,R30
0010c7 85e9      	LDD  R30,Y+9
0010c8 93ea      	ST   -Y,R30
0010c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
0010ca 940e 1398 	CALL __GETD1S0
0010cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
                +
0010cd e0a0     +LDI R26 , LOW ( 0x3F800000 )
0010ce e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0010cf e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0010d0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0010d1 940e 11f9 	CALL __SUBF12
0010d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x36:
                +
0010d4 81ae     +LDD R26 , Y + 6
0010d5 81bf     +LDD R27 , Y + 6 + 1
0010d6 8588     +LDD R24 , Y + 6 + 2
0010d7 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
0010d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37:
                +
0010d9 81ee     +LDD R30 , Y + 6
0010da 81ff     +LDD R31 , Y + 6 + 1
0010db 8568     +LDD R22 , Y + 6 + 2
0010dc 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0010dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
0010de 83ee     +STD Y + 6 , R30
0010df 83ff     +STD Y + 6 + 1 , R31
0010e0 8768     +STD Y + 6 + 2 , R22
0010e1 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
0010e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
0010e3 dff5      	RCALL SUBOPT_0x37
0010e4 cfef      	RJMP SUBOPT_0x36
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A:
0010e5 940e 1250 	CALL __MULF12
                +
0010e7 83ea     +STD Y + 2 , R30
0010e8 83fb     +STD Y + 2 + 1 , R31
0010e9 836c     +STD Y + 2 + 2 , R22
0010ea 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0010eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
0010ec 940e 1250 	CALL __MULF12
0010ee 01df      	MOVW R26,R30
0010ef 01cb      	MOVW R24,R22
0010f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
0010f1 940e 13b6 	CALL __SWAPD12
0010f3 940e 11f9 	CALL __SUBF12
0010f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
                +
0010f6 81ea     +LDD R30 , Y + 2
0010f7 81fb     +LDD R31 , Y + 2 + 1
0010f8 816c     +LDD R22 , Y + 2 + 2
0010f9 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
0010fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
0010fb 85aa     +LDD R26 , Y + 10
0010fc 85bb     +LDD R27 , Y + 10 + 1
0010fd 858c     +LDD R24 , Y + 10 + 2
0010fe 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
                +
001100 e0e0     +LDI R30 , LOW ( 0x3F000000 )
001101 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
001102 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001103 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
                +
001105 85e8     +LDD R30 , Y + 8
001106 85f9     +LDD R31 , Y + 8 + 1
001107 856a     +LDD R22 , Y + 8 + 2
001108 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
001109 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
                +
00110a 81ec     +LDD R30 , Y + 4
00110b 81fd     +LDD R31 , Y + 4 + 1
00110c 816e     +LDD R22 , Y + 4 + 2
00110d 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00110e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
00110f 940e 0cd0 	CALL _log
                +
001111 81ac     +LDD R26 , Y + 4
001112 81bd     +LDD R27 , Y + 4 + 1
001113 818e     +LDD R24 , Y + 4 + 2
001114 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001115 cfd6      	RJMP SUBOPT_0x3B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x43:
                +
001116 81ad     +LDD R26 , Y + 5
001117 81be     +LDD R27 , Y + 5 + 1
001118 818f     +LDD R24 , Y + 5 + 2
001119 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00111a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
                +
00111b 83ed     +STD Y + 5 , R30
00111c 83fe     +STD Y + 5 + 1 , R31
00111d 836f     +STD Y + 5 + 2 , R22
00111e 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00111f cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
                +
001120 81ed     +LDD R30 , Y + 5
001121 81fe     +LDD R31 , Y + 5 + 1
001122 816f     +LDD R22 , Y + 5 + 2
001123 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001124 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
001125 940e 11f9 	CALL __SUBF12
                +
001127 83ed     +STD Y + 5 , R30
001128 83fe     +STD Y + 5 + 1 , R31
001129 836f     +STD Y + 5 + 2 , R22
00112a 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00112b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
                +
00112c 81a9     +LDD R26 , Y + 1
00112d 81ba     +LDD R27 , Y + 1 + 1
00112e 818b     +LDD R24 , Y + 1 + 2
00112f 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001130 940e 1250 	CALL __MULF12
001132 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001133 9610      	adiw r26,0
001134 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001135 ed80     +LDI R24 , LOW ( 0x7D0 )
001136 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001137 9701     +SBIW R24 , 1
001138 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001139 95a8      	wdr
00113a 9711      	sbiw r26,1
00113b f7c9      	brne __delay_ms0
                 __delay_ms1:
00113c 9508      	ret
                 
                 _frexp:
00113d 91e9      	LD   R30,Y+
00113e 91f9      	LD   R31,Y+
00113f 9169      	LD   R22,Y+
001140 9179      	LD   R23,Y+
001141 fb77      	BST  R23,7
001142 0f66      	LSL  R22
001143 1f77      	ROL  R23
001144 2788      	CLR  R24
001145 577e      	SUBI R23,0x7E
001146 0b88      	SBC  R24,R24
001147 937d      	ST   X+,R23
001148 938c      	ST   X,R24
001149 e77e      	LDI  R23,0x7E
00114a 9576      	LSR  R23
00114b 9567      	ROR  R22
00114c f06e      	BRTS __ANEGF1
00114d 9508      	RET
                 
                 _ldexp:
00114e 91e9      	LD   R30,Y+
00114f 91f9      	LD   R31,Y+
001150 9169      	LD   R22,Y+
001151 9179      	LD   R23,Y+
001152 fb77      	BST  R23,7
001153 0f66      	LSL  R22
001154 1f77      	ROL  R23
001155 0f7a      	ADD  R23,R26
001156 9576      	LSR  R23
001157 9567      	ROR  R22
001158 f00e      	BRTS __ANEGF1
001159 9508      	RET
                 
                 __ANEGF1:
00115a 9730      	SBIW R30,0
00115b 4060      	SBCI R22,0
00115c 4070      	SBCI R23,0
00115d f009      	BREQ __ANEGF10
00115e 5870      	SUBI R23,0x80
                 __ANEGF10:
00115f 9508      	RET
                 
                 __ROUND_REPACK:
001160 2355      	TST  R21
001161 f442      	BRPL __REPACK
001162 3850      	CPI  R21,0x80
001163 f411      	BRNE __ROUND_REPACK0
001164 ffe0      	SBRS R30,0
001165 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001166 9631      	ADIW R30,1
001167 1f69      	ADC  R22,R25
001168 1f79      	ADC  R23,R25
001169 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00116a e850      	LDI  R21,0x80
00116b 2757      	EOR  R21,R23
00116c f411      	BRNE __REPACK0
00116d 935f      	PUSH R21
00116e c0cf      	RJMP __ZERORES
                 __REPACK0:
00116f 3f5f      	CPI  R21,0xFF
001170 f031      	BREQ __REPACK1
001171 0f66      	LSL  R22
001172 0c00      	LSL  R0
001173 9557      	ROR  R21
001174 9567      	ROR  R22
001175 2f75      	MOV  R23,R21
001176 9508      	RET
                 __REPACK1:
001177 935f      	PUSH R21
001178 2000      	TST  R0
001179 f00a      	BRMI __REPACK2
00117a c0cf      	RJMP __MAXRES
                 __REPACK2:
00117b c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00117c e850      	LDI  R21,0x80
00117d 2e19      	MOV  R1,R25
00117e 2215      	AND  R1,R21
00117f 0f88      	LSL  R24
001180 1f99      	ROL  R25
001181 2795      	EOR  R25,R21
001182 0f55      	LSL  R21
001183 9587      	ROR  R24
                 
                 __UNPACK1:
001184 e850      	LDI  R21,0x80
001185 2e07      	MOV  R0,R23
001186 2205      	AND  R0,R21
001187 0f66      	LSL  R22
001188 1f77      	ROL  R23
001189 2775      	EOR  R23,R21
00118a 0f55      	LSL  R21
00118b 9567      	ROR  R22
00118c 9508      	RET
                 
                 __CFD1U:
00118d 9468      	SET
00118e c001      	RJMP __CFD1U0
                 __CFD1:
00118f 94e8      	CLT
                 __CFD1U0:
001190 935f      	PUSH R21
001191 dff2      	RCALL __UNPACK1
001192 3870      	CPI  R23,0x80
001193 f018      	BRLO __CFD10
001194 3f7f      	CPI  R23,0xFF
001195 f408      	BRCC __CFD10
001196 c0a7      	RJMP __ZERORES
                 __CFD10:
001197 e156      	LDI  R21,22
001198 1b57      	SUB  R21,R23
001199 f4aa      	BRPL __CFD11
00119a 9551      	NEG  R21
00119b 3058      	CPI  R21,8
00119c f40e      	BRTC __CFD19
00119d 3059      	CPI  R21,9
                 __CFD19:
00119e f030      	BRLO __CFD17
00119f efef      	SER  R30
0011a0 efff      	SER  R31
0011a1 ef6f      	SER  R22
0011a2 e77f      	LDI  R23,0x7F
0011a3 f977      	BLD  R23,7
0011a4 c01a      	RJMP __CFD15
                 __CFD17:
0011a5 2777      	CLR  R23
0011a6 2355      	TST  R21
0011a7 f0b9      	BREQ __CFD15
                 __CFD18:
0011a8 0fee      	LSL  R30
0011a9 1fff      	ROL  R31
0011aa 1f66      	ROL  R22
0011ab 1f77      	ROL  R23
0011ac 955a      	DEC  R21
0011ad f7d1      	BRNE __CFD18
0011ae c010      	RJMP __CFD15
                 __CFD11:
0011af 2777      	CLR  R23
                 __CFD12:
0011b0 3058      	CPI  R21,8
0011b1 f028      	BRLO __CFD13
0011b2 2fef      	MOV  R30,R31
0011b3 2ff6      	MOV  R31,R22
0011b4 2f67      	MOV  R22,R23
0011b5 5058      	SUBI R21,8
0011b6 cff9      	RJMP __CFD12
                 __CFD13:
0011b7 2355      	TST  R21
0011b8 f031      	BREQ __CFD15
                 __CFD14:
0011b9 9576      	LSR  R23
0011ba 9567      	ROR  R22
0011bb 95f7      	ROR  R31
0011bc 95e7      	ROR  R30
0011bd 955a      	DEC  R21
0011be f7d1      	BRNE __CFD14
                 __CFD15:
0011bf 2000      	TST  R0
0011c0 f40a      	BRPL __CFD16
0011c1 d145      	RCALL __ANEGD1
                 __CFD16:
0011c2 915f      	POP  R21
0011c3 9508      	RET
                 
                 __CDF1U:
0011c4 9468      	SET
0011c5 c001      	RJMP __CDF1U0
                 __CDF1:
0011c6 94e8      	CLT
                 __CDF1U0:
0011c7 9730      	SBIW R30,0
0011c8 4060      	SBCI R22,0
0011c9 4070      	SBCI R23,0
0011ca f0b1      	BREQ __CDF10
0011cb 2400      	CLR  R0
0011cc f026      	BRTS __CDF11
0011cd 2377      	TST  R23
0011ce f412      	BRPL __CDF11
0011cf 9400      	COM  R0
0011d0 d136      	RCALL __ANEGD1
                 __CDF11:
0011d1 2e17      	MOV  R1,R23
0011d2 e17e      	LDI  R23,30
0011d3 2011      	TST  R1
                 __CDF12:
0011d4 f032      	BRMI __CDF13
0011d5 957a      	DEC  R23
0011d6 0fee      	LSL  R30
0011d7 1fff      	ROL  R31
0011d8 1f66      	ROL  R22
0011d9 1c11      	ROL  R1
0011da cff9      	RJMP __CDF12
                 __CDF13:
0011db 2fef      	MOV  R30,R31
0011dc 2ff6      	MOV  R31,R22
0011dd 2d61      	MOV  R22,R1
0011de 935f      	PUSH R21
0011df df8a      	RCALL __REPACK
0011e0 915f      	POP  R21
                 __CDF10:
0011e1 9508      	RET
                 
                 __SWAPACC:
0011e2 934f      	PUSH R20
0011e3 01af      	MOVW R20,R30
0011e4 01fd      	MOVW R30,R26
0011e5 01da      	MOVW R26,R20
0011e6 01ab      	MOVW R20,R22
0011e7 01bc      	MOVW R22,R24
0011e8 01ca      	MOVW R24,R20
0011e9 2d40      	MOV  R20,R0
0011ea 2c01      	MOV  R0,R1
0011eb 2e14      	MOV  R1,R20
0011ec 914f      	POP  R20
0011ed 9508      	RET
                 
                 __UADD12:
0011ee 0fea      	ADD  R30,R26
0011ef 1ffb      	ADC  R31,R27
0011f0 1f68      	ADC  R22,R24
0011f1 9508      	RET
                 
                 __NEGMAN1:
0011f2 95e0      	COM  R30
0011f3 95f0      	COM  R31
0011f4 9560      	COM  R22
0011f5 5fef      	SUBI R30,-1
0011f6 4fff      	SBCI R31,-1
0011f7 4f6f      	SBCI R22,-1
0011f8 9508      	RET
                 
                 __SUBF12:
0011f9 935f      	PUSH R21
0011fa df81      	RCALL __UNPACK
0011fb 3890      	CPI  R25,0x80
0011fc f171      	BREQ __ADDF129
0011fd e850      	LDI  R21,0x80
0011fe 2615      	EOR  R1,R21
                 
0011ff c004      	RJMP __ADDF120
                 
                 __ADDF12:
001200 935f      	PUSH R21
001201 df7a      	RCALL __UNPACK
001202 3890      	CPI  R25,0x80
001203 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001204 3870      	CPI  R23,0x80
001205 f121      	BREQ __ADDF128
                 __ADDF121:
001206 2f57      	MOV  R21,R23
001207 1b59      	SUB  R21,R25
001208 f12b      	BRVS __ADDF1211
001209 f412      	BRPL __ADDF122
00120a dfd7      	RCALL __SWAPACC
00120b cffa      	RJMP __ADDF121
                 __ADDF122:
00120c 3158      	CPI  R21,24
00120d f018      	BRLO __ADDF123
00120e 27aa      	CLR  R26
00120f 27bb      	CLR  R27
001210 2788      	CLR  R24
                 __ADDF123:
001211 3058      	CPI  R21,8
001212 f028      	BRLO __ADDF124
001213 2fab      	MOV  R26,R27
001214 2fb8      	MOV  R27,R24
001215 2788      	CLR  R24
001216 5058      	SUBI R21,8
001217 cff9      	RJMP __ADDF123
                 __ADDF124:
001218 2355      	TST  R21
001219 f029      	BREQ __ADDF126
                 __ADDF125:
00121a 9586      	LSR  R24
00121b 95b7      	ROR  R27
00121c 95a7      	ROR  R26
00121d 955a      	DEC  R21
00121e f7d9      	BRNE __ADDF125
                 __ADDF126:
00121f 2d50      	MOV  R21,R0
001220 2551      	EOR  R21,R1
001221 f072      	BRMI __ADDF127
001222 dfcb      	RCALL __UADD12
001223 f438      	BRCC __ADDF129
001224 9567      	ROR  R22
001225 95f7      	ROR  R31
001226 95e7      	ROR  R30
001227 9573      	INC  R23
001228 f413      	BRVC __ADDF129
001229 c020      	RJMP __MAXRES
                 __ADDF128:
00122a dfb7      	RCALL __SWAPACC
                 __ADDF129:
00122b df3e      	RCALL __REPACK
00122c 915f      	POP  R21
00122d 9508      	RET
                 __ADDF1211:
00122e f7d8      	BRCC __ADDF128
00122f cffb      	RJMP __ADDF129
                 __ADDF127:
001230 1bea      	SUB  R30,R26
001231 0bfb      	SBC  R31,R27
001232 0b68      	SBC  R22,R24
001233 f051      	BREQ __ZERORES
001234 f410      	BRCC __ADDF1210
001235 9400      	COM  R0
001236 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001237 2366      	TST  R22
001238 f392      	BRMI __ADDF129
001239 0fee      	LSL  R30
00123a 1fff      	ROL  R31
00123b 1f66      	ROL  R22
00123c 957a      	DEC  R23
00123d f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00123e 27ee      	CLR  R30
00123f 27ff      	CLR  R31
001240 2766      	CLR  R22
001241 2777      	CLR  R23
001242 915f      	POP  R21
001243 9508      	RET
                 
                 __MINRES:
001244 efef      	SER  R30
001245 efff      	SER  R31
001246 e76f      	LDI  R22,0x7F
001247 ef7f      	SER  R23
001248 915f      	POP  R21
001249 9508      	RET
                 
                 __MAXRES:
00124a efef      	SER  R30
00124b efff      	SER  R31
00124c e76f      	LDI  R22,0x7F
00124d e77f      	LDI  R23,0x7F
00124e 915f      	POP  R21
00124f 9508      	RET
                 
                 __MULF12:
001250 935f      	PUSH R21
001251 df2a      	RCALL __UNPACK
001252 3870      	CPI  R23,0x80
001253 f351      	BREQ __ZERORES
001254 3890      	CPI  R25,0x80
001255 f341      	BREQ __ZERORES
001256 2401      	EOR  R0,R1
001257 9408      	SEC
001258 1f79      	ADC  R23,R25
001259 f423      	BRVC __MULF124
00125a f31c      	BRLT __ZERORES
                 __MULF125:
00125b 2000      	TST  R0
00125c f33a      	BRMI __MINRES
00125d cfec      	RJMP __MAXRES
                 __MULF124:
00125e 920f      	PUSH R0
00125f 931f      	PUSH R17
001260 932f      	PUSH R18
001261 933f      	PUSH R19
001262 934f      	PUSH R20
001263 2711      	CLR  R17
001264 2722      	CLR  R18
001265 2799      	CLR  R25
001266 9f68      	MUL  R22,R24
001267 01a0      	MOVW R20,R0
001268 9f8f      	MUL  R24,R31
001269 2d30      	MOV  R19,R0
00126a 0d41      	ADD  R20,R1
00126b 1f59      	ADC  R21,R25
00126c 9f6b      	MUL  R22,R27
00126d 0d30      	ADD  R19,R0
00126e 1d41      	ADC  R20,R1
00126f 1f59      	ADC  R21,R25
001270 9f8e      	MUL  R24,R30
001271 d027      	RCALL __MULF126
001272 9fbf      	MUL  R27,R31
001273 d025      	RCALL __MULF126
001274 9f6a      	MUL  R22,R26
001275 d023      	RCALL __MULF126
001276 9fbe      	MUL  R27,R30
001277 d01d      	RCALL __MULF127
001278 9faf      	MUL  R26,R31
001279 d01b      	RCALL __MULF127
00127a 9fae      	MUL  R26,R30
00127b 0d11      	ADD  R17,R1
00127c 1f29      	ADC  R18,R25
00127d 1f39      	ADC  R19,R25
00127e 1f49      	ADC  R20,R25
00127f 1f59      	ADC  R21,R25
001280 2fe3      	MOV  R30,R19
001281 2ff4      	MOV  R31,R20
001282 2f65      	MOV  R22,R21
001283 2f52      	MOV  R21,R18
001284 914f      	POP  R20
001285 913f      	POP  R19
001286 912f      	POP  R18
001287 911f      	POP  R17
001288 900f      	POP  R0
001289 2366      	TST  R22
00128a f02a      	BRMI __MULF122
00128b 0f55      	LSL  R21
00128c 1fee      	ROL  R30
00128d 1fff      	ROL  R31
00128e 1f66      	ROL  R22
00128f c002      	RJMP __MULF123
                 __MULF122:
001290 9573      	INC  R23
001291 f24b      	BRVS __MULF125
                 __MULF123:
001292 decd      	RCALL __ROUND_REPACK
001293 915f      	POP  R21
001294 9508      	RET
                 
                 __MULF127:
001295 0d10      	ADD  R17,R0
001296 1d21      	ADC  R18,R1
001297 1f39      	ADC  R19,R25
001298 c002      	RJMP __MULF128
                 __MULF126:
001299 0d20      	ADD  R18,R0
00129a 1d31      	ADC  R19,R1
                 __MULF128:
00129b 1f49      	ADC  R20,R25
00129c 1f59      	ADC  R21,R25
00129d 9508      	RET
                 
                 __DIVF21:
00129e 935f      	PUSH R21
00129f dedc      	RCALL __UNPACK
0012a0 3870      	CPI  R23,0x80
0012a1 f421      	BRNE __DIVF210
0012a2 2011      	TST  R1
                 __DIVF211:
0012a3 f40a      	BRPL __DIVF219
0012a4 cf9f      	RJMP __MINRES
                 __DIVF219:
0012a5 cfa4      	RJMP __MAXRES
                 __DIVF210:
0012a6 3890      	CPI  R25,0x80
0012a7 f409      	BRNE __DIVF218
                 __DIVF217:
0012a8 cf95      	RJMP __ZERORES
                 __DIVF218:
0012a9 2401      	EOR  R0,R1
0012aa 9408      	SEC
0012ab 0b97      	SBC  R25,R23
0012ac f41b      	BRVC __DIVF216
0012ad f3d4      	BRLT __DIVF217
0012ae 2000      	TST  R0
0012af cff3      	RJMP __DIVF211
                 __DIVF216:
0012b0 2f79      	MOV  R23,R25
0012b1 931f      	PUSH R17
0012b2 932f      	PUSH R18
0012b3 933f      	PUSH R19
0012b4 934f      	PUSH R20
0012b5 2411      	CLR  R1
0012b6 2711      	CLR  R17
0012b7 2722      	CLR  R18
0012b8 2733      	CLR  R19
0012b9 2744      	CLR  R20
0012ba 2755      	CLR  R21
0012bb e290      	LDI  R25,32
                 __DIVF212:
0012bc 17ae      	CP   R26,R30
0012bd 07bf      	CPC  R27,R31
0012be 0786      	CPC  R24,R22
0012bf 0741      	CPC  R20,R17
0012c0 f030      	BRLO __DIVF213
0012c1 1bae      	SUB  R26,R30
0012c2 0bbf      	SBC  R27,R31
0012c3 0b86      	SBC  R24,R22
0012c4 0b41      	SBC  R20,R17
0012c5 9408      	SEC
0012c6 c001      	RJMP __DIVF214
                 __DIVF213:
0012c7 9488      	CLC
                 __DIVF214:
0012c8 1f55      	ROL  R21
0012c9 1f22      	ROL  R18
0012ca 1f33      	ROL  R19
0012cb 1c11      	ROL  R1
0012cc 1faa      	ROL  R26
0012cd 1fbb      	ROL  R27
0012ce 1f88      	ROL  R24
0012cf 1f44      	ROL  R20
0012d0 959a      	DEC  R25
0012d1 f751      	BRNE __DIVF212
0012d2 01f9      	MOVW R30,R18
0012d3 2d61      	MOV  R22,R1
0012d4 914f      	POP  R20
0012d5 913f      	POP  R19
0012d6 912f      	POP  R18
0012d7 911f      	POP  R17
0012d8 2366      	TST  R22
0012d9 f032      	BRMI __DIVF215
0012da 0f55      	LSL  R21
0012db 1fee      	ROL  R30
0012dc 1fff      	ROL  R31
0012dd 1f66      	ROL  R22
0012de 957a      	DEC  R23
0012df f243      	BRVS __DIVF217
                 __DIVF215:
0012e0 de7f      	RCALL __ROUND_REPACK
0012e1 915f      	POP  R21
0012e2 9508      	RET
                 
                 __CMPF12:
0012e3 2399      	TST  R25
0012e4 f09a      	BRMI __CMPF120
0012e5 2377      	TST  R23
0012e6 f042      	BRMI __CMPF121
0012e7 1797      	CP   R25,R23
0012e8 f048      	BRLO __CMPF122
0012e9 f429      	BRNE __CMPF121
0012ea 17ae      	CP   R26,R30
0012eb 07bf      	CPC  R27,R31
0012ec 0786      	CPC  R24,R22
0012ed f020      	BRLO __CMPF122
0012ee f031      	BREQ __CMPF123
                 __CMPF121:
0012ef 9498      	CLZ
0012f0 9488      	CLC
0012f1 9508      	RET
                 __CMPF122:
0012f2 9498      	CLZ
0012f3 9408      	SEC
0012f4 9508      	RET
                 __CMPF123:
0012f5 9418      	SEZ
0012f6 9488      	CLC
0012f7 9508      	RET
                 __CMPF120:
0012f8 2377      	TST  R23
0012f9 f7c2      	BRPL __CMPF122
0012fa 1797      	CP   R25,R23
0012fb f398      	BRLO __CMPF121
0012fc f7a9      	BRNE __CMPF122
0012fd 17ea      	CP   R30,R26
0012fe 07fb      	CPC  R31,R27
0012ff 0768      	CPC  R22,R24
001300 f388      	BRLO __CMPF122
001301 f399      	BREQ __CMPF123
001302 cfec      	RJMP __CMPF121
                 
                 __ANEGW1:
001303 95f1      	NEG  R31
001304 95e1      	NEG  R30
001305 40f0      	SBCI R31,0
001306 9508      	RET
                 
                 __ANEGD1:
001307 95f0      	COM  R31
001308 9560      	COM  R22
001309 9570      	COM  R23
00130a 95e1      	NEG  R30
00130b 4fff      	SBCI R31,-1
00130c 4f6f      	SBCI R22,-1
00130d 4f7f      	SBCI R23,-1
00130e 9508      	RET
                 
                 __LSLB12:
00130f 23ee      	TST  R30
001310 2e0e      	MOV  R0,R30
001311 2fea      	MOV  R30,R26
001312 f019      	BREQ __LSLB12R
                 __LSLB12L:
001313 0fee      	LSL  R30
001314 940a      	DEC  R0
001315 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001316 9508      	RET
                 
                 __LSRB12:
001317 23ee      	TST  R30
001318 2e0e      	MOV  R0,R30
001319 2fea      	MOV  R30,R26
00131a f019      	BREQ __LSRB12R
                 __LSRB12L:
00131b 95e6      	LSR  R30
00131c 940a      	DEC  R0
00131d f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00131e 9508      	RET
                 
                 __LSLW2:
00131f 0fee      	LSL  R30
001320 1fff      	ROL  R31
001321 0fee      	LSL  R30
001322 1fff      	ROL  R31
001323 9508      	RET
                 
                 __ASRW2:
001324 95f5      	ASR  R31
001325 95e7      	ROR  R30
001326 95f5      	ASR  R31
001327 95e7      	ROR  R30
001328 9508      	RET
                 
                 __CWD1:
001329 2f6f      	MOV  R22,R31
00132a 0f66      	ADD  R22,R22
00132b 0b66      	SBC  R22,R22
00132c 2f76      	MOV  R23,R22
00132d 9508      	RET
                 
                 __CWD2:
00132e 2f8b      	MOV  R24,R27
00132f 0f88      	ADD  R24,R24
001330 0b88      	SBC  R24,R24
001331 2f98      	MOV  R25,R24
001332 9508      	RET
                 
                 __MULW12U:
001333 9ffa      	MUL  R31,R26
001334 2df0      	MOV  R31,R0
001335 9feb      	MUL  R30,R27
001336 0df0      	ADD  R31,R0
001337 9fea      	MUL  R30,R26
001338 2de0      	MOV  R30,R0
001339 0df1      	ADD  R31,R1
00133a 9508      	RET
                 
                 __MULD12U:
00133b 9f7a      	MUL  R23,R26
00133c 2d70      	MOV  R23,R0
00133d 9f6b      	MUL  R22,R27
00133e 0d70      	ADD  R23,R0
00133f 9ff8      	MUL  R31,R24
001340 0d70      	ADD  R23,R0
001341 9fe9      	MUL  R30,R25
001342 0d70      	ADD  R23,R0
001343 9f6a      	MUL  R22,R26
001344 2d60      	MOV  R22,R0
001345 0d71      	ADD  R23,R1
001346 9ffb      	MUL  R31,R27
001347 0d60      	ADD  R22,R0
001348 1d71      	ADC  R23,R1
001349 9fe8      	MUL  R30,R24
00134a 0d60      	ADD  R22,R0
00134b 1d71      	ADC  R23,R1
00134c 2788      	CLR  R24
00134d 9ffa      	MUL  R31,R26
00134e 2df0      	MOV  R31,R0
00134f 0d61      	ADD  R22,R1
001350 1f78      	ADC  R23,R24
001351 9feb      	MUL  R30,R27
001352 0df0      	ADD  R31,R0
001353 1d61      	ADC  R22,R1
001354 1f78      	ADC  R23,R24
001355 9fea      	MUL  R30,R26
001356 2de0      	MOV  R30,R0
001357 0df1      	ADD  R31,R1
001358 1f68      	ADC  R22,R24
001359 1f78      	ADC  R23,R24
00135a 9508      	RET
                 
                 __MULW12:
00135b d025      	RCALL __CHKSIGNW
00135c dfd6      	RCALL __MULW12U
00135d f40e      	BRTC __MULW121
00135e dfa4      	RCALL __ANEGW1
                 __MULW121:
00135f 9508      	RET
                 
                 __DIVW21U:
001360 2400      	CLR  R0
001361 2411      	CLR  R1
001362 e190      	LDI  R25,16
                 __DIVW21U1:
001363 0faa      	LSL  R26
001364 1fbb      	ROL  R27
001365 1c00      	ROL  R0
001366 1c11      	ROL  R1
001367 1a0e      	SUB  R0,R30
001368 0a1f      	SBC  R1,R31
001369 f418      	BRCC __DIVW21U2
00136a 0e0e      	ADD  R0,R30
00136b 1e1f      	ADC  R1,R31
00136c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00136d 60a1      	SBR  R26,1
                 __DIVW21U3:
00136e 959a      	DEC  R25
00136f f799      	BRNE __DIVW21U1
001370 01fd      	MOVW R30,R26
001371 01d0      	MOVW R26,R0
001372 9508      	RET
                 
                 __MODW21:
001373 94e8      	CLT
001374 ffb7      	SBRS R27,7
001375 c004      	RJMP __MODW211
001376 95a0      	COM  R26
001377 95b0      	COM  R27
001378 9611      	ADIW R26,1
001379 9468      	SET
                 __MODW211:
00137a fdf7      	SBRC R31,7
00137b df87      	RCALL __ANEGW1
00137c dfe3      	RCALL __DIVW21U
00137d 01fd      	MOVW R30,R26
00137e f40e      	BRTC __MODW212
00137f df83      	RCALL __ANEGW1
                 __MODW212:
001380 9508      	RET
                 
                 __CHKSIGNW:
001381 94e8      	CLT
001382 fff7      	SBRS R31,7
001383 c002      	RJMP __CHKSW1
001384 df7e      	RCALL __ANEGW1
001385 9468      	SET
                 __CHKSW1:
001386 ffb7      	SBRS R27,7
001387 c006      	RJMP __CHKSW2
001388 95a0      	COM  R26
001389 95b0      	COM  R27
00138a 9611      	ADIW R26,1
00138b f800      	BLD  R0,0
00138c 9403      	INC  R0
00138d fa00      	BST  R0,0
                 __CHKSW2:
00138e 9508      	RET
                 
                 __GETW1P:
00138f 91ed      	LD   R30,X+
001390 91fc      	LD   R31,X
001391 9711      	SBIW R26,1
001392 9508      	RET
                 
                 __PUTDP1:
001393 93ed      	ST   X+,R30
001394 93fd      	ST   X+,R31
001395 936d      	ST   X+,R22
001396 937c      	ST   X,R23
001397 9508      	RET
                 
                 __GETD1S0:
001398 81e8      	LD   R30,Y
001399 81f9      	LDD  R31,Y+1
00139a 816a      	LDD  R22,Y+2
00139b 817b      	LDD  R23,Y+3
00139c 9508      	RET
                 
                 __GETD2S0:
00139d 81a8      	LD   R26,Y
00139e 81b9      	LDD  R27,Y+1
00139f 818a      	LDD  R24,Y+2
0013a0 819b      	LDD  R25,Y+3
0013a1 9508      	RET
                 
                 __PUTD1S0:
0013a2 83e8      	ST   Y,R30
0013a3 83f9      	STD  Y+1,R31
0013a4 836a      	STD  Y+2,R22
0013a5 837b      	STD  Y+3,R23
0013a6 9508      	RET
                 
                 __PUTPARD1:
0013a7 937a      	ST   -Y,R23
0013a8 936a      	ST   -Y,R22
0013a9 93fa      	ST   -Y,R31
0013aa 93ea      	ST   -Y,R30
0013ab 9508      	RET
                 
                 __PUTPARD2:
0013ac 939a      	ST   -Y,R25
0013ad 938a      	ST   -Y,R24
0013ae 93ba      	ST   -Y,R27
0013af 93aa      	ST   -Y,R26
0013b0 9508      	RET
                 
                 __CDF2U:
0013b1 9468      	SET
0013b2 c001      	RJMP __CDF2U0
                 __CDF2:
0013b3 94e8      	CLT
                 __CDF2U0:
0013b4 d001      	RCALL __SWAPD12
0013b5 de11      	RCALL __CDF1U0
                 
                 __SWAPD12:
0013b6 2e18      	MOV  R1,R24
0013b7 2f86      	MOV  R24,R22
0013b8 2d61      	MOV  R22,R1
0013b9 2e19      	MOV  R1,R25
0013ba 2f97      	MOV  R25,R23
0013bb 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0013bc 2e1b      	MOV  R1,R27
0013bd 2fbf      	MOV  R27,R31
0013be 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0013bf 2e1a      	MOV  R1,R26
0013c0 2fae      	MOV  R26,R30
0013c1 2de1      	MOV  R30,R1
0013c2 9508      	RET
                 
                 __EEPROMRDB:
0013c3 99e1      	SBIC EECR,EEWE
0013c4 cffe      	RJMP __EEPROMRDB
0013c5 93ff      	PUSH R31
0013c6 b7ff      	IN   R31,SREG
0013c7 94f8      	CLI
0013c8 bbae      	OUT  EEARL,R26
0013c9 bbbf      	OUT  EEARH,R27
0013ca 9ae0      	SBI  EECR,EERE
0013cb b3ed      	IN   R30,EEDR
0013cc bfff      	OUT  SREG,R31
0013cd 91ff      	POP  R31
0013ce 9508      	RET
                 
                 __EEPROMWRB:
0013cf 9be1      	SBIS EECR,EEWE
0013d0 c002      	RJMP __EEPROMWRB1
0013d1 95a8      	WDR
0013d2 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0013d3 b79f      	IN   R25,SREG
0013d4 94f8      	CLI
0013d5 bbae      	OUT  EEARL,R26
0013d6 bbbf      	OUT  EEARH,R27
0013d7 9ae0      	SBI  EECR,EERE
0013d8 b38d      	IN   R24,EEDR
0013d9 17e8      	CP   R30,R24
0013da f019      	BREQ __EEPROMWRB0
0013db bbed      	OUT  EEDR,R30
0013dc 9ae2      	SBI  EECR,EEMWE
0013dd 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0013de bf9f      	OUT  SREG,R25
0013df 9508      	RET
                 
                 __CPD10:
0013e0 9730      	SBIW R30,0
0013e1 4060      	SBCI R22,0
0013e2 4070      	SBCI R23,0
0013e3 9508      	RET
                 
                 __CPW02:
0013e4 2400      	CLR  R0
0013e5 160a      	CP   R0,R26
0013e6 060b      	CPC  R0,R27
0013e7 9508      	RET
                 
                 __CPD02:
0013e8 2400      	CLR  R0
0013e9 160a      	CP   R0,R26
0013ea 060b      	CPC  R0,R27
0013eb 0608      	CPC  R0,R24
0013ec 0609      	CPC  R0,R25
0013ed 9508      	RET
                 
                 __CPD12:
0013ee 17ea      	CP   R30,R26
0013ef 07fb      	CPC  R31,R27
0013f0 0768      	CPC  R22,R24
0013f1 0779      	CPC  R23,R25
0013f2 9508      	RET
                 
                 __SAVELOCR6:
0013f3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0013f4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0013f5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0013f6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0013f7 931a      	ST   -Y,R17
0013f8 930a      	ST   -Y,R16
0013f9 9508      	RET
                 
                 __LOADLOCR6:
0013fa 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0013fb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0013fc 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0013fd 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0013fe 8119      	LDD  R17,Y+1
0013ff 8108      	LD   R16,Y
001400 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  71 r1 :  49 r2 :   0 r3 :   0 r4 :   8 r5 :   4 r6 :   7 r7 :   1 
r8 :   5 r9 :   3 r10:   5 r11:   3 r12:   5 r13:   3 r14:   0 r15:   2 
r16:  99 r17: 143 r18:  66 r19:  64 r20:  59 r21: 105 r22: 133 r23: 127 
r24: 100 r25:  84 r26: 521 r27: 208 r28:  36 r29:   1 r30:1036 r31: 294 
x  :  16 y  : 860 z  :  21 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  42 add   :  48 
adiw  :  40 and   :  15 andi  :  27 asr   :   2 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  57 
brge  :  18 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  30 
brlt  :  16 brmi  :  13 brne  : 112 brpl  :  12 brsh  :  31 brtc  :   4 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 call  : 379 
cbi   :  10 cbr   :   1 clc   :   3 clh   :   0 cli   :   3 cln   :   0 
clr   :  81 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :  20 
cp    :  53 cpc   :  50 cpi   : 127 cpse  :   0 dec   :  12 des   :   0 
eor   :   8 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   8 inc   :   9 jmp   :  47 ld    :  54 ldd   : 452 ldi   : 406 
lds   :  45 lpm   :  29 lsl   :  23 lsr   :  23 mov   : 172 movw  :  81 
mul   :  22 muls  :   0 mulsu :   0 neg   :   4 nop   :   2 or    :   6 
ori   :   2 out   :  52 pop   :  51 push  :  51 rcall : 119 ret   : 139 
reti  :   1 rjmp  : 186 rol   :  35 ror   :  19 sbc   :  23 sbci  :  27 
sbi   :  20 sbic  :   1 sbis  :   1 sbiw  :  31 sbr   :   3 sbrc  :   2 
sbrs  :   6 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 250 std   : 121 sts   :  29 sub   :  28 subi  :  68 swap  :   1 
tst   :  28 wdr   :   2 
Instructions used: 85 out of 116 (73.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002802   8886   1356  10242   16384  62.5%
[.dseg] 0x000060 0x00018f      0     47     47    1024   4.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 14 warnings

# -*- coding: utf-8 -*-
"""HW6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X9W6nleSZiqf_rV_llc3nuj7dXBdjOsX
"""

from google.colab import drive
drive.mount('/content/drive')

"""# **---------------------------------------------- Q3 ----------------------------------------------**

# **3-1**
"""

import pandas as pd

dataframe=pd.read_csv('/content/drive/MyDrive/Cereals.csv')
dataframe.head()

"""# **3-2**"""

numeric_columns = dataframe.select_dtypes(include=['float64', 'int64']).columns

summary_stats = dataframe[numeric_columns].describe().T
summary_stats['median'] = dataframe[numeric_columns].median()
summary_stats = summary_stats[['mean', 'median', 'min', 'max', 'std']]

print(summary_stats)

"""# **3-3**"""

import matplotlib.pyplot as plt

for column in numeric_columns:
    plt.figure(figsize=(6, 3))
    plt.hist(dataframe[column].dropna(), bins=30, edgecolor='k', alpha=0.7)
    plt.title(f'Histogram of {column}')
    plt.xlabel(column)
    plt.ylabel('Frequency')
    plt.grid(False)
    plt.show()
    print("\n")

std_devs = dataframe[numeric_columns].std()

highest_variability_variable = std_devs.idxmax()
highest_variability_value = std_devs.max()

print(f"Variable with highest variability: {highest_variability_variable}")
print(f"Standard deviation of this variable: {highest_variability_value}")

skewness = dataframe[numeric_columns].skew()

print("Skewness of numeric variables:")
print(skewness)

"""# **3-4**"""

import seaborn as sns

cold_cereals = dataframe[dataframe['type'] == 'C']
hot_cereals = dataframe[dataframe['type'] == 'H']

df_box = dataframe[['type', 'calories']]

plt.figure(figsize=(8, 4))
sns.boxplot(x='type', y='calories', data=df_box, palette="coolwarm")
plt.title('Comparison of Calories in Cold and Hot Cereals')
plt.xlabel('Type of Cereal')
plt.ylabel('Calories')
plt.show()

"""# **3-5**"""

df_box = dataframe[['shelf', 'rating']]

plt.figure(figsize=(8, 4))
sns.boxplot(x='shelf', y='rating', data=df_box, palette="coolwarm")
plt.title('Consumer Ratings by Shelf Height')
plt.xlabel('Shelf Height')
plt.ylabel('Consumer Rating')
plt.show()

"""# **3-6**"""

correlation_matrix = dataframe[numeric_columns].corr()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Matrix of Numerical Variables')
plt.show()

"""# **---------------------------------------------- Q4 ----------------------------------------------**

# **4-1**
"""

dataframe2=pd.read_csv('/content/drive/MyDrive/diabetes.csv')
dataframe2.head()

dataframe2.info()

"""# **4-2**"""

missing_values = dataframe2.isnull().sum()
print(missing_values)

"""# **4-3**"""

summary = dataframe2.describe()

min_values = summary.loc['min']
print(min_values)

"""# **4-4**"""

import numpy as np

dataframe2.replace(0, np.nan, inplace=True)

print(dataframe2.head())

from sklearn.impute import SimpleImputer

imputer_mean = SimpleImputer(strategy='mean')
dataframe_mean = pd.DataFrame(imputer_mean.fit_transform(dataframe2), columns=dataframe2.columns)

print("Using mean strategy:\n", dataframe_mean.head())

imputer_mode = SimpleImputer(strategy='most_frequent')
dataframe_mode = pd.DataFrame(imputer_mode.fit_transform(dataframe2), columns=dataframe2.columns)

print("\nUsing mode strategy:\n", dataframe_mode.head())